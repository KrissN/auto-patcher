diff -Npruw stock-framework/smali/android/app/Activity.smali pdroid-framework/smali/android/app/Activity.smali
--- stock-framework/smali/android/app/Activity.smali	2014-01-02 21:10:17.352311330 -0600
+++ pdroid-framework/smali/android/app/Activity.smali	2014-01-02 21:10:32.252310939 -0600
@@ -1719,7 +1719,7 @@
 
     invoke-virtual {p3, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
-    const-string v1, "mLoadersStarted="
+    const-string/jumbo v1, "mLoadersStarted="
 
     invoke-virtual {p3, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
@@ -1749,7 +1749,7 @@
 
     iget-object v1, p0, Landroid/app/Activity;->mLoaderManager:Landroid/app/LoaderManagerImpl;
 
-    if-eqz v1, :cond_aa
+    if-eqz v1, :cond_ab
 
     invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
@@ -1795,7 +1795,7 @@
 
     invoke-virtual {v1, v2, p2, p3, p4}, Landroid/app/LoaderManagerImpl;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
 
-    :cond_aa
+    :cond_ab
     iget-object v1, p0, Landroid/app/Activity;->mFragments:Landroid/app/FragmentManagerImpl;
 
     invoke-virtual {v1, p1, p2, p3, p4}, Landroid/app/FragmentManagerImpl;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
diff -Npruw stock-framework/smali/android/app/ContextImpl$10.smali pdroid-framework/smali/android/app/ContextImpl$10.smali
--- stock-framework/smali/android/app/ContextImpl$10.smali	2014-01-02 21:10:17.676311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$10.smali	2014-01-02 21:10:32.756310926 -0600
@@ -26,21 +26,31 @@
 
 # virtual methods
 .method public createStaticService()Ljava/lang/Object;
-    .registers 4
+    .registers 5
 
-    const-string v1, "connectivity"
+    const-string v2, "connectivity"
 
-    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
 
     move-result-object v0
 
-    new-instance v1, Landroid/net/ConnectivityManager;
+    const-string v2, "ContextImpl"
+
+    const-string v3, "PDroid:ContextImpl: returning PrivacyConnectivityManager"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     invoke-static {v0}, Landroid/net/IConnectivityManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/IConnectivityManager;
 
-    move-result-object v2
+    move-result-object v1
+
+    new-instance v2, Landroid/privacy/surrogate/PrivacyConnectivityManager;
+
+    invoke-static {}, Landroid/app/ContextImpl;->getStaticOuterContext()Landroid/content/Context;
+
+    move-result-object v3
 
-    invoke-direct {v1, v2}, Landroid/net/ConnectivityManager;-><init>(Landroid/net/IConnectivityManager;)V
+    invoke-direct {v2, v1, v3}, Landroid/privacy/surrogate/PrivacyConnectivityManager;-><init>(Landroid/net/IConnectivityManager;Landroid/content/Context;)V
 
-    return-object v1
+    return-object v2
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$22.smali pdroid-framework/smali/android/app/ContextImpl$22.smali
--- stock-framework/smali/android/app/ContextImpl$22.smali	2014-01-02 21:10:17.680311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$22.smali	2014-01-02 21:10:32.760310926 -0600
@@ -26,7 +26,7 @@
 
 # virtual methods
 .method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
-    .registers 5
+    .registers 6
 
     const-string v1, "location"
 
@@ -34,13 +34,23 @@
 
     move-result-object v0
 
-    new-instance v1, Landroid/location/LocationManager;
+    const-string v1, "ContextImpl"
+
+    const-string v2, "PDroid:ContextImpl: returning PrivacyLocationManager"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v1, Landroid/privacy/surrogate/PrivacyLocationManager;
 
     invoke-static {v0}, Landroid/location/ILocationManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/location/ILocationManager;
 
     move-result-object v2
 
-    invoke-direct {v1, p1, v2}, Landroid/location/LocationManager;-><init>(Landroid/content/Context;Landroid/location/ILocationManager;)V
+    invoke-static {}, Landroid/app/ContextImpl;->getStaticOuterContext()Landroid/content/Context;
+
+    move-result-object v3
+
+    invoke-direct {v1, v2, v3}, Landroid/privacy/surrogate/PrivacyLocationManager;-><init>(Landroid/location/ILocationManager;Landroid/content/Context;)V
 
     return-object v1
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$31.smali pdroid-framework/smali/android/app/ContextImpl$31.smali
--- stock-framework/smali/android/app/ContextImpl$31.smali	2014-01-02 21:10:17.684311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$31.smali	2014-01-02 21:10:32.764310926 -0600
@@ -28,13 +28,19 @@
 .method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
     .registers 4
 
-    new-instance v0, Landroid/telephony/TelephonyManager;
+    const-string v0, "ContextImpl"
+
+    const-string v1, "PDroid:ContextImpl: returning PrivacyTelephonyManager"
+
+    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v0, Landroid/privacy/surrogate/PrivacyTelephonyManager;
 
     invoke-virtual {p1}, Landroid/app/ContextImpl;->getOuterContext()Landroid/content/Context;
 
     move-result-object v1
 
-    invoke-direct {v0, v1}, Landroid/telephony/TelephonyManager;-><init>(Landroid/content/Context;)V
+    invoke-direct {v0, v1}, Landroid/privacy/surrogate/PrivacyTelephonyManager;-><init>(Landroid/content/Context;)V
 
     return-object v0
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$36.smali pdroid-framework/smali/android/app/ContextImpl$36.smali
--- stock-framework/smali/android/app/ContextImpl$36.smali	2014-01-02 21:10:17.684311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$36.smali	2014-01-02 21:10:32.768310926 -0600
@@ -38,13 +38,19 @@
 
     move-result-object v1
 
-    new-instance v2, Landroid/net/wifi/WifiManager;
+    const-string v2, "ContextImpl"
+
+    const-string v3, "PDroid:ContextImpl: returning PrivacyWifiManager"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v2, Landroid/privacy/surrogate/PrivacyWifiManager;
 
     invoke-virtual {p1}, Landroid/app/ContextImpl;->getOuterContext()Landroid/content/Context;
 
     move-result-object v3
 
-    invoke-direct {v2, v3, v1}, Landroid/net/wifi/WifiManager;-><init>(Landroid/content/Context;Landroid/net/wifi/IWifiManager;)V
+    invoke-direct {v2, v3, v1}, Landroid/privacy/surrogate/PrivacyWifiManager;-><init>(Landroid/content/Context;Landroid/net/wifi/IWifiManager;)V
 
     return-object v2
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$38.smali pdroid-framework/smali/android/app/ContextImpl$38.smali
--- stock-framework/smali/android/app/ContextImpl$38.smali	2014-01-02 21:10:17.684311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$38.smali	2014-01-02 21:10:32.768310926 -0600
@@ -1,5 +1,5 @@
 .class final Landroid/app/ContextImpl$38;
-.super Landroid/app/ContextImpl$ServiceFetcher;
+.super Landroid/app/ContextImpl$StaticServiceFetcher;
 .source "ContextImpl.java"
 
 
@@ -18,45 +18,39 @@
 .method constructor <init>()V
     .registers 1
 
-    invoke-direct {p0}, Landroid/app/ContextImpl$ServiceFetcher;-><init>()V
+    invoke-direct {p0}, Landroid/app/ContextImpl$StaticServiceFetcher;-><init>()V
 
     return-void
 .end method
 
 
 # virtual methods
-.method public getService(Landroid/app/ContextImpl;)Ljava/lang/Object;
-    .registers 6
+.method public createStaticService()Ljava/lang/Object;
+    .registers 5
 
-    #getter for: Landroid/app/ContextImpl;->mDisplay:Landroid/view/Display;
-    invoke-static {p1}, Landroid/app/ContextImpl;->access$100(Landroid/app/ContextImpl;)Landroid/view/Display;
+    const-string v2, "ContextImpl"
 
-    move-result-object v0
+    const-string v3, "PDroid:ContextImpl: Creating static privacy service"
 
-    if-nez v0, :cond_17
+    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    invoke-virtual {p1}, Landroid/app/ContextImpl;->getOuterContext()Landroid/content/Context;
+    const-string/jumbo v2, "privacy"
 
-    move-result-object v2
+    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
 
-    const-string v3, "display"
+    move-result-object v0
 
-    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+    invoke-static {v0}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
 
     move-result-object v1
 
-    check-cast v1, Landroid/hardware/display/DisplayManager;
-
-    const/4 v2, 0x0
+    new-instance v2, Landroid/privacy/PrivacySettingsManager;
 
-    invoke-virtual {v1, v2}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;
-
-    move-result-object v0
+    invoke-static {}, Landroid/app/ContextImpl;->getStaticOuterContext()Landroid/content/Context;
 
-    :cond_17
-    new-instance v2, Landroid/view/WindowManagerImpl;
+    move-result-object v3
 
-    invoke-direct {v2, v0}, Landroid/view/WindowManagerImpl;-><init>(Landroid/view/Display;)V
+    invoke-direct {v2, v3, v1}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
 
     return-object v2
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$39.smali pdroid-framework/smali/android/app/ContextImpl$39.smali
--- stock-framework/smali/android/app/ContextImpl$39.smali	2014-01-02 21:10:17.684311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$39.smali	2014-01-02 21:10:32.768310926 -0600
@@ -25,22 +25,38 @@
 
 
 # virtual methods
-.method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
-    .registers 5
+.method public getService(Landroid/app/ContextImpl;)Ljava/lang/Object;
+    .registers 6
 
-    const-string/jumbo v2, "user"
-
-    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+    #getter for: Landroid/app/ContextImpl;->mDisplay:Landroid/view/Display;
+    invoke-static {p1}, Landroid/app/ContextImpl;->access$100(Landroid/app/ContextImpl;)Landroid/view/Display;
 
     move-result-object v0
 
-    invoke-static {v0}, Landroid/os/IUserManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IUserManager;
+    if-nez v0, :cond_17
+
+    invoke-virtual {p1}, Landroid/app/ContextImpl;->getOuterContext()Landroid/content/Context;
+
+    move-result-object v2
+
+    const-string v3, "display"
+
+    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
 
     move-result-object v1
 
-    new-instance v2, Landroid/os/UserManager;
+    check-cast v1, Landroid/hardware/display/DisplayManager;
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v1, v2}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;
+
+    move-result-object v0
+
+    :cond_17
+    new-instance v2, Landroid/view/WindowManagerImpl;
 
-    invoke-direct {v2, p1, v1}, Landroid/os/UserManager;-><init>(Landroid/content/Context;Landroid/os/IUserManager;)V
+    invoke-direct {v2, v0}, Landroid/view/WindowManagerImpl;-><init>(Landroid/view/Display;)V
 
     return-object v2
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$3.smali pdroid-framework/smali/android/app/ContextImpl$3.smali
--- stock-framework/smali/android/app/ContextImpl$3.smali	2014-01-02 21:10:17.684311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$3.smali	2014-01-02 21:10:32.768310926 -0600
@@ -26,7 +26,7 @@
 
 # virtual methods
 .method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
-    .registers 5
+    .registers 6
 
     const-string v2, "account"
 
@@ -38,9 +38,15 @@
 
     move-result-object v1
 
-    new-instance v2, Landroid/accounts/AccountManager;
+    const-string v2, "ContextImpl"
 
-    invoke-direct {v2, p1, v1}, Landroid/accounts/AccountManager;-><init>(Landroid/content/Context;Landroid/accounts/IAccountManager;)V
+    const-string v3, "PDroid:ContextImpl: returning PrivacyAccountManager rather than AccountManager"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v2, Landroid/privacy/surrogate/PrivacyAccountManager;
+
+    invoke-direct {v2, p1, v1}, Landroid/privacy/surrogate/PrivacyAccountManager;-><init>(Landroid/content/Context;Landroid/accounts/IAccountManager;)V
 
     return-object v2
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$40.smali pdroid-framework/smali/android/app/ContextImpl$40.smali
--- stock-framework/smali/android/app/ContextImpl$40.smali	2014-01-02 21:10:17.684311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$40.smali	2014-01-02 21:10:32.768310926 -0600
@@ -28,19 +28,19 @@
 .method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
     .registers 5
 
-    invoke-virtual {p1}, Landroid/app/ContextImpl;->getOuterContext()Landroid/content/Context;
+    const-string/jumbo v2, "user"
 
-    move-result-object v0
+    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
 
-    new-instance v1, Landroid/app/ProfileManager;
+    move-result-object v0
 
-    iget-object v2, p1, Landroid/app/ContextImpl;->mMainThread:Landroid/app/ActivityThread;
+    invoke-static {v0}, Landroid/os/IUserManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IUserManager;
 
-    invoke-virtual {v2}, Landroid/app/ActivityThread;->getHandler()Landroid/os/Handler;
+    move-result-object v1
 
-    move-result-object v2
+    new-instance v2, Landroid/os/UserManager;
 
-    invoke-direct {v1, v0, v2}, Landroid/app/ProfileManager;-><init>(Landroid/content/Context;Landroid/os/Handler;)V
+    invoke-direct {v2, p1, v1}, Landroid/os/UserManager;-><init>(Landroid/content/Context;Landroid/os/IUserManager;)V
 
-    return-object v1
+    return-object v2
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$41.smali pdroid-framework/smali/android/app/ContextImpl$41.smali
--- stock-framework/smali/android/app/ContextImpl$41.smali	2014-01-02 21:10:17.688311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$41.smali	2014-01-02 21:10:32.772310925 -0600
@@ -26,17 +26,21 @@
 
 # virtual methods
 .method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
-    .registers 3
+    .registers 5
 
-    iget-object v0, p1, Landroid/app/ContextImpl;->mMainThread:Landroid/app/ActivityThread;
-
-    invoke-virtual {v0}, Landroid/app/ActivityThread;->getHandler()Landroid/os/Handler;
+    invoke-virtual {p1}, Landroid/app/ContextImpl;->getOuterContext()Landroid/content/Context;
 
     move-result-object v0
 
-    invoke-static {p1, v0}, Landroid/net/wimax/WimaxHelper;->createWimaxService(Landroid/content/Context;Landroid/os/Handler;)Ljava/lang/Object;
+    new-instance v1, Landroid/app/ProfileManager;
 
-    move-result-object v0
+    iget-object v2, p1, Landroid/app/ContextImpl;->mMainThread:Landroid/app/ActivityThread;
+
+    invoke-virtual {v2}, Landroid/app/ActivityThread;->getHandler()Landroid/os/Handler;
+
+    move-result-object v2
+
+    invoke-direct {v1, v0, v2}, Landroid/app/ProfileManager;-><init>(Landroid/content/Context;Landroid/os/Handler;)V
 
-    return-object v0
+    return-object v1
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$42.smali pdroid-framework/smali/android/app/ContextImpl$42.smali
--- stock-framework/smali/android/app/ContextImpl$42.smali	2014-01-02 21:10:17.688311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$42.smali	2014-01-02 21:10:32.772310925 -0600
@@ -26,21 +26,17 @@
 
 # virtual methods
 .method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
-    .registers 5
+    .registers 3
 
-    const-string v2, "fm_receiver"
+    iget-object v0, p1, Landroid/app/ContextImpl;->mMainThread:Landroid/app/ActivityThread;
 
-    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+    invoke-virtual {v0}, Landroid/app/ActivityThread;->getHandler()Landroid/os/Handler;
 
     move-result-object v0
 
-    invoke-static {v0}, Lcom/stericsson/hardware/fm/IFmReceiver$Stub;->asInterface(Landroid/os/IBinder;)Lcom/stericsson/hardware/fm/IFmReceiver;
+    invoke-static {p1, v0}, Landroid/net/wimax/WimaxHelper;->createWimaxService(Landroid/content/Context;Landroid/os/Handler;)Ljava/lang/Object;
 
-    move-result-object v1
-
-    new-instance v2, Lcom/stericsson/hardware/fm/FmReceiverImpl;
-
-    invoke-direct {v2, v1}, Lcom/stericsson/hardware/fm/FmReceiverImpl;-><init>(Lcom/stericsson/hardware/fm/IFmReceiver;)V
+    move-result-object v0
 
-    return-object v2
+    return-object v0
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$43.smali pdroid-framework/smali/android/app/ContextImpl$43.smali
--- stock-framework/smali/android/app/ContextImpl$43.smali	2014-01-02 21:10:17.688311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$43.smali	2014-01-02 21:10:32.772310925 -0600
@@ -28,19 +28,19 @@
 .method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
     .registers 5
 
-    const-string v2, "fm_transmitter"
+    const-string v2, "fm_receiver"
 
     invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
 
     move-result-object v0
 
-    invoke-static {v0}, Lcom/stericsson/hardware/fm/IFmTransmitter$Stub;->asInterface(Landroid/os/IBinder;)Lcom/stericsson/hardware/fm/IFmTransmitter;
+    invoke-static {v0}, Lcom/stericsson/hardware/fm/IFmReceiver$Stub;->asInterface(Landroid/os/IBinder;)Lcom/stericsson/hardware/fm/IFmReceiver;
 
     move-result-object v1
 
-    new-instance v2, Lcom/stericsson/hardware/fm/FmTransmitterImpl;
+    new-instance v2, Lcom/stericsson/hardware/fm/FmReceiverImpl;
 
-    invoke-direct {v2, v1}, Lcom/stericsson/hardware/fm/FmTransmitterImpl;-><init>(Lcom/stericsson/hardware/fm/IFmTransmitter;)V
+    invoke-direct {v2, v1}, Lcom/stericsson/hardware/fm/FmReceiverImpl;-><init>(Lcom/stericsson/hardware/fm/IFmReceiver;)V
 
     return-object v2
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$44.smali pdroid-framework/smali/android/app/ContextImpl$44.smali
--- stock-framework/smali/android/app/ContextImpl$44.smali	2014-01-02 21:10:17.688311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$44.smali	2014-01-02 21:10:32.772310925 -0600
@@ -28,19 +28,19 @@
 .method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
     .registers 5
 
-    const-string v2, "appops"
+    const-string v2, "fm_transmitter"
 
     invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
 
     move-result-object v0
 
-    invoke-static {v0}, Lcom/android/internal/app/IAppOpsService$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/internal/app/IAppOpsService;
+    invoke-static {v0}, Lcom/stericsson/hardware/fm/IFmTransmitter$Stub;->asInterface(Landroid/os/IBinder;)Lcom/stericsson/hardware/fm/IFmTransmitter;
 
     move-result-object v1
 
-    new-instance v2, Landroid/app/AppOpsManager;
+    new-instance v2, Lcom/stericsson/hardware/fm/FmTransmitterImpl;
 
-    invoke-direct {v2, p1, v1}, Landroid/app/AppOpsManager;-><init>(Landroid/content/Context;Lcom/android/internal/app/IAppOpsService;)V
+    invoke-direct {v2, v1}, Lcom/stericsson/hardware/fm/FmTransmitterImpl;-><init>(Lcom/stericsson/hardware/fm/IFmTransmitter;)V
 
     return-object v2
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$45.smali pdroid-framework/smali/android/app/ContextImpl$45.smali
--- stock-framework/smali/android/app/ContextImpl$45.smali	2014-01-02 21:10:17.688311321 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$45.smali	2014-01-02 21:10:32.772310925 -0600
@@ -1,5 +1,5 @@
 .class final Landroid/app/ContextImpl$45;
-.super Landroid/app/ContextImpl$StaticServiceFetcher;
+.super Landroid/app/ContextImpl$ServiceFetcher;
 .source "ContextImpl.java"
 
 
@@ -18,29 +18,29 @@
 .method constructor <init>()V
     .registers 1
 
-    invoke-direct {p0}, Landroid/app/ContextImpl$StaticServiceFetcher;-><init>()V
+    invoke-direct {p0}, Landroid/app/ContextImpl$ServiceFetcher;-><init>()V
 
     return-void
 .end method
 
 
 # virtual methods
-.method public createStaticService()Ljava/lang/Object;
-    .registers 4
+.method public createService(Landroid/app/ContextImpl;)Ljava/lang/Object;
+    .registers 5
 
-    const-string v2, "irda"
+    const-string v2, "appops"
 
     invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
 
     move-result-object v0
 
-    invoke-static {v0}, Landroid/hardware/IIrdaManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/IIrdaManager;
+    invoke-static {v0}, Lcom/android/internal/app/IAppOpsService$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/internal/app/IAppOpsService;
 
     move-result-object v1
 
-    new-instance v2, Landroid/hardware/IrdaManager;
+    new-instance v2, Landroid/app/AppOpsManager;
 
-    invoke-direct {v2, v1}, Landroid/hardware/IrdaManager;-><init>(Landroid/hardware/IIrdaManager;)V
+    invoke-direct {v2, p1, v1}, Landroid/app/AppOpsManager;-><init>(Landroid/content/Context;Lcom/android/internal/app/IAppOpsService;)V
 
     return-object v2
 .end method
diff -Npruw stock-framework/smali/android/app/ContextImpl$46.smali pdroid-framework/smali/android/app/ContextImpl$46.smali
--- stock-framework/smali/android/app/ContextImpl$46.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/app/ContextImpl$46.smali	2014-01-02 21:10:32.772310925 -0600
@@ -0,0 +1,46 @@
+.class final Landroid/app/ContextImpl$46;
+.super Landroid/app/ContextImpl$StaticServiceFetcher;
+.source "ContextImpl.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/app/ContextImpl;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x8
+    name = null
+.end annotation
+
+
+# direct methods
+.method constructor <init>()V
+    .registers 1
+
+    invoke-direct {p0}, Landroid/app/ContextImpl$StaticServiceFetcher;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public createStaticService()Ljava/lang/Object;
+    .registers 4
+
+    const-string v2, "irda"
+
+    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/hardware/IIrdaManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/IIrdaManager;
+
+    move-result-object v1
+
+    new-instance v2, Landroid/hardware/IrdaManager;
+
+    invoke-direct {v2, v1}, Landroid/hardware/IrdaManager;-><init>(Landroid/hardware/IIrdaManager;)V
+
+    return-object v2
+.end method
diff -Npruw stock-framework/smali/android/app/ContextImpl.smali pdroid-framework/smali/android/app/ContextImpl.smali
--- stock-framework/smali/android/app/ContextImpl.smali	2014-01-02 21:10:17.708311320 -0600
+++ pdroid-framework/smali/android/app/ContextImpl.smali	2014-01-02 21:10:32.800310925 -0600
@@ -36,6 +36,8 @@
 
 .field private static sNextPerContextServiceCacheIndex:I
 
+.field private static sOuterContext:Landroid/content/Context;
+
 .field private static final sSharedPrefs:Ljava/util/HashMap;
     .annotation system Ldalvik/annotation/Signature;
         value = {
@@ -118,6 +120,10 @@
 
     sput-object v0, Landroid/app/ContextImpl;->sSharedPrefs:Ljava/util/HashMap;
 
+    const/4 v0, 0x0
+
+    sput-object v0, Landroid/app/ContextImpl;->sOuterContext:Landroid/content/Context;
+
     new-array v0, v1, [Ljava/lang/String;
 
     sput-object v0, Landroid/app/ContextImpl;->EMPTY_FILE_LIST:[Ljava/lang/String;
@@ -430,7 +436,7 @@
 
     invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
 
-    const-string/jumbo v0, "window"
+    const-string/jumbo v0, "privacy"
 
     new-instance v1, Landroid/app/ContextImpl$38;
 
@@ -438,7 +444,7 @@
 
     invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
 
-    const-string/jumbo v0, "user"
+    const-string/jumbo v0, "window"
 
     new-instance v1, Landroid/app/ContextImpl$39;
 
@@ -446,7 +452,7 @@
 
     invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
 
-    const-string/jumbo v0, "profile"
+    const-string/jumbo v0, "user"
 
     new-instance v1, Landroid/app/ContextImpl$40;
 
@@ -454,7 +460,7 @@
 
     invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
 
-    const-string v0, "WiMax"
+    const-string/jumbo v0, "profile"
 
     new-instance v1, Landroid/app/ContextImpl$41;
 
@@ -462,7 +468,7 @@
 
     invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
 
-    const-string v0, "fm_receiver"
+    const-string v0, "WiMax"
 
     new-instance v1, Landroid/app/ContextImpl$42;
 
@@ -470,7 +476,7 @@
 
     invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
 
-    const-string v0, "fm_transmitter"
+    const-string v0, "fm_receiver"
 
     new-instance v1, Landroid/app/ContextImpl$43;
 
@@ -478,7 +484,7 @@
 
     invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
 
-    const-string v0, "appops"
+    const-string v0, "fm_transmitter"
 
     new-instance v1, Landroid/app/ContextImpl$44;
 
@@ -486,7 +492,7 @@
 
     invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
 
-    const-string v0, "irda"
+    const-string v0, "appops"
 
     new-instance v1, Landroid/app/ContextImpl$45;
 
@@ -494,6 +500,14 @@
 
     invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
 
+    const-string v0, "irda"
+
+    new-instance v1, Landroid/app/ContextImpl$46;
+
+    invoke-direct {v1}, Landroid/app/ContextImpl$46;-><init>()V
+
+    invoke-static {v0, v1}, Landroid/app/ContextImpl;->registerService(Ljava/lang/String;Landroid/app/ContextImpl$ServiceFetcher;)V
+
     return-void
 .end method
 
@@ -526,8 +540,21 @@
 
     iput-object v0, p0, Landroid/app/ContextImpl;->mServiceCache:Ljava/util/ArrayList;
 
+    sget-object v0, Landroid/app/ContextImpl;->sOuterContext:Landroid/content/Context;
+
+    if-eqz v0, :cond_26
+
+    const-string v0, "ContextImpl"
+
+    const-string v1, "PDroid:ContextImpl: ContextImpl being created but already has sOuterContext"
+
+    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_26
     iput-object p0, p0, Landroid/app/ContextImpl;->mOuterContext:Landroid/content/Context;
 
+    sput-object p0, Landroid/app/ContextImpl;->sOuterContext:Landroid/content/Context;
+
     return-void
 .end method
 
@@ -588,8 +615,21 @@
 
     iput-object v0, p0, Landroid/app/ContextImpl;->mDisplay:Landroid/view/Display;
 
+    sget-object v0, Landroid/app/ContextImpl;->sOuterContext:Landroid/content/Context;
+
+    if-eqz v0, :cond_42
+
+    const-string v0, "ContextImpl"
+
+    const-string v1, "PDroid:ContextImpl: ContextImpl being created but already has sOuterContext"
+
+    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_42
     iput-object p0, p0, Landroid/app/ContextImpl;->mOuterContext:Landroid/content/Context;
 
+    sput-object p0, Landroid/app/ContextImpl;->sOuterContext:Landroid/content/Context;
+
     return-void
 .end method
 
@@ -1093,6 +1133,14 @@
     throw v0
 .end method
 
+.method static final getStaticOuterContext()Landroid/content/Context;
+    .registers 1
+
+    sget-object v0, Landroid/app/ContextImpl;->sOuterContext:Landroid/content/Context;
+
+    return-object v0
+.end method
+
 .method private getWallpaperManager()Landroid/app/WallpaperManager;
     .registers 2
 
@@ -5230,10 +5278,23 @@
 .end method
 
 .method final setOuterContext(Landroid/content/Context;)V
-    .registers 2
+    .registers 4
+
+    sget-object v0, Landroid/app/ContextImpl;->sOuterContext:Landroid/content/Context;
+
+    if-eqz v0, :cond_b
+
+    const-string v0, "ContextImpl"
+
+    const-string v1, "PDroid:ContextImpl: ContextImpl being created but already has sOuterContext"
 
+    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_b
     iput-object p1, p0, Landroid/app/ContextImpl;->mOuterContext:Landroid/content/Context;
 
+    sput-object p1, Landroid/app/ContextImpl;->sOuterContext:Landroid/content/Context;
+
     return-void
 .end method
 
diff -Npruw stock-framework/smali/android/app/Instrumentation$1.smali pdroid-framework/smali/android/app/Instrumentation$1.smali
--- stock-framework/smali/android/app/Instrumentation$1.smali	2014-01-02 21:10:17.824311317 -0600
+++ pdroid-framework/smali/android/app/Instrumentation$1.smali	2014-01-02 21:10:33.000310919 -0600
@@ -1,14 +1,96 @@
-.class synthetic Landroid/app/Instrumentation$1;
+.class Landroid/app/Instrumentation$1;
 .super Ljava/lang/Object;
 .source "Instrumentation.java"
 
+# interfaces
+.implements Ljava/lang/Runnable;
+
 
 # annotations
-.annotation system Ldalvik/annotation/EnclosingClass;
-    value = Landroid/app/Instrumentation;
+.annotation system Ldalvik/annotation/EnclosingMethod;
+    value = Landroid/app/Instrumentation;->execStartActivity(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)Landroid/app/Instrumentation$ActivityResult;
 .end annotation
 
 .annotation system Ldalvik/annotation/InnerClass;
-    accessFlags = 0x1008
+    accessFlags = 0x0
     name = null
 .end annotation
+
+
+# instance fields
+.field final synthetic this$0:Landroid/app/Instrumentation;
+
+.field final synthetic val$tmp:Landroid/content/Context;
+
+
+# direct methods
+.method constructor <init>(Landroid/app/Instrumentation;Landroid/content/Context;)V
+    .registers 3
+
+    iput-object p1, p0, Landroid/app/Instrumentation$1;->this$0:Landroid/app/Instrumentation;
+
+    iput-object p2, p0, Landroid/app/Instrumentation$1;->val$tmp:Landroid/content/Context;
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public run()V
+    .registers 5
+
+    const-wide/16 v2, 0x3e8
+
+    :try_start_2
+    invoke-static {v2, v3}, Ljava/lang/Thread;->sleep(J)V
+    :try_end_5
+    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_5} :catch_35
+
+    :goto_5
+    new-instance v1, Landroid/content/Intent;
+
+    const-string v2, "android.privacy.BLOCKED_PHONE_CALL"
+
+    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    const-string/jumbo v2, "packageName"
+
+    iget-object v3, p0, Landroid/app/Instrumentation$1;->val$tmp:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {v0, v2, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v2, "phoneState"
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v0, v2, v3}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V
+
+    invoke-virtual {v1, v0}, Landroid/content/Intent;->putExtras(Landroid/os/Bundle;)Landroid/content/Intent;
+
+    iget-object v2, p0, Landroid/app/Instrumentation$1;->val$tmp:Landroid/content/Context;
+
+    invoke-virtual {v2, v1}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V
+
+    const-string v2, "PrivacyContext"
+
+    const-string/jumbo v3, "sent privacy intent"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    return-void
+
+    :catch_35
+    move-exception v2
+
+    goto :goto_5
+.end method
diff -Npruw stock-framework/smali/android/app/Instrumentation$2.smali pdroid-framework/smali/android/app/Instrumentation$2.smali
--- stock-framework/smali/android/app/Instrumentation$2.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/app/Instrumentation$2.smali	2014-01-02 21:10:33.000310919 -0600
@@ -0,0 +1,96 @@
+.class Landroid/app/Instrumentation$2;
+.super Ljava/lang/Object;
+.source "Instrumentation.java"
+
+# interfaces
+.implements Ljava/lang/Runnable;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingMethod;
+    value = Landroid/app/Instrumentation;->execStartActivitiesAsUser(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;[Landroid/content/Intent;Landroid/os/Bundle;I)V
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+
+# instance fields
+.field final synthetic this$0:Landroid/app/Instrumentation;
+
+.field final synthetic val$tmp:Landroid/content/Context;
+
+
+# direct methods
+.method constructor <init>(Landroid/app/Instrumentation;Landroid/content/Context;)V
+    .registers 3
+
+    iput-object p1, p0, Landroid/app/Instrumentation$2;->this$0:Landroid/app/Instrumentation;
+
+    iput-object p2, p0, Landroid/app/Instrumentation$2;->val$tmp:Landroid/content/Context;
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public run()V
+    .registers 5
+
+    const-wide/16 v2, 0x3e8
+
+    :try_start_2
+    invoke-static {v2, v3}, Ljava/lang/Thread;->sleep(J)V
+    :try_end_5
+    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_5} :catch_35
+
+    :goto_5
+    new-instance v1, Landroid/content/Intent;
+
+    const-string v2, "android.privacy.BLOCKED_PHONE_CALL"
+
+    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    const-string/jumbo v2, "packageName"
+
+    iget-object v3, p0, Landroid/app/Instrumentation$2;->val$tmp:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {v0, v2, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v2, "phoneState"
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v0, v2, v3}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V
+
+    invoke-virtual {v1, v0}, Landroid/content/Intent;->putExtras(Landroid/os/Bundle;)Landroid/content/Intent;
+
+    iget-object v2, p0, Landroid/app/Instrumentation$2;->val$tmp:Landroid/content/Context;
+
+    invoke-virtual {v2, v1}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V
+
+    const-string v2, "PrivacyContext"
+
+    const-string/jumbo v3, "sent privacy intent"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    return-void
+
+    :catch_35
+    move-exception v2
+
+    goto :goto_5
+.end method
diff -Npruw stock-framework/smali/android/app/Instrumentation$3.smali pdroid-framework/smali/android/app/Instrumentation$3.smali
--- stock-framework/smali/android/app/Instrumentation$3.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/app/Instrumentation$3.smali	2014-01-02 21:10:33.000310919 -0600
@@ -0,0 +1,96 @@
+.class Landroid/app/Instrumentation$3;
+.super Ljava/lang/Object;
+.source "Instrumentation.java"
+
+# interfaces
+.implements Ljava/lang/Runnable;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingMethod;
+    value = Landroid/app/Instrumentation;->execStartActivity(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Fragment;Landroid/content/Intent;ILandroid/os/Bundle;)Landroid/app/Instrumentation$ActivityResult;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+
+# instance fields
+.field final synthetic this$0:Landroid/app/Instrumentation;
+
+.field final synthetic val$tmp:Landroid/content/Context;
+
+
+# direct methods
+.method constructor <init>(Landroid/app/Instrumentation;Landroid/content/Context;)V
+    .registers 3
+
+    iput-object p1, p0, Landroid/app/Instrumentation$3;->this$0:Landroid/app/Instrumentation;
+
+    iput-object p2, p0, Landroid/app/Instrumentation$3;->val$tmp:Landroid/content/Context;
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public run()V
+    .registers 5
+
+    const-wide/16 v2, 0x3e8
+
+    :try_start_2
+    invoke-static {v2, v3}, Ljava/lang/Thread;->sleep(J)V
+    :try_end_5
+    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_5} :catch_35
+
+    :goto_5
+    new-instance v1, Landroid/content/Intent;
+
+    const-string v2, "android.privacy.BLOCKED_PHONE_CALL"
+
+    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    const-string/jumbo v2, "packageName"
+
+    iget-object v3, p0, Landroid/app/Instrumentation$3;->val$tmp:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {v0, v2, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v2, "phoneState"
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v0, v2, v3}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V
+
+    invoke-virtual {v1, v0}, Landroid/content/Intent;->putExtras(Landroid/os/Bundle;)Landroid/content/Intent;
+
+    iget-object v2, p0, Landroid/app/Instrumentation$3;->val$tmp:Landroid/content/Context;
+
+    invoke-virtual {v2, v1}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V
+
+    const-string v2, "PrivacyContext"
+
+    const-string/jumbo v3, "sent privacy intent"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    return-void
+
+    :catch_35
+    move-exception v2
+
+    goto :goto_5
+.end method
diff -Npruw stock-framework/smali/android/app/Instrumentation$4.smali pdroid-framework/smali/android/app/Instrumentation$4.smali
--- stock-framework/smali/android/app/Instrumentation$4.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/app/Instrumentation$4.smali	2014-01-02 21:10:33.000310919 -0600
@@ -0,0 +1,96 @@
+.class Landroid/app/Instrumentation$4;
+.super Ljava/lang/Object;
+.source "Instrumentation.java"
+
+# interfaces
+.implements Ljava/lang/Runnable;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingMethod;
+    value = Landroid/app/Instrumentation;->execStartActivity(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;Landroid/os/UserHandle;)Landroid/app/Instrumentation$ActivityResult;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+
+# instance fields
+.field final synthetic this$0:Landroid/app/Instrumentation;
+
+.field final synthetic val$tmp:Landroid/content/Context;
+
+
+# direct methods
+.method constructor <init>(Landroid/app/Instrumentation;Landroid/content/Context;)V
+    .registers 3
+
+    iput-object p1, p0, Landroid/app/Instrumentation$4;->this$0:Landroid/app/Instrumentation;
+
+    iput-object p2, p0, Landroid/app/Instrumentation$4;->val$tmp:Landroid/content/Context;
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public run()V
+    .registers 5
+
+    const-wide/16 v2, 0x3e8
+
+    :try_start_2
+    invoke-static {v2, v3}, Ljava/lang/Thread;->sleep(J)V
+    :try_end_5
+    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_5} :catch_35
+
+    :goto_5
+    new-instance v1, Landroid/content/Intent;
+
+    const-string v2, "android.privacy.BLOCKED_PHONE_CALL"
+
+    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    const-string/jumbo v2, "packageName"
+
+    iget-object v3, p0, Landroid/app/Instrumentation$4;->val$tmp:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {v0, v2, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v2, "phoneState"
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v0, v2, v3}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V
+
+    invoke-virtual {v1, v0}, Landroid/content/Intent;->putExtras(Landroid/os/Bundle;)Landroid/content/Intent;
+
+    iget-object v2, p0, Landroid/app/Instrumentation$4;->val$tmp:Landroid/content/Context;
+
+    invoke-virtual {v2, v1}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V
+
+    const-string v2, "PrivacyContext"
+
+    const-string/jumbo v3, "sent privacy intent"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    return-void
+
+    :catch_35
+    move-exception v2
+
+    goto :goto_5
+.end method
diff -Npruw stock-framework/smali/android/app/Instrumentation.smali pdroid-framework/smali/android/app/Instrumentation.smali
--- stock-framework/smali/android/app/Instrumentation.smali	2014-01-02 21:10:17.832311317 -0600
+++ pdroid-framework/smali/android/app/Instrumentation.smali	2014-01-02 21:10:33.016310919 -0600
@@ -6,7 +6,6 @@
 # annotations
 .annotation system Ldalvik/annotation/MemberClasses;
     value = {
-        Landroid/app/Instrumentation$1;,
         Landroid/app/Instrumentation$Idler;,
         Landroid/app/Instrumentation$ActivityGoing;,
         Landroid/app/Instrumentation$ActivityWaiter;,
@@ -53,6 +52,8 @@
 
 .field private mPerformanceCollector:Landroid/os/PerformanceCollector;
 
+.field private mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
 .field private mRunner:Ljava/lang/Thread;
 
 .field private final mSync:Ljava/lang/Object;
@@ -899,182 +900,131 @@
 .end method
 
 .method public execStartActivitiesAsUser(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;[Landroid/content/Intent;Landroid/os/Bundle;I)V
-    .registers 21
-
-    move-object v2, p2
-
-    check-cast v2, Landroid/app/IApplicationThread;
-
-    iget-object v1, p0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
-
-    if-eqz v1, :cond_37
-
-    iget-object v3, p0, Landroid/app/Instrumentation;->mSync:Ljava/lang/Object;
-
-    monitor-enter v3
-
-    :try_start_a
-    iget-object v1, p0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
-
-    invoke-interface {v1}, Ljava/util/List;->size()I
-
-    move-result v9
-
-    const/4 v11, 0x0
-
-    :goto_11
-    if-ge v11, v9, :cond_36
+    .registers 32
 
-    iget-object v1, p0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
-
-    invoke-interface {v1, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;
-
-    move-result-object v10
-
-    check-cast v10, Landroid/app/Instrumentation$ActivityMonitor;
-
-    const/4 v1, 0x0
-
-    const/4 v4, 0x0
-
-    aget-object v4, p5, v4
-
-    invoke-virtual {v10, p1, v1, v4}, Landroid/app/Instrumentation$ActivityMonitor;->match(Landroid/content/Context;Landroid/app/Activity;Landroid/content/Intent;)Z
+    move-object/from16 v3, p2
 
-    move-result v1
+    check-cast v3, Landroid/app/IApplicationThread;
 
-    if-eqz v1, :cond_33
+    const-string v2, "Instrumentation"
 
-    iget v1, v10, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+    new-instance v4, Ljava/lang/StringBuilder;
 
-    add-int/lit8 v1, v1, 0x1
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
 
-    iput v1, v10, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+    const-string v5, "PDroid:Instrumentation:execStartActivitiesAsUser: execStartActivitiesAsUser for "
 
-    invoke-virtual {v10}, Landroid/app/Instrumentation$ActivityMonitor;->isBlocking()Z
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    move-result v1
+    move-result-object v4
 
-    if-eqz v1, :cond_36
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    monitor-exit v3
+    move-result-object v5
 
-    :goto_32
-    return-void
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    :cond_33
-    add-int/lit8 v11, v11, 0x1
+    move-result-object v4
 
-    goto :goto_11
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    :cond_36
-    monitor-exit v3
-    :try_end_37
-    .catchall {:try_start_a .. :try_end_37} :catchall_5b
+    move-result-object v4
 
-    :cond_37
-    :try_start_37
-    move-object/from16 v0, p5
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    array-length v1, v0
+    if-eqz p5, :cond_6f
 
-    new-array v5, v1, [Ljava/lang/String;
+    const/4 v14, 0x0
 
-    const/4 v11, 0x0
+    move-object/from16 v13, p5
 
-    :goto_3d
-    move-object/from16 v0, p5
+    array-length v0, v13
 
-    array-length v1, v0
+    move/from16 v20, v0
 
-    if-ge v11, v1, :cond_5e
+    const/16 v18, 0x0
 
-    aget-object v1, p5, v11
+    :goto_2a
+    move/from16 v0, v18
 
-    invoke-virtual {v1}, Landroid/content/Intent;->migrateExtraStreamToClipData()Z
+    move/from16 v1, v20
 
-    aget-object v1, p5, v11
+    if-ge v0, v1, :cond_51
 
-    invoke-virtual {v1}, Landroid/content/Intent;->prepareToLeaveProcess()V
+    aget-object v19, v13, v18
 
-    aget-object v1, p5, v11
+    :try_start_32
+    invoke-virtual/range {v19 .. v19}, Landroid/content/Intent;->getAction()Ljava/lang/String;
 
-    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+    move-result-object v2
 
-    move-result-object v3
+    if-eqz v2, :cond_cc
 
-    invoke-virtual {v1, v3}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;
+    invoke-virtual/range {v19 .. v19}, Landroid/content/Intent;->getAction()Ljava/lang/String;
 
-    move-result-object v1
+    move-result-object v2
 
-    aput-object v1, v5, v11
-    :try_end_58
-    .catch Landroid/os/RemoteException; {:try_start_37 .. :try_end_58} :catch_79
+    const-string v4, "android.intent.action.CALL"
 
-    add-int/lit8 v11, v11, 0x1
+    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
-    goto :goto_3d
+    move-result v2
 
-    :catchall_5b
-    move-exception v1
+    if-nez v2, :cond_50
 
-    :try_start_5c
-    monitor-exit v3
-    :try_end_5d
-    .catchall {:try_start_5c .. :try_end_5d} :catchall_5b
+    invoke-virtual/range {v19 .. v19}, Landroid/content/Intent;->getAction()Ljava/lang/String;
 
-    throw v1
+    move-result-object v2
 
-    :cond_5e
-    :try_start_5e
-    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;
+    const-string v4, "android.intent.action.DIAL"
 
-    move-result-object v1
+    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+    :try_end_4d
+    .catch Ljava/lang/Exception; {:try_start_32 .. :try_end_4d} :catch_ae
 
-    invoke-virtual {p1}, Landroid/content/Context;->getBasePackageName()Ljava/lang/String;
+    move-result v2
 
-    move-result-object v3
+    if-eqz v2, :cond_cc
 
-    move-object/from16 v4, p5
+    :cond_50
+    const/4 v14, 0x1
 
-    move-object/from16 v6, p3
+    :cond_51
+    if-nez v14, :cond_d0
 
-    move-object/from16 v7, p6
+    const-string v2, "Instrumentation"
 
-    move/from16 v8, p7
+    new-instance v4, Ljava/lang/StringBuilder;
 
-    invoke-interface/range {v1 .. v8}, Landroid/app/IActivityManager;->startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
 
-    move-result v12
+    const-string v5, "PDroid:Instrumentation:execStartActivitiesAsUser: No provided intents triggered checking for "
 
-    const/4 v1, 0x0
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    aget-object v1, p5, v1
+    move-result-object v4
 
-    invoke-static {v12, v1}, Landroid/app/Instrumentation;->checkStartActivityResult(ILjava/lang/Object;)V
-    :try_end_78
-    .catch Landroid/os/RemoteException; {:try_start_5e .. :try_end_78} :catch_79
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    goto :goto_32
+    move-result-object v5
 
-    :catch_79
-    move-exception v1
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    goto :goto_32
-.end method
+    move-result-object v4
 
-.method public execStartActivity(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)Landroid/app/Instrumentation$ActivityResult;
-    .registers 26
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    move-object/from16 v3, p2
+    move-result-object v4
 
-    check-cast v3, Landroid/app/IApplicationThread;
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
+    :cond_6f
+    :goto_6f
     move-object/from16 v0, p0
 
     iget-object v2, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
 
-    if-eqz v2, :cond_4e
+    if-eqz v2, :cond_289
 
     move-object/from16 v0, p0
 
@@ -1082,540 +1032,2621 @@
 
     monitor-enter v4
 
-    :try_start_f
+    :try_start_7a
     move-object/from16 v0, p0
 
     iget-object v2, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
 
     invoke-interface {v2}, Ljava/util/List;->size()I
 
-    move-result v14
+    move-result v10
 
-    const/16 v16, 0x0
+    const/16 v17, 0x0
 
-    :goto_19
-    move/from16 v0, v16
+    :goto_84
+    move/from16 v0, v17
 
-    if-ge v0, v14, :cond_4d
+    if-ge v0, v10, :cond_288
 
     move-object/from16 v0, p0
 
     iget-object v2, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
 
-    move/from16 v0, v16
+    move/from16 v0, v17
 
     invoke-interface {v2, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
 
-    move-result-object v15
+    move-result-object v12
 
-    check-cast v15, Landroid/app/Instrumentation$ActivityMonitor;
+    check-cast v12, Landroid/app/Instrumentation$ActivityMonitor;
 
     const/4 v2, 0x0
 
-    move-object/from16 v0, p1
+    const/4 v5, 0x0
 
-    move-object/from16 v1, p5
+    aget-object v5, p5, v5
 
-    invoke-virtual {v15, v0, v2, v1}, Landroid/app/Instrumentation$ActivityMonitor;->match(Landroid/content/Context;Landroid/app/Activity;Landroid/content/Intent;)Z
+    move-object/from16 v0, p1
+
+    invoke-virtual {v12, v0, v2, v5}, Landroid/app/Instrumentation$ActivityMonitor;->match(Landroid/content/Context;Landroid/app/Activity;Landroid/content/Intent;)Z
 
     move-result v2
 
-    if-eqz v2, :cond_4a
+    if-eqz v2, :cond_284
 
-    iget v2, v15, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+    iget v2, v12, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
 
     add-int/lit8 v2, v2, 0x1
 
-    iput v2, v15, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+    iput v2, v12, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
 
-    invoke-virtual {v15}, Landroid/app/Instrumentation$ActivityMonitor;->isBlocking()Z
+    invoke-virtual {v12}, Landroid/app/Instrumentation$ActivityMonitor;->isBlocking()Z
 
     move-result v2
 
-    if-eqz v2, :cond_4d
-
-    if-ltz p6, :cond_48
-
-    invoke-virtual {v15}, Landroid/app/Instrumentation$ActivityMonitor;->getResult()Landroid/app/Instrumentation$ActivityResult;
+    if-eqz v2, :cond_288
 
-    move-result-object v2
-
-    :goto_46
     monitor-exit v4
+    :try_end_ad
+    .catchall {:try_start_7a .. :try_end_ad} :catchall_2b0
 
-    :goto_47
-    return-object v2
+    :goto_ad
+    return-void
 
-    :cond_48
-    const/4 v2, 0x0
+    :catch_ae
+    move-exception v15
 
-    goto :goto_46
+    const-string v2, "Instrumentation"
 
-    :cond_4a
-    add-int/lit8 v16, v16, 0x1
+    new-instance v4, Ljava/lang/StringBuilder;
 
-    goto :goto_19
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
 
-    :cond_4d
-    monitor-exit v4
-    :try_end_4e
-    .catchall {:try_start_f .. :try_end_4e} :catchall_84
+    const-string v5, "PDroid:Instrumentation:execStartActivitiesAsUser: Exception occurred when checking intents for "
 
-    :cond_4e
-    :try_start_4e
-    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->migrateExtraStreamToClipData()Z
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->prepareToLeaveProcess()V
+    move-result-object v4
 
-    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    move-result-object v2
+    move-result-object v5
 
-    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getBasePackageName()Ljava/lang/String;
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     move-result-object v4
 
-    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    move-result-object v5
+    move-result-object v4
 
-    move-object/from16 v0, p5
+    invoke-static {v2, v4, v15}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
 
-    invoke-virtual {v0, v5}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;
+    const/4 v14, 0x1
 
-    move-result-object v6
+    :cond_cc
+    add-int/lit8 v18, v18, 0x1
 
-    if-eqz p4, :cond_87
+    goto/16 :goto_2a
 
-    move-object/from16 v0, p4
+    :cond_d0
+    const-string v2, "Instrumentation"
 
-    iget-object v8, v0, Landroid/app/Activity;->mEmbeddedID:Ljava/lang/String;
+    new-instance v4, Ljava/lang/StringBuilder;
 
-    :goto_6c
-    const/4 v10, 0x0
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
 
-    const/4 v11, 0x0
+    const-string v5, "PDroid:Instrumentation:execStartActivitiesAsUser: One or more intents triggered checking for "
 
-    const/4 v12, 0x0
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    move-object/from16 v5, p5
+    move-result-object v4
 
-    move-object/from16 v7, p3
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    move/from16 v9, p6
+    move-result-object v5
 
-    move-object/from16 v13, p7
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-interface/range {v2 .. v13}, Landroid/app/IActivityManager;->startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/Bundle;)I
+    move-result-object v4
 
-    move-result v17
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    move/from16 v0, v17
+    move-result-object v4
 
-    move-object/from16 v1, p5
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    invoke-static {v0, v1}, Landroid/app/Instrumentation;->checkStartActivityResult(ILjava/lang/Object;)V
-    :try_end_82
-    .catch Landroid/os/RemoteException; {:try_start_4e .. :try_end_82} :catch_89
+    move-object/from16 v0, p0
 
-    :goto_82
-    const/4 v2, 0x0
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    goto :goto_47
+    if-eqz v2, :cond_fc
 
-    :catchall_84
-    move-exception v2
+    move-object/from16 v0, p0
 
-    :try_start_85
-    monitor-exit v4
-    :try_end_86
-    .catchall {:try_start_85 .. :try_end_86} :catchall_84
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    throw v2
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettingsManager;->isServiceAvailable()Z
 
-    :cond_87
-    const/4 v8, 0x0
+    move-result v2
 
-    goto :goto_6c
+    if-nez v2, :cond_193
 
-    :catch_89
-    move-exception v2
+    :cond_fc
+    new-instance v2, Landroid/privacy/PrivacySettingsManager;
 
-    goto :goto_82
-.end method
+    const-string/jumbo v4, "privacy"
 
-.method public execStartActivity(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;Landroid/os/UserHandle;)Landroid/app/Instrumentation$ActivityResult;
-    .registers 29
+    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
 
-    move-object/from16 v4, p2
+    move-result-object v4
 
-    check-cast v4, Landroid/app/IApplicationThread;
+    invoke-static {v4}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
 
-    move-object/from16 v0, p0
+    move-result-object v4
 
-    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+    move-object/from16 v0, p1
 
-    if-eqz v3, :cond_56
+    invoke-direct {v2, v0, v4}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
 
     move-object/from16 v0, p0
 
-    iget-object v5, v0, Landroid/app/Instrumentation;->mSync:Ljava/lang/Object;
-
-    monitor-enter v5
+    iput-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    :try_start_f
     move-object/from16 v0, p0
 
-    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
-
-    invoke-interface {v3}, Ljava/util/List;->size()I
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    move-result v16
+    if-eqz v2, :cond_18b
 
-    const/16 v18, 0x0
+    const-string v2, "Instrumentation"
 
-    :goto_19
-    move/from16 v0, v18
+    const-string v4, "PDroid:Instrumentation:execStartActivitiesAsUser: Obtained privacy service"
 
-    move/from16 v1, v16
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    if-ge v0, v1, :cond_55
+    :goto_11f
+    const/4 v11, 0x0
 
     move-object/from16 v0, p0
 
-    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
-
-    move/from16 v0, v18
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
+    if-eqz v2, :cond_130
 
-    move-result-object v17
+    move-object/from16 v0, p0
 
-    check-cast v17, Landroid/app/Instrumentation$ActivityMonitor;
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    const/4 v3, 0x0
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettingsManager;->isServiceAvailable()Z
 
-    move-object/from16 v0, v17
+    move-result v2
 
-    move-object/from16 v1, p1
+    if-nez v2, :cond_19b
 
-    move-object/from16 v2, p5
+    :cond_130
+    const-string v2, "Instrumentation"
 
-    invoke-virtual {v0, v1, v3, v2}, Landroid/app/Instrumentation$ActivityMonitor;->match(Landroid/content/Context;Landroid/app/Activity;Landroid/content/Intent;)Z
+    const-string v4, "PDroid:Instrumentation:execStartActivitiesAsUser: Privacy service not available - assuming permission denied"
 
-    move-result v3
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    if-eqz v3, :cond_52
+    const/4 v11, 0x0
 
-    move-object/from16 v0, v17
+    move-object/from16 v0, p0
 
-    iget v3, v0, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    add-int/lit8 v3, v3, 0x1
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    move-object/from16 v0, v17
+    move-result-object v4
 
-    iput v3, v0, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+    const/4 v5, 0x1
 
-    invoke-virtual/range {v17 .. v17}, Landroid/app/Instrumentation$ActivityMonitor;->isBlocking()Z
+    const-string/jumbo v7, "phoneCall"
 
-    move-result v3
+    const/4 v8, 0x0
 
-    if-eqz v3, :cond_55
+    invoke-virtual {v2, v4, v5, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
 
-    if-ltz p6, :cond_50
+    :goto_148
+    if-nez v11, :cond_6f
 
-    invoke-virtual/range {v17 .. v17}, Landroid/app/Instrumentation$ActivityMonitor;->getResult()Landroid/app/Instrumentation$ActivityResult;
+    new-instance v16, Ljava/util/ArrayList;
 
-    move-result-object v3
+    move-object/from16 v0, p5
 
-    :goto_4e
-    monitor-exit v5
+    array-length v2, v0
 
-    :goto_4f
-    return-object v3
+    move-object/from16 v0, v16
 
-    :cond_50
-    const/4 v3, 0x0
+    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(I)V
 
-    goto :goto_4e
+    move-object/from16 v13, p5
 
-    :cond_52
-    add-int/lit8 v18, v18, 0x1
+    array-length v0, v13
 
-    goto :goto_19
+    move/from16 v20, v0
 
-    :cond_55
-    monitor-exit v5
-    :try_end_56
-    .catchall {:try_start_f .. :try_end_56} :catchall_90
+    const/16 v18, 0x0
 
-    :cond_56
-    :try_start_56
-    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->migrateExtraStreamToClipData()Z
+    :goto_15b
+    move/from16 v0, v18
 
-    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->prepareToLeaveProcess()V
+    move/from16 v1, v20
 
-    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;
+    if-ge v0, v1, :cond_261
 
-    move-result-object v3
+    aget-object v19, v13, v18
 
-    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getBasePackageName()Ljava/lang/String;
+    :try_start_163
+    invoke-virtual/range {v19 .. v19}, Landroid/content/Intent;->getAction()Ljava/lang/String;
 
-    move-result-object v5
+    move-result-object v2
 
-    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+    if-eqz v2, :cond_181
 
-    move-result-object v6
+    invoke-virtual/range {v19 .. v19}, Landroid/content/Intent;->getAction()Ljava/lang/String;
 
-    move-object/from16 v0, p5
+    move-result-object v2
 
-    invoke-virtual {v0, v6}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;
+    const-string v4, "android.intent.action.CALL"
 
-    move-result-object v7
+    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
-    if-eqz p4, :cond_93
+    move-result v2
 
-    move-object/from16 v0, p4
+    if-nez v2, :cond_188
 
-    iget-object v9, v0, Landroid/app/Activity;->mEmbeddedID:Ljava/lang/String;
+    invoke-virtual/range {v19 .. v19}, Landroid/content/Intent;->getAction()Ljava/lang/String;
 
-    :goto_74
-    const/4 v11, 0x0
+    move-result-object v2
 
-    const/4 v12, 0x0
+    const-string v4, "android.intent.action.DIAL"
 
-    const/4 v13, 0x0
+    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
-    invoke-virtual/range {p8 .. p8}, Landroid/os/UserHandle;->getIdentifier()I
+    move-result v2
 
-    move-result v15
+    if-nez v2, :cond_188
 
-    move-object/from16 v6, p5
+    :cond_181
+    move-object/from16 v0, v16
 
-    move-object/from16 v8, p3
+    move-object/from16 v1, v19
 
-    move/from16 v10, p6
+    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+    :try_end_188
+    .catch Ljava/lang/Exception; {:try_start_163 .. :try_end_188} :catch_242
 
-    move-object/from16 v14, p7
+    :cond_188
+    :goto_188
+    add-int/lit8 v18, v18, 0x1
 
-    invoke-interface/range {v3 .. v15}, Landroid/app/IActivityManager;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/Bundle;I)I
+    goto :goto_15b
 
-    move-result v19
+    :cond_18b
+    const-string v2, "Instrumentation"
 
-    move/from16 v0, v19
+    const-string v4, "PDroid:Instrumentation:execStartActivitiesAsUser: Privacy service not obtained"
 
-    move-object/from16 v1, p5
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    invoke-static {v0, v1}, Landroid/app/Instrumentation;->checkStartActivityResult(ILjava/lang/Object;)V
-    :try_end_8e
-    .catch Landroid/os/RemoteException; {:try_start_56 .. :try_end_8e} :catch_95
+    goto :goto_11f
 
-    :goto_8e
-    const/4 v3, 0x0
+    :cond_193
+    const-string v2, "Instrumentation"
 
-    goto :goto_4f
+    const-string v4, "PDroid:Instrumentation:execStartActivitiesAsUser: Already had privacy service"
 
-    :catchall_90
-    move-exception v3
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    :try_start_91
-    monitor-exit v5
-    :try_end_92
-    .catchall {:try_start_91 .. :try_end_92} :catchall_90
+    goto :goto_11f
 
-    throw v3
+    :cond_19b
+    move-object/from16 v0, p0
 
-    :cond_93
-    const/4 v9, 0x0
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    goto :goto_74
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    :catch_95
-    move-exception v3
+    move-result-object v4
 
-    goto :goto_8e
-.end method
+    invoke-virtual {v2, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
 
-.method public execStartActivity(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Fragment;Landroid/content/Intent;ILandroid/os/Bundle;)Landroid/app/Instrumentation$ActivityResult;
-    .registers 26
+    move-result-object v21
 
-    move-object/from16 v3, p2
+    if-nez v21, :cond_1d8
 
-    check-cast v3, Landroid/app/IApplicationThread;
+    const-string v2, "Instrumentation"
 
-    move-object/from16 v0, p0
+    new-instance v4, Ljava/lang/StringBuilder;
 
-    iget-object v2, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
 
-    if-eqz v2, :cond_4e
+    const-string v5, "PDroid:Instrumentation:execStartActivitiesAsUser: Call intents allowed: No settings for package: "
 
-    move-object/from16 v0, p0
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-object v4, v0, Landroid/app/Instrumentation;->mSync:Ljava/lang/Object;
+    move-result-object v4
 
-    monitor-enter v4
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    :try_start_f
-    move-object/from16 v0, p0
+    move-result-object v5
 
-    iget-object v2, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-interface {v2}, Ljava/util/List;->size()I
+    move-result-object v4
 
-    move-result v14
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    const/16 v16, 0x0
+    move-result-object v4
 
-    :goto_19
-    move/from16 v0, v16
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    if-ge v0, v14, :cond_4d
+    const/4 v11, 0x1
 
     move-object/from16 v0, p0
 
-    iget-object v2, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    move/from16 v0, v16
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    invoke-interface {v2, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
+    move-result-object v4
 
-    move-result-object v15
+    const/4 v5, 0x1
 
-    check-cast v15, Landroid/app/Instrumentation$ActivityMonitor;
+    const-string/jumbo v7, "phoneCall"
 
-    const/4 v2, 0x0
+    const/4 v8, 0x0
 
-    move-object/from16 v0, p1
+    invoke-virtual {v2, v4, v5, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
 
-    move-object/from16 v1, p5
+    goto/16 :goto_148
 
-    invoke-virtual {v15, v0, v2, v1}, Landroid/app/Instrumentation$ActivityMonitor;->match(Landroid/content/Context;Landroid/app/Activity;Landroid/content/Intent;)Z
+    :cond_1d8
+    invoke-virtual/range {v21 .. v21}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
 
     move-result v2
 
-    if-eqz v2, :cond_4a
+    if-nez v2, :cond_210
 
-    iget v2, v15, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+    const-string v2, "Instrumentation"
 
-    add-int/lit8 v2, v2, 0x1
+    new-instance v4, Ljava/lang/StringBuilder;
 
-    iput v2, v15, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
 
-    invoke-virtual {v15}, Landroid/app/Instrumentation$ActivityMonitor;->isBlocking()Z
+    const-string v5, "PDroid:Instrumentation:execStartActivitiesAsUser: Call intents allowed: Settings permit "
 
-    move-result v2
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    if-eqz v2, :cond_4d
+    move-result-object v4
 
-    if-ltz p6, :cond_48
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    invoke-virtual {v15}, Landroid/app/Instrumentation$ActivityMonitor;->getResult()Landroid/app/Instrumentation$ActivityResult;
+    move-result-object v5
 
-    move-result-object v2
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    :goto_46
-    monitor-exit v4
+    move-result-object v4
 
-    :goto_47
-    return-object v2
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    :cond_48
-    const/4 v2, 0x0
+    move-result-object v4
 
-    goto :goto_46
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    :cond_4a
-    add-int/lit8 v16, v16, 0x1
+    const/4 v11, 0x1
 
-    goto :goto_19
+    move-object/from16 v0, p0
 
-    :cond_4d
-    monitor-exit v4
-    :try_end_4e
-    .catchall {:try_start_f .. :try_end_4e} :catchall_84
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
 
-    :cond_4e
-    :try_start_4e
-    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->migrateExtraStreamToClipData()Z
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->prepareToLeaveProcess()V
+    move-result-object v4
 
-    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;
+    invoke-virtual/range {v21 .. v21}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
 
-    move-result-object v2
+    move-result v5
 
-    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getBasePackageName()Ljava/lang/String;
+    const-string/jumbo v7, "phoneCall"
 
-    move-result-object v4
+    const/4 v8, 0x0
 
-    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+    invoke-virtual {v2, v4, v5, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
 
-    move-result-object v5
+    goto/16 :goto_148
 
-    move-object/from16 v0, p5
+    :cond_210
+    const-string v2, "Instrumentation"
 
-    invoke-virtual {v0, v5}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;
+    new-instance v4, Ljava/lang/StringBuilder;
 
-    move-result-object v6
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
 
-    if-eqz p4, :cond_87
+    const-string v5, "PDroid:Instrumentation:execStartActivitiesAsUser: Call intents denied: Settings deny "
 
-    move-object/from16 v0, p4
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-object v8, v0, Landroid/app/Fragment;->mWho:Ljava/lang/String;
+    move-result-object v4
 
-    :goto_6c
-    const/4 v10, 0x0
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
 
-    const/4 v11, 0x0
+    move-result-object v5
 
-    const/4 v12, 0x0
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    move-object/from16 v5, p5
+    move-result-object v4
 
-    move-object/from16 v7, p3
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v11, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual/range {v21 .. v21}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v5
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v2, v4, v5, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    goto/16 :goto_148
+
+    :catch_242
+    move-exception v15
+
+    const-string v2, "Instrumentation"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "PDroid:Instrumentation:execStartActivitiesAsUser: Exception occurred when checking intent for "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v2, v4, v15}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto/16 :goto_188
+
+    :cond_261
+    invoke-interface/range {v16 .. v16}, Ljava/util/List;->size()I
+
+    move-result v2
+
+    new-array v2, v2, [Landroid/content/Intent;
+
+    move-object/from16 v0, v16
+
+    invoke-interface {v0, v2}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+
+    move-result-object p5
+
+    check-cast p5, [Landroid/content/Intent;
+
+    move-object/from16 v23, p1
+
+    new-instance v2, Ljava/lang/Thread;
+
+    new-instance v4, Landroid/app/Instrumentation$2;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-direct {v4, v0, v1}, Landroid/app/Instrumentation$2;-><init>(Landroid/app/Instrumentation;Landroid/content/Context;)V
+
+    invoke-direct {v2, v4}, Ljava/lang/Thread;-><init>(Ljava/lang/Runnable;)V
+
+    invoke-virtual {v2}, Ljava/lang/Thread;->start()V
+
+    goto/16 :goto_6f
+
+    :cond_284
+    add-int/lit8 v17, v17, 0x1
+
+    goto/16 :goto_84
+
+    :cond_288
+    :try_start_288
+    monitor-exit v4
+    :try_end_289
+    .catchall {:try_start_288 .. :try_end_289} :catchall_2b0
 
-    move/from16 v9, p6
+    :cond_289
+    :try_start_289
+    move-object/from16 v0, p5
+
+    array-length v2, v0
 
-    move-object/from16 v13, p7
+    new-array v6, v2, [Ljava/lang/String;
 
-    invoke-interface/range {v2 .. v13}, Landroid/app/IActivityManager;->startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/Bundle;)I
+    const/16 v17, 0x0
+
+    :goto_290
+    move-object/from16 v0, p5
 
-    move-result v17
+    array-length v2, v0
 
     move/from16 v0, v17
 
-    move-object/from16 v1, p5
+    if-ge v0, v2, :cond_2b3
 
-    invoke-static {v0, v1}, Landroid/app/Instrumentation;->checkStartActivityResult(ILjava/lang/Object;)V
-    :try_end_82
-    .catch Landroid/os/RemoteException; {:try_start_4e .. :try_end_82} :catch_89
+    aget-object v2, p5, v17
 
-    :goto_82
-    const/4 v2, 0x0
+    invoke-virtual {v2}, Landroid/content/Intent;->migrateExtraStreamToClipData()Z
+
+    aget-object v2, p5, v17
+
+    invoke-virtual {v2}, Landroid/content/Intent;->prepareToLeaveProcess()V
+
+    aget-object v2, p5, v17
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v4
+
+    invoke-virtual {v2, v4}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;
+
+    move-result-object v2
+
+    aput-object v2, v6, v17
+    :try_end_2ad
+    .catch Landroid/os/RemoteException; {:try_start_289 .. :try_end_2ad} :catch_2d1
 
-    goto :goto_47
+    add-int/lit8 v17, v17, 0x1
 
-    :catchall_84
+    goto :goto_290
+
+    :catchall_2b0
     move-exception v2
 
-    :try_start_85
+    :try_start_2b1
     monitor-exit v4
-    :try_end_86
-    .catchall {:try_start_85 .. :try_end_86} :catchall_84
+    :try_end_2b2
+    .catchall {:try_start_2b1 .. :try_end_2b2} :catchall_2b0
 
     throw v2
 
-    :cond_87
-    const/4 v8, 0x0
+    :cond_2b3
+    :try_start_2b3
+    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;
+
+    move-result-object v2
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getBasePackageName()Ljava/lang/String;
+
+    move-result-object v4
+
+    move-object/from16 v5, p5
+
+    move-object/from16 v7, p3
+
+    move-object/from16 v8, p6
 
-    goto :goto_6c
+    move/from16 v9, p7
 
-    :catch_89
+    invoke-interface/range {v2 .. v9}, Landroid/app/IActivityManager;->startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
+
+    move-result v22
+
+    const/4 v2, 0x0
+
+    aget-object v2, p5, v2
+
+    move/from16 v0, v22
+
+    invoke-static {v0, v2}, Landroid/app/Instrumentation;->checkStartActivityResult(ILjava/lang/Object;)V
+    :try_end_2cf
+    .catch Landroid/os/RemoteException; {:try_start_2b3 .. :try_end_2cf} :catch_2d1
+
+    goto/16 :goto_ad
+
+    :catch_2d1
     move-exception v2
 
-    goto :goto_82
+    goto/16 :goto_ad
+.end method
+
+.method public execStartActivity(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)Landroid/app/Instrumentation$ActivityResult;
+    .registers 31
+
+    move-object/from16 v4, p2
+
+    check-cast v4, Landroid/app/IApplicationThread;
+
+    const/16 v16, 0x1
+
+    :try_start_6
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity: execStartActivity for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_ba
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v3
+
+    const-string v5, "android.intent.action.CALL"
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_40
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v3
+
+    const-string v5, "android.intent.action.DIAL"
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_ba
+
+    :cond_40
+    const/16 v16, 0x0
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity: Intent action = Intent.ACTION_CALL or Intent.ACTION_DIAL for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v3, :cond_6e
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v3}, Landroid/privacy/PrivacySettingsManager;->isServiceAvailable()Z
+
+    move-result v3
+
+    if-nez v3, :cond_12e
+
+    :cond_6e
+    new-instance v3, Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v5, "privacy"
+
+    invoke-static {v5}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v5
+
+    invoke-static {v5}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v5
+
+    move-object/from16 v0, p1
+
+    invoke-direct {v3, v0, v5}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v3, :cond_104
+
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity: Obtained privacy service"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    :goto_91
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v3, :cond_a1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v3}, Landroid/privacy/PrivacySettingsManager;->isServiceAvailable()Z
+
+    move-result v3
+
+    if-nez v3, :cond_137
+
+    :cond_a1
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity: Privacy service not available: rejecting call attempt"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v16, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v6, 0x1
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    :try_end_ba
+    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_ba} :catch_10c
+
+    :cond_ba
+    :goto_ba
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+
+    if-eqz v3, :cond_207
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Landroid/app/Instrumentation;->mSync:Ljava/lang/Object;
+
+    monitor-enter v5
+
+    :try_start_c5
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+
+    invoke-interface {v3}, Ljava/util/List;->size()I
+
+    move-result v15
+
+    const/16 v19, 0x0
+
+    :goto_cf
+    move/from16 v0, v19
+
+    if-ge v0, v15, :cond_206
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+
+    move/from16 v0, v19
+
+    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v17
+
+    check-cast v17, Landroid/app/Instrumentation$ActivityMonitor;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v17
+
+    move-object/from16 v1, p1
+
+    move-object/from16 v2, p5
+
+    invoke-virtual {v0, v1, v3, v2}, Landroid/app/Instrumentation$ActivityMonitor;->match(Landroid/content/Context;Landroid/app/Activity;Landroid/content/Intent;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_202
+
+    move-object/from16 v0, v17
+
+    iget v3, v0, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+
+    add-int/lit8 v3, v3, 0x1
+
+    move-object/from16 v0, v17
+
+    iput v3, v0, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+
+    invoke-virtual/range {v17 .. v17}, Landroid/app/Instrumentation$ActivityMonitor;->isBlocking()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_206
+
+    if-ltz p6, :cond_1ff
+
+    invoke-virtual/range {v17 .. v17}, Landroid/app/Instrumentation$ActivityMonitor;->getResult()Landroid/app/Instrumentation$ActivityResult;
+
+    move-result-object v3
+
+    :goto_102
+    monitor-exit v5
+    :try_end_103
+    .catchall {:try_start_c5 .. :try_end_103} :catchall_221
+
+    :goto_103
+    return-object v3
+
+    :cond_104
+    :try_start_104
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity: Privacy service not obtained"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_10b
+    .catch Ljava/lang/Exception; {:try_start_104 .. :try_end_10b} :catch_10c
+
+    goto :goto_91
+
+    :catch_10c
+    move-exception v18
+
+    if-eqz p1, :cond_1f4
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity: Exception occurred handling intent for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    invoke-static {v3, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_ba
+
+    :cond_12e
+    :try_start_12e
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity: Already had privacy service"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_91
+
+    :cond_137
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v20
+
+    if-nez v20, :cond_175
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity: Call allowed: No settings for package: "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v16, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v6, 0x0
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    goto/16 :goto_ba
+
+    :cond_175
+    invoke-virtual/range {v20 .. v20}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v3
+
+    if-nez v3, :cond_1ae
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity: Call allowed: Settings permit "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v16, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual/range {v20 .. v20}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v6
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    goto/16 :goto_ba
+
+    :cond_1ae
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity: Call denied: Settings deny "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v16, 0x0
+
+    move-object/from16 v22, p1
+
+    new-instance v3, Ljava/lang/Thread;
+
+    new-instance v5, Landroid/app/Instrumentation$1;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v22
+
+    invoke-direct {v5, v0, v1}, Landroid/app/Instrumentation$1;-><init>(Landroid/app/Instrumentation;Landroid/content/Context;)V
+
+    invoke-direct {v3, v5}, Ljava/lang/Thread;-><init>(Ljava/lang/Runnable;)V
+
+    invoke-virtual {v3}, Ljava/lang/Thread;->start()V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual/range {v20 .. v20}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v6
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    :try_end_1f2
+    .catch Ljava/lang/Exception; {:try_start_12e .. :try_end_1f2} :catch_10c
+
+    goto/16 :goto_ba
+
+    :cond_1f4
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity: Exception occurred handling intent for unknown package"
+
+    move-object/from16 v0, v18
+
+    invoke-static {v3, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto/16 :goto_ba
+
+    :cond_1ff
+    const/4 v3, 0x0
+
+    goto/16 :goto_102
+
+    :cond_202
+    add-int/lit8 v19, v19, 0x1
+
+    goto/16 :goto_cf
+
+    :cond_206
+    :try_start_206
+    monitor-exit v5
+    :try_end_207
+    .catchall {:try_start_206 .. :try_end_207} :catchall_221
+
+    :cond_207
+    if-nez v16, :cond_224
+
+    :try_start_209
+    new-instance v3, Landroid/app/Instrumentation$ActivityResult;
+
+    move/from16 v0, p6
+
+    move-object/from16 v1, p5
+
+    invoke-direct {v3, v0, v1}, Landroid/app/Instrumentation$ActivityResult;-><init>(ILandroid/content/Intent;)V
+    :try_end_212
+    .catch Ljava/lang/Exception; {:try_start_209 .. :try_end_212} :catch_214
+
+    goto/16 :goto_103
+
+    :catch_214
+    move-exception v18
+
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity: Exception occurred while trying to create ActivityResult"
+
+    move-object/from16 v0, v18
+
+    invoke-static {v3, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/4 v3, 0x0
+
+    goto/16 :goto_103
+
+    :catchall_221
+    move-exception v3
+
+    :try_start_222
+    monitor-exit v5
+    :try_end_223
+    .catchall {:try_start_222 .. :try_end_223} :catchall_221
+
+    throw v3
+
+    :cond_224
+    :try_start_224
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->migrateExtraStreamToClipData()Z
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->prepareToLeaveProcess()V
+
+    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;
+
+    move-result-object v3
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getBasePackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v6
+
+    move-object/from16 v0, p5
+
+    invoke-virtual {v0, v6}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;
+
+    move-result-object v7
+
+    if-eqz p4, :cond_25b
+
+    move-object/from16 v0, p4
+
+    iget-object v9, v0, Landroid/app/Activity;->mEmbeddedID:Ljava/lang/String;
+
+    :goto_242
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    move-object/from16 v6, p5
+
+    move-object/from16 v8, p3
+
+    move/from16 v10, p6
+
+    move-object/from16 v14, p7
+
+    invoke-interface/range {v3 .. v14}, Landroid/app/IActivityManager;->startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/Bundle;)I
+
+    move-result v21
+
+    move/from16 v0, v21
+
+    move-object/from16 v1, p5
+
+    invoke-static {v0, v1}, Landroid/app/Instrumentation;->checkStartActivityResult(ILjava/lang/Object;)V
+    :try_end_258
+    .catch Landroid/os/RemoteException; {:try_start_224 .. :try_end_258} :catch_25d
+
+    :goto_258
+    const/4 v3, 0x0
+
+    goto/16 :goto_103
+
+    :cond_25b
+    const/4 v9, 0x0
+
+    goto :goto_242
+
+    :catch_25d
+    move-exception v3
+
+    goto :goto_258
+.end method
+
+.method public execStartActivity(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;Landroid/os/UserHandle;)Landroid/app/Instrumentation$ActivityResult;
+    .registers 33
+
+    move-object/from16 v4, p2
+
+    check-cast v4, Landroid/app/IApplicationThread;
+
+    const/16 v17, 0x1
+
+    :try_start_6
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with UserHandle): execStartActivity for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_ba
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v3
+
+    const-string v5, "android.intent.action.CALL"
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_40
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v3
+
+    const-string v5, "android.intent.action.DIAL"
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_ba
+
+    :cond_40
+    const/16 v17, 0x0
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with UserHandle): Intent action = Intent.ACTION_CALL or Intent.ACTION_DIAL for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v3, :cond_6e
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v3}, Landroid/privacy/PrivacySettingsManager;->isServiceAvailable()Z
+
+    move-result v3
+
+    if-nez v3, :cond_130
+
+    :cond_6e
+    new-instance v3, Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v5, "privacy"
+
+    invoke-static {v5}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v5
+
+    invoke-static {v5}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v5
+
+    move-object/from16 v0, p1
+
+    invoke-direct {v3, v0, v5}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v3, :cond_106
+
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with UserHandle): Obtained privacy service"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    :goto_91
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v3, :cond_a1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v3}, Landroid/privacy/PrivacySettingsManager;->isServiceAvailable()Z
+
+    move-result v3
+
+    if-nez v3, :cond_139
+
+    :cond_a1
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with UserHandle): Privacy service not available: rejecting call attempt"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v17, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v6, 0x1
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    :try_end_ba
+    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_ba} :catch_10e
+
+    :cond_ba
+    :goto_ba
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+
+    if-eqz v3, :cond_209
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Landroid/app/Instrumentation;->mSync:Ljava/lang/Object;
+
+    monitor-enter v5
+
+    :try_start_c5
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+
+    invoke-interface {v3}, Ljava/util/List;->size()I
+
+    move-result v16
+
+    const/16 v20, 0x0
+
+    :goto_cf
+    move/from16 v0, v20
+
+    move/from16 v1, v16
+
+    if-ge v0, v1, :cond_208
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+
+    move/from16 v0, v20
+
+    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Landroid/app/Instrumentation$ActivityMonitor;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, p1
+
+    move-object/from16 v2, p5
+
+    invoke-virtual {v0, v1, v3, v2}, Landroid/app/Instrumentation$ActivityMonitor;->match(Landroid/content/Context;Landroid/app/Activity;Landroid/content/Intent;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_204
+
+    move-object/from16 v0, v18
+
+    iget v3, v0, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+
+    add-int/lit8 v3, v3, 0x1
+
+    move-object/from16 v0, v18
+
+    iput v3, v0, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+
+    invoke-virtual/range {v18 .. v18}, Landroid/app/Instrumentation$ActivityMonitor;->isBlocking()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_208
+
+    if-ltz p6, :cond_201
+
+    invoke-virtual/range {v18 .. v18}, Landroid/app/Instrumentation$ActivityMonitor;->getResult()Landroid/app/Instrumentation$ActivityResult;
+
+    move-result-object v3
+
+    :goto_104
+    monitor-exit v5
+    :try_end_105
+    .catchall {:try_start_c5 .. :try_end_105} :catchall_223
+
+    :goto_105
+    return-object v3
+
+    :cond_106
+    :try_start_106
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with UserHandle): Privacy service not obtained"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_10d
+    .catch Ljava/lang/Exception; {:try_start_106 .. :try_end_10d} :catch_10e
+
+    goto :goto_91
+
+    :catch_10e
+    move-exception v19
+
+    if-eqz p1, :cond_1f6
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with UserHandle): Exception occurred handling intent for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v19
+
+    invoke-static {v3, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_ba
+
+    :cond_130
+    :try_start_130
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with UserHandle): Already had privacy service"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_91
+
+    :cond_139
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v21
+
+    if-nez v21, :cond_177
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with UserHandle): Call allowed: No settings for package: "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v17, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v6, 0x0
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    goto/16 :goto_ba
+
+    :cond_177
+    invoke-virtual/range {v21 .. v21}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v3
+
+    if-nez v3, :cond_1b0
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with UserHandle): Call allowed: Settings permit "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v17, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual/range {v21 .. v21}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v6
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    goto/16 :goto_ba
+
+    :cond_1b0
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with UserHandle): Call denied: Settings deny "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v23, p1
+
+    const/16 v17, 0x0
+
+    new-instance v3, Ljava/lang/Thread;
+
+    new-instance v5, Landroid/app/Instrumentation$4;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-direct {v5, v0, v1}, Landroid/app/Instrumentation$4;-><init>(Landroid/app/Instrumentation;Landroid/content/Context;)V
+
+    invoke-direct {v3, v5}, Ljava/lang/Thread;-><init>(Ljava/lang/Runnable;)V
+
+    invoke-virtual {v3}, Ljava/lang/Thread;->start()V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual/range {v21 .. v21}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v6
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    :try_end_1f4
+    .catch Ljava/lang/Exception; {:try_start_130 .. :try_end_1f4} :catch_10e
+
+    goto/16 :goto_ba
+
+    :cond_1f6
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with UserHandle): Exception occurred handling intent for unknown package"
+
+    move-object/from16 v0, v19
+
+    invoke-static {v3, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto/16 :goto_ba
+
+    :cond_201
+    const/4 v3, 0x0
+
+    goto/16 :goto_104
+
+    :cond_204
+    add-int/lit8 v20, v20, 0x1
+
+    goto/16 :goto_cf
+
+    :cond_208
+    :try_start_208
+    monitor-exit v5
+    :try_end_209
+    .catchall {:try_start_208 .. :try_end_209} :catchall_223
+
+    :cond_209
+    if-nez v17, :cond_226
+
+    :try_start_20b
+    new-instance v3, Landroid/app/Instrumentation$ActivityResult;
+
+    move/from16 v0, p6
+
+    move-object/from16 v1, p5
+
+    invoke-direct {v3, v0, v1}, Landroid/app/Instrumentation$ActivityResult;-><init>(ILandroid/content/Intent;)V
+    :try_end_214
+    .catch Ljava/lang/Exception; {:try_start_20b .. :try_end_214} :catch_216
+
+    goto/16 :goto_105
+
+    :catch_216
+    move-exception v19
+
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with UserHandle): Exception occurred while trying to create ActivityResult"
+
+    move-object/from16 v0, v19
+
+    invoke-static {v3, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/4 v3, 0x0
+
+    goto/16 :goto_105
+
+    :catchall_223
+    move-exception v3
+
+    :try_start_224
+    monitor-exit v5
+    :try_end_225
+    .catchall {:try_start_224 .. :try_end_225} :catchall_223
+
+    throw v3
+
+    :cond_226
+    :try_start_226
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->migrateExtraStreamToClipData()Z
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->prepareToLeaveProcess()V
+
+    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;
+
+    move-result-object v3
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getBasePackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v6
+
+    move-object/from16 v0, p5
+
+    invoke-virtual {v0, v6}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;
+
+    move-result-object v7
+
+    if-eqz p4, :cond_261
+
+    move-object/from16 v0, p4
+
+    iget-object v9, v0, Landroid/app/Activity;->mEmbeddedID:Ljava/lang/String;
+
+    :goto_244
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    invoke-virtual/range {p8 .. p8}, Landroid/os/UserHandle;->getIdentifier()I
+
+    move-result v15
+
+    move-object/from16 v6, p5
+
+    move-object/from16 v8, p3
+
+    move/from16 v10, p6
+
+    move-object/from16 v14, p7
+
+    invoke-interface/range {v3 .. v15}, Landroid/app/IActivityManager;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/Bundle;I)I
+
+    move-result v22
+
+    move/from16 v0, v22
+
+    move-object/from16 v1, p5
+
+    invoke-static {v0, v1}, Landroid/app/Instrumentation;->checkStartActivityResult(ILjava/lang/Object;)V
+    :try_end_25e
+    .catch Landroid/os/RemoteException; {:try_start_226 .. :try_end_25e} :catch_263
+
+    :goto_25e
+    const/4 v3, 0x0
+
+    goto/16 :goto_105
+
+    :cond_261
+    const/4 v9, 0x0
+
+    goto :goto_244
+
+    :catch_263
+    move-exception v3
+
+    goto :goto_25e
+.end method
+
+.method public execStartActivity(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Fragment;Landroid/content/Intent;ILandroid/os/Bundle;)Landroid/app/Instrumentation$ActivityResult;
+    .registers 31
+
+    move-object/from16 v4, p2
+
+    check-cast v4, Landroid/app/IApplicationThread;
+
+    const/16 v16, 0x1
+
+    :try_start_6
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with Fragments): execStartActivity for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_ba
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v3
+
+    const-string v5, "android.intent.action.CALL"
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_40
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v3
+
+    const-string v5, "android.intent.action.DIAL"
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_ba
+
+    :cond_40
+    const/16 v16, 0x0
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with Fragments): Intent action = Intent.ACTION_CALL or Intent.ACTION_DIAL for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v3, :cond_6e
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v3}, Landroid/privacy/PrivacySettingsManager;->isServiceAvailable()Z
+
+    move-result v3
+
+    if-nez v3, :cond_12e
+
+    :cond_6e
+    new-instance v3, Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v5, "privacy"
+
+    invoke-static {v5}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v5
+
+    invoke-static {v5}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v5
+
+    move-object/from16 v0, p1
+
+    invoke-direct {v3, v0, v5}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v3, :cond_104
+
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with Fragments): Obtained privacy service"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    :goto_91
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v3, :cond_a1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v3}, Landroid/privacy/PrivacySettingsManager;->isServiceAvailable()Z
+
+    move-result v3
+
+    if-nez v3, :cond_137
+
+    :cond_a1
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with Fragments): Privacy service not available: rejecting call attempt"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v16, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v6, 0x1
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    :try_end_ba
+    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_ba} :catch_10c
+
+    :cond_ba
+    :goto_ba
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+
+    if-eqz v3, :cond_207
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Landroid/app/Instrumentation;->mSync:Ljava/lang/Object;
+
+    monitor-enter v5
+
+    :try_start_c5
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+
+    invoke-interface {v3}, Ljava/util/List;->size()I
+
+    move-result v15
+
+    const/16 v19, 0x0
+
+    :goto_cf
+    move/from16 v0, v19
+
+    if-ge v0, v15, :cond_206
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mActivityMonitors:Ljava/util/List;
+
+    move/from16 v0, v19
+
+    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v17
+
+    check-cast v17, Landroid/app/Instrumentation$ActivityMonitor;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v17
+
+    move-object/from16 v1, p1
+
+    move-object/from16 v2, p5
+
+    invoke-virtual {v0, v1, v3, v2}, Landroid/app/Instrumentation$ActivityMonitor;->match(Landroid/content/Context;Landroid/app/Activity;Landroid/content/Intent;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_202
+
+    move-object/from16 v0, v17
+
+    iget v3, v0, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+
+    add-int/lit8 v3, v3, 0x1
+
+    move-object/from16 v0, v17
+
+    iput v3, v0, Landroid/app/Instrumentation$ActivityMonitor;->mHits:I
+
+    invoke-virtual/range {v17 .. v17}, Landroid/app/Instrumentation$ActivityMonitor;->isBlocking()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_206
+
+    if-ltz p6, :cond_1ff
+
+    invoke-virtual/range {v17 .. v17}, Landroid/app/Instrumentation$ActivityMonitor;->getResult()Landroid/app/Instrumentation$ActivityResult;
+
+    move-result-object v3
+
+    :goto_102
+    monitor-exit v5
+    :try_end_103
+    .catchall {:try_start_c5 .. :try_end_103} :catchall_221
+
+    :goto_103
+    return-object v3
+
+    :cond_104
+    :try_start_104
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with Fragments): Privacy service not obtained"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_10b
+    .catch Ljava/lang/Exception; {:try_start_104 .. :try_end_10b} :catch_10c
+
+    goto :goto_91
+
+    :catch_10c
+    move-exception v18
+
+    if-eqz p1, :cond_1f4
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with Fragments): Exception occurred handling intent for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    invoke-static {v3, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_ba
+
+    :cond_12e
+    :try_start_12e
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with Fragments): Already had privacy service"
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_91
+
+    :cond_137
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v20
+
+    if-nez v20, :cond_175
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with Fragments): Call allowed: No settings for package: "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v16, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v6, 0x0
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    goto/16 :goto_ba
+
+    :cond_175
+    invoke-virtual/range {v20 .. v20}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v3
+
+    if-nez v3, :cond_1ae
+
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with Fragments): Call allowed: Settings permit "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v16, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual/range {v20 .. v20}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v6
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    goto/16 :goto_ba
+
+    :cond_1ae
+    const-string v3, "Instrumentation"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PDroid:Instrumentation:execStartActivity (with Fragments): Call denied: Settings deny "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v22, p1
+
+    const/16 v16, 0x0
+
+    new-instance v3, Ljava/lang/Thread;
+
+    new-instance v5, Landroid/app/Instrumentation$3;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v22
+
+    invoke-direct {v5, v0, v1}, Landroid/app/Instrumentation$3;-><init>(Landroid/app/Instrumentation;Landroid/content/Context;)V
+
+    invoke-direct {v3, v5}, Ljava/lang/Thread;-><init>(Ljava/lang/Runnable;)V
+
+    invoke-virtual {v3}, Ljava/lang/Thread;->start()V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/app/Instrumentation;->mPrvSvc:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual/range {v20 .. v20}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v6
+
+    const-string/jumbo v7, "phoneCall"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v3, v5, v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    :try_end_1f2
+    .catch Ljava/lang/Exception; {:try_start_12e .. :try_end_1f2} :catch_10c
+
+    goto/16 :goto_ba
+
+    :cond_1f4
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with Fragments): Exception occurred handling intent for unknown package"
+
+    move-object/from16 v0, v18
+
+    invoke-static {v3, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto/16 :goto_ba
+
+    :cond_1ff
+    const/4 v3, 0x0
+
+    goto/16 :goto_102
+
+    :cond_202
+    add-int/lit8 v19, v19, 0x1
+
+    goto/16 :goto_cf
+
+    :cond_206
+    :try_start_206
+    monitor-exit v5
+    :try_end_207
+    .catchall {:try_start_206 .. :try_end_207} :catchall_221
+
+    :cond_207
+    if-nez v16, :cond_224
+
+    :try_start_209
+    new-instance v3, Landroid/app/Instrumentation$ActivityResult;
+
+    move/from16 v0, p6
+
+    move-object/from16 v1, p5
+
+    invoke-direct {v3, v0, v1}, Landroid/app/Instrumentation$ActivityResult;-><init>(ILandroid/content/Intent;)V
+    :try_end_212
+    .catch Ljava/lang/Exception; {:try_start_209 .. :try_end_212} :catch_214
+
+    goto/16 :goto_103
+
+    :catch_214
+    move-exception v18
+
+    const-string v3, "Instrumentation"
+
+    const-string v5, "PDroid:Instrumentation:execStartActivity (with Fragments): Exception occurred while trying to create ActivityResult"
+
+    move-object/from16 v0, v18
+
+    invoke-static {v3, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/4 v3, 0x0
+
+    goto/16 :goto_103
+
+    :catchall_221
+    move-exception v3
+
+    :try_start_222
+    monitor-exit v5
+    :try_end_223
+    .catchall {:try_start_222 .. :try_end_223} :catchall_221
+
+    throw v3
+
+    :cond_224
+    :try_start_224
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->migrateExtraStreamToClipData()Z
+
+    invoke-virtual/range {p5 .. p5}, Landroid/content/Intent;->prepareToLeaveProcess()V
+
+    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;
+
+    move-result-object v3
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getBasePackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v6
+
+    move-object/from16 v0, p5
+
+    invoke-virtual {v0, v6}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;
+
+    move-result-object v7
+
+    if-eqz p4, :cond_25b
+
+    move-object/from16 v0, p4
+
+    iget-object v9, v0, Landroid/app/Fragment;->mWho:Ljava/lang/String;
+
+    :goto_242
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    move-object/from16 v6, p5
+
+    move-object/from16 v8, p3
+
+    move/from16 v10, p6
+
+    move-object/from16 v14, p7
+
+    invoke-interface/range {v3 .. v14}, Landroid/app/IActivityManager;->startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/Bundle;)I
+
+    move-result v21
+
+    move/from16 v0, v21
+
+    move-object/from16 v1, p5
+
+    invoke-static {v0, v1}, Landroid/app/Instrumentation;->checkStartActivityResult(ILjava/lang/Object;)V
+    :try_end_258
+    .catch Landroid/os/RemoteException; {:try_start_224 .. :try_end_258} :catch_25d
+
+    :goto_258
+    const/4 v3, 0x0
+
+    goto/16 :goto_103
+
+    :cond_25b
+    const/4 v9, 0x0
+
+    goto :goto_242
+
+    :catch_25d
+    move-exception v3
+
+    goto :goto_258
 .end method
 
 .method public finish(ILandroid/os/Bundle;)V
diff -Npruw stock-framework/smali/android/app/LoaderManagerImpl$LoaderInfo.smali pdroid-framework/smali/android/app/LoaderManagerImpl$LoaderInfo.smali
--- stock-framework/smali/android/app/LoaderManagerImpl$LoaderInfo.smali	2014-01-02 21:10:17.864311316 -0600
+++ pdroid-framework/smali/android/app/LoaderManagerImpl$LoaderInfo.smali	2014-01-02 21:10:33.044310918 -0600
@@ -534,7 +534,7 @@
 
     invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
-    const-string v0, "mLoader="
+    const-string/jumbo v0, "mLoader="
 
     invoke-virtual {p3, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
@@ -544,7 +544,7 @@
 
     iget-object v0, p0, Landroid/app/LoaderManagerImpl$LoaderInfo;->mLoader:Landroid/content/Loader;
 
-    if-eqz v0, :cond_4d
+    if-eqz v0, :cond_4e
 
     iget-object v0, p0, Landroid/app/LoaderManagerImpl$LoaderInfo;->mLoader:Landroid/content/Loader;
 
@@ -568,16 +568,16 @@
 
     invoke-virtual {v0, v1, p2, p3, p4}, Landroid/content/Loader;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
 
-    :cond_4d
+    :cond_4e
     iget-boolean v0, p0, Landroid/app/LoaderManagerImpl$LoaderInfo;->mHaveData:Z
 
-    if-nez v0, :cond_55
+    if-nez v0, :cond_56
 
     iget-boolean v0, p0, Landroid/app/LoaderManagerImpl$LoaderInfo;->mDeliveredData:Z
 
-    if-eqz v0, :cond_79
+    if-eqz v0, :cond_7a
 
-    :cond_55
+    :cond_56
     invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
     const-string v0, "mHaveData="
@@ -606,7 +606,7 @@
 
     invoke-virtual {p3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
 
-    :cond_79
+    :cond_7a
     invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
     const-string/jumbo v0, "mStarted="
@@ -661,7 +661,7 @@
 
     iget-object v0, p0, Landroid/app/LoaderManagerImpl$LoaderInfo;->mPendingLoader:Landroid/app/LoaderManagerImpl$LoaderInfo;
 
-    if-eqz v0, :cond_eb
+    if-eqz v0, :cond_ec
 
     invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
@@ -699,7 +699,7 @@
 
     invoke-virtual {v0, v1, p2, p3, p4}, Landroid/app/LoaderManagerImpl$LoaderInfo;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
 
-    :cond_eb
+    :cond_ec
     return-void
 .end method
 
diff -Npruw stock-framework/smali/android/content/ContentResolver.smali pdroid-framework/smali/android/content/ContentResolver.smali
--- stock-framework/smali/android/content/ContentResolver.smali	2014-01-02 21:10:17.696311321 -0600
+++ pdroid-framework/smali/android/content/ContentResolver.smali	2014-01-02 21:10:32.784310925 -0600
@@ -3757,8 +3757,8 @@
 
     invoke-virtual {v0, v10}, Landroid/os/CancellationSignal;->setRemote(Landroid/os/ICancellationSignal;)V
     :try_end_1f
-    .catchall {:try_start_c .. :try_end_1f} :catchall_d9
-    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_1f} :catch_c1
+    .catchall {:try_start_c .. :try_end_1f} :catchall_f5
+    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_1f} :catch_dd
 
     :cond_1f
     :try_start_1f
@@ -3777,30 +3777,44 @@
     move-object/from16 v9, p5
 
     invoke-interface/range {v3 .. v10}, Landroid/content/IContentProvider;->query(Ljava/lang/String;Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/ICancellationSignal;)Landroid/database/Cursor;
-    :try_end_30
-    .catchall {:try_start_1f .. :try_end_30} :catchall_d9
-    .catch Landroid/os/DeadObjectException; {:try_start_1f .. :try_end_30} :catch_49
-    .catch Landroid/os/RemoteException; {:try_start_1f .. :try_end_30} :catch_c1
 
     move-result-object v20
 
-    :goto_31
-    if-nez v20, :cond_80
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Landroid/content/ContentResolver;->mContext:Landroid/content/Context;
+
+    move-object/from16 v0, p1
+
+    move-object/from16 v1, p2
+
+    move-object/from16 v2, v20
+
+    invoke-static {v0, v1, v4, v2}, Landroid/privacy/surrogate/PrivacyContentResolver;->enforcePrivacyPermission(Landroid/net/Uri;[Ljava/lang/String;Landroid/content/Context;Landroid/database/Cursor;)Landroid/database/Cursor;
+    :try_end_3e
+    .catchall {:try_start_1f .. :try_end_3e} :catchall_f5
+    .catch Landroid/os/DeadObjectException; {:try_start_1f .. :try_end_3e} :catch_57
+    .catch Landroid/os/RemoteException; {:try_start_1f .. :try_end_3e} :catch_dd
+
+    move-result-object v20
+
+    :goto_3f
+    if-nez v20, :cond_9c
 
     const/16 v23, 0x0
 
-    if-eqz v20, :cond_3a
+    if-eqz v20, :cond_48
 
     invoke-interface/range {v20 .. v20}, Landroid/database/Cursor;->close()V
 
-    :cond_3a
-    if-eqz v3, :cond_41
+    :cond_48
+    if-eqz v3, :cond_4f
 
     move-object/from16 v0, p0
 
     invoke-virtual {v0, v3}, Landroid/content/ContentResolver;->releaseUnstableProvider(Landroid/content/IContentProvider;)Z
 
-    :cond_41
+    :cond_4f
     if-eqz v11, :cond_8
 
     move-object/from16 v0, p0
@@ -3809,37 +3823,37 @@
 
     goto :goto_8
 
-    :catch_49
+    :catch_57
     move-exception v19
 
-    :try_start_4a
+    :try_start_58
     move-object/from16 v0, p0
 
     invoke-virtual {v0, v3}, Landroid/content/ContentResolver;->unstableProviderDied(Landroid/content/IContentProvider;)V
 
     invoke-virtual/range {p0 .. p1}, Landroid/content/ContentResolver;->acquireProvider(Landroid/net/Uri;)Landroid/content/IContentProvider;
-    :try_end_52
-    .catchall {:try_start_4a .. :try_end_52} :catchall_d9
-    .catch Landroid/os/RemoteException; {:try_start_4a .. :try_end_52} :catch_c1
+    :try_end_60
+    .catchall {:try_start_58 .. :try_end_60} :catchall_f5
+    .catch Landroid/os/RemoteException; {:try_start_58 .. :try_end_60} :catch_dd
 
     move-result-object v11
 
-    if-nez v11, :cond_6b
+    if-nez v11, :cond_79
 
     const/16 v23, 0x0
 
-    if-eqz v20, :cond_5c
+    if-eqz v20, :cond_6a
 
     invoke-interface/range {v20 .. v20}, Landroid/database/Cursor;->close()V
 
-    :cond_5c
-    if-eqz v3, :cond_63
+    :cond_6a
+    if-eqz v3, :cond_71
 
     move-object/from16 v0, p0
 
     invoke-virtual {v0, v3}, Landroid/content/ContentResolver;->releaseUnstableProvider(Landroid/content/IContentProvider;)Z
 
-    :cond_63
+    :cond_71
     if-eqz v11, :cond_8
 
     move-object/from16 v0, p0
@@ -3848,8 +3862,8 @@
 
     goto :goto_8
 
-    :cond_6b
-    :try_start_6b
+    :cond_79
+    :try_start_79
     move-object/from16 v0, p0
 
     iget-object v12, v0, Landroid/content/ContentResolver;->mPackageName:Ljava/lang/String;
@@ -3870,9 +3884,23 @@
 
     move-result-object v20
 
-    goto :goto_31
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Landroid/content/ContentResolver;->mContext:Landroid/content/Context;
+
+    move-object/from16 v0, p1
+
+    move-object/from16 v1, p2
+
+    move-object/from16 v2, v20
+
+    invoke-static {v0, v1, v4, v2}, Landroid/privacy/surrogate/PrivacyContentResolver;->enforcePrivacyPermission(Landroid/net/Uri;[Ljava/lang/String;Landroid/content/Context;Landroid/database/Cursor;)Landroid/database/Cursor;
+
+    move-result-object v20
+
+    goto :goto_3f
 
-    :cond_80
+    :cond_9c
     invoke-interface/range {v20 .. v20}, Landroid/database/Cursor;->getCount()I
 
     invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
@@ -3895,11 +3923,11 @@
 
     new-instance v23, Landroid/content/ContentResolver$CursorWrapperInner;
 
-    if-eqz v11, :cond_bc
+    if-eqz v11, :cond_d8
 
     move-object v4, v11
 
-    :goto_9b
+    :goto_b7
     move-object/from16 v0, v23
 
     move-object/from16 v1, p0
@@ -3907,26 +3935,26 @@
     move-object/from16 v2, v20
 
     invoke-direct {v0, v1, v2, v4}, Landroid/content/ContentResolver$CursorWrapperInner;-><init>(Landroid/content/ContentResolver;Landroid/database/Cursor;Landroid/content/IContentProvider;)V
-    :try_end_a4
-    .catchall {:try_start_6b .. :try_end_a4} :catchall_d9
-    .catch Landroid/os/RemoteException; {:try_start_6b .. :try_end_a4} :catch_c1
+    :try_end_c0
+    .catchall {:try_start_79 .. :try_end_c0} :catchall_f5
+    .catch Landroid/os/RemoteException; {:try_start_79 .. :try_end_c0} :catch_dd
 
     const/4 v11, 0x0
 
     const/16 v20, 0x0
 
-    if-eqz v20, :cond_ac
+    if-eqz v20, :cond_c8
 
     invoke-interface/range {v20 .. v20}, Landroid/database/Cursor;->close()V
 
-    :cond_ac
-    if-eqz v3, :cond_b3
+    :cond_c8
+    if-eqz v3, :cond_cf
 
     move-object/from16 v0, p0
 
     invoke-virtual {v0, v3}, Landroid/content/ContentResolver;->releaseUnstableProvider(Landroid/content/IContentProvider;)Z
 
-    :cond_b3
+    :cond_cf
     if-eqz v11, :cond_8
 
     move-object/from16 v0, p0
@@ -3935,34 +3963,34 @@
 
     goto/16 :goto_8
 
-    :cond_bc
-    :try_start_bc
+    :cond_d8
+    :try_start_d8
     invoke-virtual/range {p0 .. p1}, Landroid/content/ContentResolver;->acquireProvider(Landroid/net/Uri;)Landroid/content/IContentProvider;
-    :try_end_bf
-    .catchall {:try_start_bc .. :try_end_bf} :catchall_d9
-    .catch Landroid/os/RemoteException; {:try_start_bc .. :try_end_bf} :catch_c1
+    :try_end_db
+    .catchall {:try_start_d8 .. :try_end_db} :catchall_f5
+    .catch Landroid/os/RemoteException; {:try_start_d8 .. :try_end_db} :catch_dd
 
     move-result-object v4
 
-    goto :goto_9b
+    goto :goto_b7
 
-    :catch_c1
+    :catch_dd
     move-exception v19
 
     const/16 v23, 0x0
 
-    if-eqz v20, :cond_c9
+    if-eqz v20, :cond_e5
 
     invoke-interface/range {v20 .. v20}, Landroid/database/Cursor;->close()V
 
-    :cond_c9
-    if-eqz v3, :cond_d0
+    :cond_e5
+    if-eqz v3, :cond_ec
 
     move-object/from16 v0, p0
 
     invoke-virtual {v0, v3}, Landroid/content/ContentResolver;->releaseUnstableProvider(Landroid/content/IContentProvider;)Z
 
-    :cond_d0
+    :cond_ec
     if-eqz v11, :cond_8
 
     move-object/from16 v0, p0
@@ -3971,28 +3999,28 @@
 
     goto/16 :goto_8
 
-    :catchall_d9
+    :catchall_f5
     move-exception v4
 
-    if-eqz v20, :cond_df
+    if-eqz v20, :cond_fb
 
     invoke-interface/range {v20 .. v20}, Landroid/database/Cursor;->close()V
 
-    :cond_df
-    if-eqz v3, :cond_e6
+    :cond_fb
+    if-eqz v3, :cond_102
 
     move-object/from16 v0, p0
 
     invoke-virtual {v0, v3}, Landroid/content/ContentResolver;->releaseUnstableProvider(Landroid/content/IContentProvider;)Z
 
-    :cond_e6
-    if-eqz v11, :cond_ed
+    :cond_102
+    if-eqz v11, :cond_109
 
     move-object/from16 v0, p0
 
     invoke-virtual {v0, v11}, Landroid/content/ContentResolver;->releaseProvider(Landroid/content/IContentProvider;)Z
 
-    :cond_ed
+    :cond_109
     throw v4
 .end method
 
diff -Npruw stock-framework/smali/android/content/pm/ContainerEncryptionParams.smali pdroid-framework/smali/android/content/pm/ContainerEncryptionParams.smali
--- stock-framework/smali/android/content/pm/ContainerEncryptionParams.smali	2014-01-02 21:10:18.212311307 -0600
+++ pdroid-framework/smali/android/content/pm/ContainerEncryptionParams.smali	2014-01-02 21:10:33.524310906 -0600
@@ -837,7 +837,7 @@
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    const-string v1, "mMacAlgorithm=\""
+    const-string/jumbo v1, "mMacAlgorithm=\""
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
@@ -849,7 +849,7 @@
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    const-string v1, "mMacSpec="
+    const-string/jumbo v1, "mMacSpec="
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
@@ -861,7 +861,7 @@
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    const-string v1, "mMacKey="
+    const-string/jumbo v1, "mMacKey="
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
diff -Npruw stock-framework/smali/android/hardware/Camera$EventHandler.smali pdroid-framework/smali/android/hardware/Camera$EventHandler.smali
--- stock-framework/smali/android/hardware/Camera$EventHandler.smali	2014-01-02 21:10:18.744311293 -0600
+++ pdroid-framework/smali/android/hardware/Camera$EventHandler.smali	2014-01-02 21:10:34.224310887 -0600
@@ -36,501 +36,879 @@
 
 # virtual methods
 .method public handleMessage(Landroid/os/Message;)V
-    .registers 11
+    .registers 19
 
-    const/16 v7, 0x101
+    const/4 v8, 0x1
 
-    const/4 v5, 0x1
+    move-object/from16 v0, p0
 
-    const/4 v4, 0x0
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #getter for: Landroid/hardware/Camera;->privacyMode:Z
+    invoke-static {v1}, Landroid/hardware/Camera;->access$000(Landroid/hardware/Camera;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_12
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #calls: Landroid/hardware/Camera;->initiate()V
+    invoke-static {v1}, Landroid/hardware/Camera;->access$100(Landroid/hardware/Camera;)V
+
+    :cond_12
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #calls: Landroid/hardware/Camera;->getPackageName()[Ljava/lang/String;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$200(Landroid/hardware/Camera;)[Ljava/lang/String;
+
+    move-result-object v12
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #calls: Landroid/hardware/Camera;->checkIfPackagesAllowed()I
+    invoke-static {v1}, Landroid/hardware/Camera;->access$300(Landroid/hardware/Camera;)I
+
+    move-result v1
+
+    const/4 v2, -0x2
+
+    if-ne v1, v2, :cond_7c
+
+    const/4 v8, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    const/4 v2, 0x0
+
+    #calls: Landroid/hardware/Camera;->dataAccess(Z)V
+    invoke-static {v1, v2}, Landroid/hardware/Camera;->access$400(Landroid/hardware/Camera;Z)V
+
+    if-eqz v12, :cond_58
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #getter for: Landroid/hardware/Camera;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$500(Landroid/hardware/Camera;)Landroid/privacy/PrivacySettingsManager;
 
-    iget v6, p1, Landroid/os/Message;->what:I
+    move-result-object v1
 
-    sparse-switch v6, :sswitch_data_1a0
+    const/4 v2, 0x0
 
-    const-string v5, "Camera"
+    aget-object v2, v12, v2
 
-    new-instance v6, Ljava/lang/StringBuilder;
+    const/4 v3, 0x0
 
-    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+    const/4 v4, 0x1
 
-    const-string v7, "Unknown message type "
+    const-string v5, "camera"
 
-    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    const/4 v6, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v7, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #getter for: Landroid/hardware/Camera;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+    invoke-static {v7}, Landroid/hardware/Camera;->access$500(Landroid/hardware/Camera;)Landroid/privacy/PrivacySettingsManager;
+
+    move-result-object v7
+
+    const/4 v15, 0x0
+
+    aget-object v15, v12, v15
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v16
+
+    move/from16 v0, v16
+
+    invoke-virtual {v7, v15, v0}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
 
-    move-result-object v6
+    :cond_58
+    :goto_58
+    move-object/from16 v0, p1
 
-    iget v7, p1, Landroid/os/Message;->what:I
+    iget v1, v0, Landroid/os/Message;->what:I
 
-    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    sparse-switch v1, :sswitch_data_2f8
 
-    move-result-object v6
+    const-string v1, "Camera"
 
-    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+    new-instance v2, Ljava/lang/StringBuilder;
 
-    move-result-object v6
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
 
-    invoke-static {v5, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    const-string v3, "Unknown message type "
 
-    :cond_23
-    :goto_23
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p1
+
+    iget v3, v0, Landroid/os/Message;->what:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_7b
+    :goto_7b
     return-void
 
-    :sswitch_24
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    :cond_7c
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    const/4 v2, 0x1
+
+    #calls: Landroid/hardware/Camera;->dataAccess(Z)V
+    invoke-static {v1, v2}, Landroid/hardware/Camera;->access$400(Landroid/hardware/Camera;Z)V
+
+    if-eqz v12, :cond_58
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #getter for: Landroid/hardware/Camera;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$500(Landroid/hardware/Camera;)Landroid/privacy/PrivacySettingsManager;
+
+    move-result-object v1
+
+    const/4 v2, 0x0
+
+    aget-object v2, v12, v2
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    const-string v5, "camera"
+
+    const/4 v6, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v7, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #getter for: Landroid/hardware/Camera;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+    invoke-static {v7}, Landroid/hardware/Camera;->access$500(Landroid/hardware/Camera;)Landroid/privacy/PrivacySettingsManager;
+
+    move-result-object v7
+
+    const/4 v15, 0x0
+
+    aget-object v15, v12, v15
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v16
+
+    move/from16 v0, v16
+
+    invoke-virtual {v7, v15, v0}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_58
+
+    :sswitch_af
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mShutterCallback:Landroid/hardware/Camera$ShutterCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$000(Landroid/hardware/Camera;)Landroid/hardware/Camera$ShutterCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$600(Landroid/hardware/Camera;)Landroid/hardware/Camera$ShutterCallback;
 
-    move-result-object v5
+    move-result-object v1
 
-    if-eqz v5, :cond_23
+    if-eqz v1, :cond_7b
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mShutterCallback:Landroid/hardware/Camera$ShutterCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$000(Landroid/hardware/Camera;)Landroid/hardware/Camera$ShutterCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$600(Landroid/hardware/Camera;)Landroid/hardware/Camera$ShutterCallback;
+
+    move-result-object v1
 
-    move-result-object v5
+    invoke-interface {v1}, Landroid/hardware/Camera$ShutterCallback;->onShutter()V
 
-    invoke-interface {v5}, Landroid/hardware/Camera$ShutterCallback;->onShutter()V
+    goto :goto_7b
 
-    goto :goto_23
+    :sswitch_c5
+    move-object/from16 v0, p0
 
-    :sswitch_36
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mRawImageCallback:Landroid/hardware/Camera$PictureCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$100(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$700(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+
+    move-result-object v1
 
-    move-result-object v5
+    if-eqz v1, :cond_7b
 
-    if-eqz v5, :cond_23
+    if-eqz v8, :cond_e9
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mRawImageCallback:Landroid/hardware/Camera$PictureCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$100(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$700(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+
+    move-result-object v2
 
-    move-result-object v6
+    move-object/from16 v0, p1
 
-    iget-object v5, p1, Landroid/os/Message;->obj:Ljava/lang/Object;
+    iget-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;
 
-    check-cast v5, [B
+    check-cast v1, [B
 
-    check-cast v5, [B
+    check-cast v1, [B
 
-    iget-object v7, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
 
-    invoke-interface {v6, v5, v7}, Landroid/hardware/Camera$PictureCallback;->onPictureTaken([BLandroid/hardware/Camera;)V
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    goto :goto_23
+    invoke-interface {v2, v1, v3}, Landroid/hardware/Camera$PictureCallback;->onPictureTaken([BLandroid/hardware/Camera;)V
 
-    :sswitch_50
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    goto :goto_7b
+
+    :cond_e9
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #getter for: Landroid/hardware/Camera;->mRawImageCallback:Landroid/hardware/Camera$PictureCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$700(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+
+    move-result-object v1
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+
+    invoke-interface {v1, v2, v3}, Landroid/hardware/Camera$PictureCallback;->onPictureTaken([BLandroid/hardware/Camera;)V
+
+    goto :goto_7b
+
+    :sswitch_fa
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mJpegCallback:Landroid/hardware/Camera$PictureCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$200(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$800(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
 
-    move-result-object v5
+    move-result-object v1
 
-    if-eqz v5, :cond_23
+    if-eqz v1, :cond_7b
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    if-eqz v8, :cond_11f
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mJpegCallback:Landroid/hardware/Camera$PictureCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$200(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$800(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
 
-    move-result-object v6
+    move-result-object v2
 
-    iget-object v5, p1, Landroid/os/Message;->obj:Ljava/lang/Object;
+    move-object/from16 v0, p1
 
-    check-cast v5, [B
+    iget-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;
 
-    check-cast v5, [B
+    check-cast v1, [B
 
-    iget-object v7, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    check-cast v1, [B
 
-    invoke-interface {v6, v5, v7}, Landroid/hardware/Camera$PictureCallback;->onPictureTaken([BLandroid/hardware/Camera;)V
+    move-object/from16 v0, p0
 
-    goto :goto_23
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    :sswitch_6a
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    invoke-interface {v2, v1, v3}, Landroid/hardware/Camera$PictureCallback;->onPictureTaken([BLandroid/hardware/Camera;)V
 
-    #getter for: Landroid/hardware/Camera;->mPreviewCallback:Landroid/hardware/Camera$PreviewCallback;
-    invoke-static {v6}, Landroid/hardware/Camera;->access$300(Landroid/hardware/Camera;)Landroid/hardware/Camera$PreviewCallback;
+    goto/16 :goto_7b
+
+    :cond_11f
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #getter for: Landroid/hardware/Camera;->mJpegCallback:Landroid/hardware/Camera$PictureCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$800(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+
+    move-result-object v1
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #calls: Landroid/hardware/Camera;->getFakeImage()[B
+    invoke-static {v2}, Landroid/hardware/Camera;->access$900(Landroid/hardware/Camera;)[B
 
     move-result-object v2
 
-    if-eqz v2, :cond_23
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+
+    invoke-interface {v1, v2, v3}, Landroid/hardware/Camera$PictureCallback;->onPictureTaken([BLandroid/hardware/Camera;)V
+
+    goto/16 :goto_7b
+
+    :sswitch_138
+    move-object/from16 v0, p0
 
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #getter for: Landroid/hardware/Camera;->mPreviewCallback:Landroid/hardware/Camera$PreviewCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1000(Landroid/hardware/Camera;)Landroid/hardware/Camera$PreviewCallback;
+
+    move-result-object v11
+
+    if-eqz v11, :cond_7b
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mOneShot:Z
-    invoke-static {v6}, Landroid/hardware/Camera;->access$400(Landroid/hardware/Camera;)Z
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1100(Landroid/hardware/Camera;)Z
 
-    move-result v6
+    move-result v1
 
-    if-eqz v6, :cond_8c
+    if-eqz v1, :cond_167
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
 
-    const/4 v6, 0x0
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    const/4 v2, 0x0
 
     #setter for: Landroid/hardware/Camera;->mPreviewCallback:Landroid/hardware/Camera$PreviewCallback;
-    invoke-static {v5, v6}, Landroid/hardware/Camera;->access$302(Landroid/hardware/Camera;Landroid/hardware/Camera$PreviewCallback;)Landroid/hardware/Camera$PreviewCallback;
+    invoke-static {v1, v2}, Landroid/hardware/Camera;->access$1002(Landroid/hardware/Camera;Landroid/hardware/Camera$PreviewCallback;)Landroid/hardware/Camera$PreviewCallback;
+
+    :cond_154
+    :goto_154
+    if-eqz v8, :cond_17b
+
+    move-object/from16 v0, p1
 
-    :cond_80
-    :goto_80
-    iget-object v5, p1, Landroid/os/Message;->obj:Ljava/lang/Object;
+    iget-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;
 
-    check-cast v5, [B
+    check-cast v1, [B
 
-    check-cast v5, [B
+    check-cast v1, [B
 
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
 
-    invoke-interface {v2, v5, v6}, Landroid/hardware/Camera$PreviewCallback;->onPreviewFrame([BLandroid/hardware/Camera;)V
+    iget-object v2, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    goto :goto_23
+    invoke-interface {v11, v1, v2}, Landroid/hardware/Camera$PreviewCallback;->onPreviewFrame([BLandroid/hardware/Camera;)V
 
-    :cond_8c
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    goto/16 :goto_7b
+
+    :cond_167
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mWithBuffer:Z
-    invoke-static {v6}, Landroid/hardware/Camera;->access$500(Landroid/hardware/Camera;)Z
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1200(Landroid/hardware/Camera;)Z
+
+    move-result v1
 
-    move-result v6
+    if-nez v1, :cond_154
 
-    if-nez v6, :cond_80
+    move-object/from16 v0, p0
 
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    const/4 v2, 0x1
+
+    const/4 v3, 0x0
 
     #calls: Landroid/hardware/Camera;->setHasPreviewCallback(ZZ)V
-    invoke-static {v6, v5, v4}, Landroid/hardware/Camera;->access$600(Landroid/hardware/Camera;ZZ)V
+    invoke-static {v1, v2, v3}, Landroid/hardware/Camera;->access$1300(Landroid/hardware/Camera;ZZ)V
+
+    goto :goto_154
+
+    :cond_17b
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #calls: Landroid/hardware/Camera;->getFakeImage()[B
+    invoke-static {v1}, Landroid/hardware/Camera;->access$900(Landroid/hardware/Camera;)[B
+
+    move-result-object v1
 
-    goto :goto_80
+    move-object/from16 v0, p0
 
-    :sswitch_9a
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v2, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+
+    invoke-interface {v11, v1, v2}, Landroid/hardware/Camera$PreviewCallback;->onPreviewFrame([BLandroid/hardware/Camera;)V
+
+    goto/16 :goto_7b
+
+    :sswitch_18c
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mPostviewCallback:Landroid/hardware/Camera$PictureCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$700(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1400(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_7b
+
+    if-eqz v8, :cond_1b1
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+
+    #getter for: Landroid/hardware/Camera;->mPostviewCallback:Landroid/hardware/Camera$PictureCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1400(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+
+    move-result-object v2
+
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    check-cast v1, [B
+
+    check-cast v1, [B
+
+    move-object/from16 v0, p0
 
-    move-result-object v5
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    if-eqz v5, :cond_23
+    invoke-interface {v2, v1, v3}, Landroid/hardware/Camera$PictureCallback;->onPictureTaken([BLandroid/hardware/Camera;)V
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    goto/16 :goto_7b
+
+    :cond_1b1
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mPostviewCallback:Landroid/hardware/Camera$PictureCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$700(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1400(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
 
-    move-result-object v6
+    move-result-object v1
 
-    iget-object v5, p1, Landroid/os/Message;->obj:Ljava/lang/Object;
+    move-object/from16 v0, p0
 
-    check-cast v5, [B
+    iget-object v2, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
-    check-cast v5, [B
+    #calls: Landroid/hardware/Camera;->getFakeImage()[B
+    invoke-static {v2}, Landroid/hardware/Camera;->access$900(Landroid/hardware/Camera;)[B
+
+    move-result-object v2
 
-    iget-object v7, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
 
-    invoke-interface {v6, v5, v7}, Landroid/hardware/Camera$PictureCallback;->onPictureTaken([BLandroid/hardware/Camera;)V
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    goto/16 :goto_23
+    invoke-interface {v1, v2, v3}, Landroid/hardware/Camera$PictureCallback;->onPictureTaken([BLandroid/hardware/Camera;)V
 
-    :sswitch_b5
-    const/4 v0, 0x0
+    goto/16 :goto_7b
 
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    :sswitch_1ca
+    const/4 v9, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mAutoFocusCallbackLock:Ljava/lang/Object;
-    invoke-static {v6}, Landroid/hardware/Camera;->access$800(Landroid/hardware/Camera;)Ljava/lang/Object;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1500(Landroid/hardware/Camera;)Ljava/lang/Object;
 
-    move-result-object v6
+    move-result-object v2
 
-    monitor-enter v6
+    monitor-enter v2
 
-    :try_start_bd
-    iget-object v7, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    :try_start_1d4
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mAutoFocusCallback:Landroid/hardware/Camera$AutoFocusCallback;
-    invoke-static {v7}, Landroid/hardware/Camera;->access$900(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1600(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusCallback;
+
+    move-result-object v9
+
+    monitor-exit v2
+    :try_end_1dd
+    .catchall {:try_start_1d4 .. :try_end_1dd} :catchall_1ef
 
-    move-result-object v0
+    if-eqz v9, :cond_7b
 
-    monitor-exit v6
-    :try_end_c4
-    .catchall {:try_start_bd .. :try_end_c4} :catchall_d1
+    move-object/from16 v0, p1
 
-    if-eqz v0, :cond_23
+    iget v1, v0, Landroid/os/Message;->arg1:I
 
-    iget v6, p1, Landroid/os/Message;->arg1:I
+    if-nez v1, :cond_1f2
 
-    if-nez v6, :cond_d4
+    const/4 v14, 0x0
 
-    :goto_ca
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    :goto_1e6
+    move-object/from16 v0, p0
 
-    invoke-interface {v0, v4, v5}, Landroid/hardware/Camera$AutoFocusCallback;->onAutoFocus(ZLandroid/hardware/Camera;)V
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    goto/16 :goto_23
+    invoke-interface {v9, v14, v1}, Landroid/hardware/Camera$AutoFocusCallback;->onAutoFocus(ZLandroid/hardware/Camera;)V
 
-    :catchall_d1
-    move-exception v5
+    goto/16 :goto_7b
 
-    :try_start_d2
-    monitor-exit v6
-    :try_end_d3
-    .catchall {:try_start_d2 .. :try_end_d3} :catchall_d1
+    :catchall_1ef
+    move-exception v1
 
-    throw v5
+    :try_start_1f0
+    monitor-exit v2
+    :try_end_1f1
+    .catchall {:try_start_1f0 .. :try_end_1f1} :catchall_1ef
 
-    :cond_d4
-    move v4, v5
+    throw v1
 
-    goto :goto_ca
+    :cond_1f2
+    const/4 v14, 0x1
 
-    :sswitch_d6
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    goto :goto_1e6
+
+    :sswitch_1f4
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mZoomListener:Landroid/hardware/Camera$OnZoomChangeListener;
-    invoke-static {v6}, Landroid/hardware/Camera;->access$1000(Landroid/hardware/Camera;)Landroid/hardware/Camera$OnZoomChangeListener;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1700(Landroid/hardware/Camera;)Landroid/hardware/Camera$OnZoomChangeListener;
+
+    move-result-object v1
 
-    move-result-object v6
+    if-eqz v1, :cond_7b
 
-    if-eqz v6, :cond_23
+    move-object/from16 v0, p0
 
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mZoomListener:Landroid/hardware/Camera$OnZoomChangeListener;
-    invoke-static {v6}, Landroid/hardware/Camera;->access$1000(Landroid/hardware/Camera;)Landroid/hardware/Camera$OnZoomChangeListener;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1700(Landroid/hardware/Camera;)Landroid/hardware/Camera$OnZoomChangeListener;
 
-    move-result-object v6
+    move-result-object v2
+
+    move-object/from16 v0, p1
+
+    iget v3, v0, Landroid/os/Message;->arg1:I
+
+    move-object/from16 v0, p1
 
-    iget v7, p1, Landroid/os/Message;->arg1:I
+    iget v1, v0, Landroid/os/Message;->arg2:I
 
-    iget v8, p1, Landroid/os/Message;->arg2:I
+    if-eqz v1, :cond_21a
 
-    if-eqz v8, :cond_f1
+    const/4 v1, 0x1
 
-    :goto_ea
-    iget-object v8, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    :goto_211
+    move-object/from16 v0, p0
 
-    invoke-interface {v6, v7, v5, v8}, Landroid/hardware/Camera$OnZoomChangeListener;->onZoomChange(IZLandroid/hardware/Camera;)V
+    iget-object v4, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    goto/16 :goto_23
+    invoke-interface {v2, v3, v1, v4}, Landroid/hardware/Camera$OnZoomChangeListener;->onZoomChange(IZLandroid/hardware/Camera;)V
+
+    goto/16 :goto_7b
+
+    :cond_21a
+    const/4 v1, 0x0
 
-    :cond_f1
-    move v5, v4
+    goto :goto_211
 
-    goto :goto_ea
+    :sswitch_21c
+    move-object/from16 v0, p0
 
-    :sswitch_f3
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mFaceListener:Landroid/hardware/Camera$FaceDetectionListener;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$1100(Landroid/hardware/Camera;)Landroid/hardware/Camera$FaceDetectionListener;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1800(Landroid/hardware/Camera;)Landroid/hardware/Camera$FaceDetectionListener;
 
-    move-result-object v5
+    move-result-object v1
 
-    if-eqz v5, :cond_23
+    if-eqz v1, :cond_7b
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mFaceListener:Landroid/hardware/Camera$FaceDetectionListener;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$1100(Landroid/hardware/Camera;)Landroid/hardware/Camera$FaceDetectionListener;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1800(Landroid/hardware/Camera;)Landroid/hardware/Camera$FaceDetectionListener;
+
+    move-result-object v2
 
-    move-result-object v6
+    move-object/from16 v0, p1
 
-    iget-object v5, p1, Landroid/os/Message;->obj:Ljava/lang/Object;
+    iget-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;
 
-    check-cast v5, [Landroid/hardware/Camera$Face;
+    check-cast v1, [Landroid/hardware/Camera$Face;
 
-    check-cast v5, [Landroid/hardware/Camera$Face;
+    check-cast v1, [Landroid/hardware/Camera$Face;
 
-    iget-object v7, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
 
-    invoke-interface {v6, v5, v7}, Landroid/hardware/Camera$FaceDetectionListener;->onFaceDetection([Landroid/hardware/Camera$Face;Landroid/hardware/Camera;)V
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    goto/16 :goto_23
+    invoke-interface {v2, v1, v3}, Landroid/hardware/Camera$FaceDetectionListener;->onFaceDetection([Landroid/hardware/Camera$Face;Landroid/hardware/Camera;)V
 
-    :sswitch_10e
-    const-string v5, "Camera"
+    goto/16 :goto_7b
 
-    new-instance v6, Ljava/lang/StringBuilder;
+    :sswitch_23f
+    const-string v1, "Camera"
 
-    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+    new-instance v2, Ljava/lang/StringBuilder;
 
-    const-string v7, "Error "
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
 
-    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    const-string v3, "Error "
 
-    move-result-object v6
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget v7, p1, Landroid/os/Message;->arg1:I
+    move-result-object v2
 
-    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    move-object/from16 v0, p1
 
-    move-result-object v6
+    iget v3, v0, Landroid/os/Message;->arg1:I
 
-    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    move-result-object v6
+    move-result-object v2
 
-    invoke-static {v5, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mErrorCallback:Landroid/hardware/Camera$ErrorCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$1200(Landroid/hardware/Camera;)Landroid/hardware/Camera$ErrorCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1900(Landroid/hardware/Camera;)Landroid/hardware/Camera$ErrorCallback;
+
+    move-result-object v1
 
-    move-result-object v5
+    if-eqz v1, :cond_7b
 
-    if-eqz v5, :cond_23
+    move-object/from16 v0, p0
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mErrorCallback:Landroid/hardware/Camera$ErrorCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$1200(Landroid/hardware/Camera;)Landroid/hardware/Camera$ErrorCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$1900(Landroid/hardware/Camera;)Landroid/hardware/Camera$ErrorCallback;
+
+    move-result-object v1
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Landroid/os/Message;->arg1:I
 
-    move-result-object v5
+    move-object/from16 v0, p0
 
-    iget v6, p1, Landroid/os/Message;->arg1:I
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    iget-object v7, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    invoke-interface {v1, v2, v3}, Landroid/hardware/Camera$ErrorCallback;->onError(ILandroid/hardware/Camera;)V
 
-    invoke-interface {v5, v6, v7}, Landroid/hardware/Camera$ErrorCallback;->onError(ILandroid/hardware/Camera;)V
+    goto/16 :goto_7b
 
-    goto/16 :goto_23
+    :sswitch_27a
+    move-object/from16 v0, p0
 
-    :sswitch_13f
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mAutoFocusMoveCallback:Landroid/hardware/Camera$AutoFocusMoveCallback;
-    invoke-static {v6}, Landroid/hardware/Camera;->access$1300(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusMoveCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$2000(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusMoveCallback;
 
-    move-result-object v6
+    move-result-object v1
 
-    if-eqz v6, :cond_23
+    if-eqz v1, :cond_7b
 
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mAutoFocusMoveCallback:Landroid/hardware/Camera$AutoFocusMoveCallback;
-    invoke-static {v6}, Landroid/hardware/Camera;->access$1300(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusMoveCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$2000(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusMoveCallback;
+
+    move-result-object v2
 
-    move-result-object v6
+    move-object/from16 v0, p1
 
-    iget v7, p1, Landroid/os/Message;->arg1:I
+    iget v1, v0, Landroid/os/Message;->arg1:I
 
-    if-nez v7, :cond_158
+    if-nez v1, :cond_29c
 
-    :goto_151
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    const/4 v1, 0x0
 
-    invoke-interface {v6, v4, v5}, Landroid/hardware/Camera$AutoFocusMoveCallback;->onAutoFocusMoving(ZLandroid/hardware/Camera;)V
+    :goto_293
+    move-object/from16 v0, p0
 
-    goto/16 :goto_23
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    :cond_158
-    move v4, v5
+    invoke-interface {v2, v1, v3}, Landroid/hardware/Camera$AutoFocusMoveCallback;->onAutoFocusMoving(ZLandroid/hardware/Camera;)V
 
-    goto :goto_151
+    goto/16 :goto_7b
 
-    :sswitch_15a
-    new-array v3, v7, [I
+    :cond_29c
+    const/4 v1, 0x1
 
-    const/4 v1, 0x0
+    goto :goto_293
+
+    :sswitch_29e
+    const/16 v1, 0x101
 
-    :goto_15d
-    if-ge v1, v7, :cond_170
+    new-array v13, v1, [I
 
-    iget-object v5, p1, Landroid/os/Message;->obj:Ljava/lang/Object;
+    const/4 v10, 0x0
 
-    check-cast v5, [B
+    :goto_2a3
+    const/16 v1, 0x101
 
-    check-cast v5, [B
+    if-ge v10, v1, :cond_2ba
 
-    mul-int/lit8 v6, v1, 0x4
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    check-cast v1, [B
+
+    check-cast v1, [B
+
+    mul-int/lit8 v2, v10, 0x4
 
     #calls: Landroid/hardware/Camera;->byteToInt([BI)I
-    invoke-static {v5, v6}, Landroid/hardware/Camera;->access$1400([BI)I
+    invoke-static {v1, v2}, Landroid/hardware/Camera;->access$2100([BI)I
+
+    move-result v1
 
-    move-result v5
+    aput v1, v13, v10
 
-    aput v5, v3, v1
+    add-int/lit8 v10, v10, 0x1
 
-    add-int/lit8 v1, v1, 0x1
+    goto :goto_2a3
 
-    goto :goto_15d
+    :cond_2ba
+    move-object/from16 v0, p0
 
-    :cond_170
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mCameraDataCallback:Landroid/hardware/Camera$CameraDataCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$1500(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraDataCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$2200(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraDataCallback;
+
+    move-result-object v1
 
-    move-result-object v5
+    if-eqz v1, :cond_7b
 
-    if-eqz v5, :cond_23
+    move-object/from16 v0, p0
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mCameraDataCallback:Landroid/hardware/Camera$CameraDataCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$1500(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraDataCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$2200(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraDataCallback;
 
-    move-result-object v5
+    move-result-object v1
 
-    iget-object v6, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    move-object/from16 v0, p0
 
-    invoke-interface {v5, v3, v6}, Landroid/hardware/Camera$CameraDataCallback;->onCameraData([ILandroid/hardware/Camera;)V
+    iget-object v2, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    goto/16 :goto_23
+    invoke-interface {v1, v13, v2}, Landroid/hardware/Camera$CameraDataCallback;->onCameraData([ILandroid/hardware/Camera;)V
 
-    :sswitch_185
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    goto/16 :goto_7b
+
+    :sswitch_2d5
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mCameraMetaDataCallback:Landroid/hardware/Camera$CameraMetaDataCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$1600(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraMetaDataCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$2300(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraMetaDataCallback;
+
+    move-result-object v1
 
-    move-result-object v5
+    if-eqz v1, :cond_7b
 
-    if-eqz v5, :cond_23
+    move-object/from16 v0, p0
 
-    iget-object v5, p0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
+    iget-object v1, v0, Landroid/hardware/Camera$EventHandler;->this$0:Landroid/hardware/Camera;
 
     #getter for: Landroid/hardware/Camera;->mCameraMetaDataCallback:Landroid/hardware/Camera$CameraMetaDataCallback;
-    invoke-static {v5}, Landroid/hardware/Camera;->access$1600(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraMetaDataCallback;
+    invoke-static {v1}, Landroid/hardware/Camera;->access$2300(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraMetaDataCallback;
+
+    move-result-object v2
+
+    move-object/from16 v0, p1
 
-    move-result-object v6
+    iget-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;
 
-    iget-object v5, p1, Landroid/os/Message;->obj:Ljava/lang/Object;
+    check-cast v1, [I
 
-    check-cast v5, [I
+    check-cast v1, [I
 
-    check-cast v5, [I
+    move-object/from16 v0, p0
 
-    iget-object v7, p0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
+    iget-object v3, v0, Landroid/hardware/Camera$EventHandler;->mCamera:Landroid/hardware/Camera;
 
-    invoke-interface {v6, v5, v7}, Landroid/hardware/Camera$CameraMetaDataCallback;->onCameraMetaData([ILandroid/hardware/Camera;)V
+    invoke-interface {v2, v1, v3}, Landroid/hardware/Camera$CameraMetaDataCallback;->onCameraMetaData([ILandroid/hardware/Camera;)V
 
-    goto/16 :goto_23
+    goto/16 :goto_7b
 
-    :sswitch_data_1a0
+    :sswitch_data_2f8
     .sparse-switch
-        0x1 -> :sswitch_10e
-        0x2 -> :sswitch_24
-        0x4 -> :sswitch_b5
-        0x8 -> :sswitch_d6
-        0x10 -> :sswitch_6a
-        0x40 -> :sswitch_9a
-        0x80 -> :sswitch_36
-        0x100 -> :sswitch_50
-        0x400 -> :sswitch_f3
-        0x800 -> :sswitch_13f
-        0x1000 -> :sswitch_15a
-        0x2000 -> :sswitch_185
+        0x1 -> :sswitch_23f
+        0x2 -> :sswitch_af
+        0x4 -> :sswitch_1ca
+        0x8 -> :sswitch_1f4
+        0x10 -> :sswitch_138
+        0x40 -> :sswitch_18c
+        0x80 -> :sswitch_c5
+        0x100 -> :sswitch_fa
+        0x400 -> :sswitch_21c
+        0x800 -> :sswitch_27a
+        0x1000 -> :sswitch_29e
+        0x2000 -> :sswitch_2d5
     .end sparse-switch
 .end method
diff -Npruw stock-framework/smali/android/hardware/Camera.smali pdroid-framework/smali/android/hardware/Camera.smali
--- stock-framework/smali/android/hardware/Camera.smali	2014-01-02 21:10:18.752311293 -0600
+++ pdroid-framework/smali/android/hardware/Camera.smali	2014-01-02 21:10:34.232310887 -0600
@@ -69,10 +69,20 @@
 
 .field private static final CAMERA_MSG_ZOOM:I = 0x8
 
+.field private static final GOT_ERROR:I = -0x3
+
+.field private static final IS_ALLOWED:I = -0x1
+
+.field private static final IS_NOT_ALLOWED:I = -0x2
+
+.field private static final PRIVACY_TAG:Ljava/lang/String; = "PM,Camera"
+
 .field private static final TAG:Ljava/lang/String; = "Camera"
 
 
 # instance fields
+.field private context:Landroid/content/Context;
+
 .field private mAutoFocusCallback:Landroid/hardware/Camera$AutoFocusCallback;
 
 .field private mAutoFocusCallbackLock:Ljava/lang/Object;
@@ -97,6 +107,8 @@
 
 .field private mOneShot:Z
 
+.field private mPm:Landroid/content/pm/IPackageManager;
+
 .field private mPostviewCallback:Landroid/hardware/Camera$PictureCallback;
 
 .field private mPreviewCallback:Landroid/hardware/Camera$PreviewCallback;
@@ -109,16 +121,20 @@
 
 .field private mZoomListener:Landroid/hardware/Camera$OnZoomChangeListener;
 
+.field private pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+.field private privacyMode:Z
+
 
 # direct methods
 .method constructor <init>()V
-    .registers 2
+    .registers 3
 
-    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+    const/4 v1, 0x0
 
-    const/4 v0, 0x0
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
 
-    iput-boolean v0, p0, Landroid/hardware/Camera;->mFaceDetectionRunning:Z
+    iput-boolean v1, p0, Landroid/hardware/Camera;->mFaceDetectionRunning:Z
 
     new-instance v0, Ljava/lang/Object;
 
@@ -126,19 +142,21 @@
 
     iput-object v0, p0, Landroid/hardware/Camera;->mAutoFocusCallbackLock:Ljava/lang/Object;
 
+    iput-boolean v1, p0, Landroid/hardware/Camera;->privacyMode:Z
+
     return-void
 .end method
 
 .method constructor <init>(I)V
-    .registers 6
+    .registers 7
+
+    const/4 v4, 0x0
 
     const/4 v3, 0x0
 
     invoke-direct {p0}, Ljava/lang/Object;-><init>()V
 
-    const/4 v2, 0x0
-
-    iput-boolean v2, p0, Landroid/hardware/Camera;->mFaceDetectionRunning:Z
+    iput-boolean v4, p0, Landroid/hardware/Camera;->mFaceDetectionRunning:Z
 
     new-instance v2, Ljava/lang/Object;
 
@@ -146,6 +164,8 @@
 
     iput-object v2, p0, Landroid/hardware/Camera;->mAutoFocusCallbackLock:Ljava/lang/Object;
 
+    iput-boolean v4, p0, Landroid/hardware/Camera;->privacyMode:Z
+
     iput-object v3, p0, Landroid/hardware/Camera;->mShutterCallback:Landroid/hardware/Camera$ShutterCallback;
 
     iput-object v3, p0, Landroid/hardware/Camera;->mRawImageCallback:Landroid/hardware/Camera$PictureCallback;
@@ -162,11 +182,13 @@
 
     iput-object v3, p0, Landroid/hardware/Camera;->mCameraMetaDataCallback:Landroid/hardware/Camera$CameraMetaDataCallback;
 
+    invoke-direct {p0}, Landroid/hardware/Camera;->initiate()V
+
     invoke-static {}, Landroid/os/Looper;->myLooper()Landroid/os/Looper;
 
     move-result-object v0
 
-    if-eqz v0, :cond_38
+    if-eqz v0, :cond_3d
 
     new-instance v2, Landroid/hardware/Camera$EventHandler;
 
@@ -174,7 +196,7 @@
 
     iput-object v2, p0, Landroid/hardware/Camera;->mEventHandler:Landroid/hardware/Camera$EventHandler;
 
-    :goto_2b
+    :goto_30
     invoke-static {}, Landroid/app/ActivityThread;->currentPackageName()Ljava/lang/String;
 
     move-result-object v1
@@ -187,12 +209,12 @@
 
     return-void
 
-    :cond_38
+    :cond_3d
     invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;
 
     move-result-object v0
 
-    if-eqz v0, :cond_46
+    if-eqz v0, :cond_4b
 
     new-instance v2, Landroid/hardware/Camera$EventHandler;
 
@@ -200,12 +222,12 @@
 
     iput-object v2, p0, Landroid/hardware/Camera;->mEventHandler:Landroid/hardware/Camera$EventHandler;
 
-    goto :goto_2b
+    goto :goto_30
 
-    :cond_46
+    :cond_4b
     iput-object v3, p0, Landroid/hardware/Camera;->mEventHandler:Landroid/hardware/Camera$EventHandler;
 
-    goto :goto_2b
+    goto :goto_30
 .end method
 
 .method private final native _addCallbackBuffer([BI)V
@@ -226,23 +248,87 @@
 .method private final native _stopPreview()V
 .end method
 
-.method static synthetic access$000(Landroid/hardware/Camera;)Landroid/hardware/Camera$ShutterCallback;
+.method static synthetic access$000(Landroid/hardware/Camera;)Z
     .registers 2
 
-    iget-object v0, p0, Landroid/hardware/Camera;->mShutterCallback:Landroid/hardware/Camera$ShutterCallback;
+    iget-boolean v0, p0, Landroid/hardware/Camera;->privacyMode:Z
+
+    return v0
+.end method
+
+.method static synthetic access$100(Landroid/hardware/Camera;)V
+    .registers 1
+
+    invoke-direct {p0}, Landroid/hardware/Camera;->initiate()V
+
+    return-void
+.end method
+
+.method static synthetic access$1000(Landroid/hardware/Camera;)Landroid/hardware/Camera$PreviewCallback;
+    .registers 2
+
+    iget-object v0, p0, Landroid/hardware/Camera;->mPreviewCallback:Landroid/hardware/Camera$PreviewCallback;
 
     return-object v0
 .end method
 
-.method static synthetic access$100(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+.method static synthetic access$1002(Landroid/hardware/Camera;Landroid/hardware/Camera$PreviewCallback;)Landroid/hardware/Camera$PreviewCallback;
     .registers 2
 
-    iget-object v0, p0, Landroid/hardware/Camera;->mRawImageCallback:Landroid/hardware/Camera$PictureCallback;
+    iput-object p1, p0, Landroid/hardware/Camera;->mPreviewCallback:Landroid/hardware/Camera$PreviewCallback;
+
+    return-object p1
+.end method
+
+.method static synthetic access$1100(Landroid/hardware/Camera;)Z
+    .registers 2
+
+    iget-boolean v0, p0, Landroid/hardware/Camera;->mOneShot:Z
+
+    return v0
+.end method
+
+.method static synthetic access$1200(Landroid/hardware/Camera;)Z
+    .registers 2
+
+    iget-boolean v0, p0, Landroid/hardware/Camera;->mWithBuffer:Z
+
+    return v0
+.end method
+
+.method static synthetic access$1300(Landroid/hardware/Camera;ZZ)V
+    .registers 3
+
+    invoke-direct {p0, p1, p2}, Landroid/hardware/Camera;->setHasPreviewCallback(ZZ)V
+
+    return-void
+.end method
+
+.method static synthetic access$1400(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+    .registers 2
+
+    iget-object v0, p0, Landroid/hardware/Camera;->mPostviewCallback:Landroid/hardware/Camera$PictureCallback;
 
     return-object v0
 .end method
 
-.method static synthetic access$1000(Landroid/hardware/Camera;)Landroid/hardware/Camera$OnZoomChangeListener;
+.method static synthetic access$1500(Landroid/hardware/Camera;)Ljava/lang/Object;
+    .registers 2
+
+    iget-object v0, p0, Landroid/hardware/Camera;->mAutoFocusCallbackLock:Ljava/lang/Object;
+
+    return-object v0
+.end method
+
+.method static synthetic access$1600(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusCallback;
+    .registers 2
+
+    iget-object v0, p0, Landroid/hardware/Camera;->mAutoFocusCallback:Landroid/hardware/Camera$AutoFocusCallback;
+
+    return-object v0
+.end method
+
+.method static synthetic access$1700(Landroid/hardware/Camera;)Landroid/hardware/Camera$OnZoomChangeListener;
     .registers 2
 
     iget-object v0, p0, Landroid/hardware/Camera;->mZoomListener:Landroid/hardware/Camera$OnZoomChangeListener;
@@ -250,7 +336,7 @@
     return-object v0
 .end method
 
-.method static synthetic access$1100(Landroid/hardware/Camera;)Landroid/hardware/Camera$FaceDetectionListener;
+.method static synthetic access$1800(Landroid/hardware/Camera;)Landroid/hardware/Camera$FaceDetectionListener;
     .registers 2
 
     iget-object v0, p0, Landroid/hardware/Camera;->mFaceListener:Landroid/hardware/Camera$FaceDetectionListener;
@@ -258,7 +344,7 @@
     return-object v0
 .end method
 
-.method static synthetic access$1200(Landroid/hardware/Camera;)Landroid/hardware/Camera$ErrorCallback;
+.method static synthetic access$1900(Landroid/hardware/Camera;)Landroid/hardware/Camera$ErrorCallback;
     .registers 2
 
     iget-object v0, p0, Landroid/hardware/Camera;->mErrorCallback:Landroid/hardware/Camera$ErrorCallback;
@@ -266,7 +352,17 @@
     return-object v0
 .end method
 
-.method static synthetic access$1300(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusMoveCallback;
+.method static synthetic access$200(Landroid/hardware/Camera;)[Ljava/lang/String;
+    .registers 2
+
+    invoke-direct {p0}, Landroid/hardware/Camera;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method static synthetic access$2000(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusMoveCallback;
     .registers 2
 
     iget-object v0, p0, Landroid/hardware/Camera;->mAutoFocusMoveCallback:Landroid/hardware/Camera$AutoFocusMoveCallback;
@@ -274,7 +370,7 @@
     return-object v0
 .end method
 
-.method static synthetic access$1400([BI)I
+.method static synthetic access$2100([BI)I
     .registers 3
 
     invoke-static {p0, p1}, Landroid/hardware/Camera;->byteToInt([BI)I
@@ -284,7 +380,7 @@
     return v0
 .end method
 
-.method static synthetic access$1500(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraDataCallback;
+.method static synthetic access$2200(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraDataCallback;
     .registers 2
 
     iget-object v0, p0, Landroid/hardware/Camera;->mCameraDataCallback:Landroid/hardware/Camera$CameraDataCallback;
@@ -292,7 +388,7 @@
     return-object v0
 .end method
 
-.method static synthetic access$1600(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraMetaDataCallback;
+.method static synthetic access$2300(Landroid/hardware/Camera;)Landroid/hardware/Camera$CameraMetaDataCallback;
     .registers 2
 
     iget-object v0, p0, Landroid/hardware/Camera;->mCameraMetaDataCallback:Landroid/hardware/Camera$CameraMetaDataCallback;
@@ -300,74 +396,62 @@
     return-object v0
 .end method
 
-.method static synthetic access$200(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
+.method static synthetic access$300(Landroid/hardware/Camera;)I
     .registers 2
 
-    iget-object v0, p0, Landroid/hardware/Camera;->mJpegCallback:Landroid/hardware/Camera$PictureCallback;
-
-    return-object v0
-.end method
-
-.method static synthetic access$300(Landroid/hardware/Camera;)Landroid/hardware/Camera$PreviewCallback;
-    .registers 2
+    invoke-direct {p0}, Landroid/hardware/Camera;->checkIfPackagesAllowed()I
 
-    iget-object v0, p0, Landroid/hardware/Camera;->mPreviewCallback:Landroid/hardware/Camera$PreviewCallback;
+    move-result v0
 
-    return-object v0
+    return v0
 .end method
 
-.method static synthetic access$302(Landroid/hardware/Camera;Landroid/hardware/Camera$PreviewCallback;)Landroid/hardware/Camera$PreviewCallback;
+.method static synthetic access$400(Landroid/hardware/Camera;Z)V
     .registers 2
 
-    iput-object p1, p0, Landroid/hardware/Camera;->mPreviewCallback:Landroid/hardware/Camera$PreviewCallback;
+    invoke-direct {p0, p1}, Landroid/hardware/Camera;->dataAccess(Z)V
 
-    return-object p1
+    return-void
 .end method
 
-.method static synthetic access$400(Landroid/hardware/Camera;)Z
+.method static synthetic access$500(Landroid/hardware/Camera;)Landroid/privacy/PrivacySettingsManager;
     .registers 2
 
-    iget-boolean v0, p0, Landroid/hardware/Camera;->mOneShot:Z
+    iget-object v0, p0, Landroid/hardware/Camera;->pSetMan:Landroid/privacy/PrivacySettingsManager;
 
-    return v0
+    return-object v0
 .end method
 
-.method static synthetic access$500(Landroid/hardware/Camera;)Z
+.method static synthetic access$600(Landroid/hardware/Camera;)Landroid/hardware/Camera$ShutterCallback;
     .registers 2
 
-    iget-boolean v0, p0, Landroid/hardware/Camera;->mWithBuffer:Z
-
-    return v0
-.end method
-
-.method static synthetic access$600(Landroid/hardware/Camera;ZZ)V
-    .registers 3
-
-    invoke-direct {p0, p1, p2}, Landroid/hardware/Camera;->setHasPreviewCallback(ZZ)V
+    iget-object v0, p0, Landroid/hardware/Camera;->mShutterCallback:Landroid/hardware/Camera$ShutterCallback;
 
-    return-void
+    return-object v0
 .end method
 
 .method static synthetic access$700(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
     .registers 2
 
-    iget-object v0, p0, Landroid/hardware/Camera;->mPostviewCallback:Landroid/hardware/Camera$PictureCallback;
+    iget-object v0, p0, Landroid/hardware/Camera;->mRawImageCallback:Landroid/hardware/Camera$PictureCallback;
 
     return-object v0
 .end method
 
-.method static synthetic access$800(Landroid/hardware/Camera;)Ljava/lang/Object;
+.method static synthetic access$800(Landroid/hardware/Camera;)Landroid/hardware/Camera$PictureCallback;
     .registers 2
 
-    iget-object v0, p0, Landroid/hardware/Camera;->mAutoFocusCallbackLock:Ljava/lang/Object;
+    iget-object v0, p0, Landroid/hardware/Camera;->mJpegCallback:Landroid/hardware/Camera$PictureCallback;
 
     return-object v0
 .end method
 
-.method static synthetic access$900(Landroid/hardware/Camera;)Landroid/hardware/Camera$AutoFocusCallback;
+.method static synthetic access$900(Landroid/hardware/Camera;)[B
     .registers 2
 
-    iget-object v0, p0, Landroid/hardware/Camera;->mAutoFocusCallback:Landroid/hardware/Camera$AutoFocusCallback;
+    invoke-direct {p0}, Landroid/hardware/Camera;->getFakeImage()[B
+
+    move-result-object v0
 
     return-object v0
 .end method
@@ -449,6 +533,205 @@
     return v2
 .end method
 
+.method private checkIfPackagesAllowed()I
+    .registers 9
+
+    const/4 v5, -0x3
+
+    :try_start_1
+    iget-object v6, p0, Landroid/hardware/Camera;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v6, :cond_41
+
+    const/4 v2, 0x0
+
+    invoke-direct {p0}, Landroid/hardware/Camera;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v4
+
+    if-eqz v3, :cond_2c
+
+    const/4 v1, 0x0
+
+    :goto_11
+    array-length v6, v3
+
+    if-ge v1, v6, :cond_2a
+
+    iget-object v6, p0, Landroid/hardware/Camera;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v7, v3, v1
+
+    invoke-virtual {v6, v7, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_26
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettings;->getCameraSetting()B
+
+    move-result v6
+
+    if-eqz v6, :cond_26
+
+    const/4 v5, -0x2
+
+    :goto_25
+    return v5
+
+    :cond_26
+    const/4 v2, 0x0
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_11
+
+    :cond_2a
+    const/4 v5, -0x1
+
+    goto :goto_25
+
+    :cond_2c
+    const-string v6, "PM,Camera"
+
+    const-string/jumbo v7, "return GOT_ERROR, because package_names are NULL"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_34
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_34} :catch_35
+
+    goto :goto_25
+
+    :catch_35
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v6, "PM,Camera"
+
+    const-string v7, "Got exception in checkIfPackagesAllowed"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_25
+
+    :cond_41
+    :try_start_41
+    const-string v6, "PM,Camera"
+
+    const-string/jumbo v7, "return GOT_ERROR, because pSetMan is NULL"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_49
+    .catch Ljava/lang/Exception; {:try_start_41 .. :try_end_49} :catch_35
+
+    goto :goto_25
+.end method
+
+.method private dataAccess(Z)V
+    .registers 7
+
+    invoke-direct {p0}, Landroid/hardware/Camera;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v1
+
+    if-eqz p1, :cond_2f
+
+    if-eqz v1, :cond_2f
+
+    const/4 v0, 0x0
+
+    :goto_9
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_58
+
+    const-string v2, "PM,Camera"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Allowed Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing camera."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_9
+
+    :cond_2f
+    if-eqz v1, :cond_58
+
+    const/4 v0, 0x0
+
+    :goto_32
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_58
+
+    const-string v2, "PM,Camera"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Blocked Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing camera."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_32
+
+    :cond_58
+    return-void
+.end method
+
 .method private native enableFocusMoveCallback(I)V
 .end method
 
@@ -514,9 +797,193 @@
     return-object v1
 .end method
 
+.method private getFakeImage()[B
+    .registers 9
+
+    :try_start_0
+    const-string v2, "/system/media/PDroid.jpeg"
+
+    new-instance v5, Ljava/io/File;
+
+    invoke-direct {v5, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    const/4 v3, 0x0
+
+    new-instance v3, Ljava/io/FileInputStream;
+
+    invoke-direct {v3, v5}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
+
+    invoke-static {v3}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;)Landroid/graphics/Bitmap;
+
+    move-result-object v0
+
+    new-instance v4, Ljava/io/ByteArrayOutputStream;
+
+    invoke-direct {v4}, Ljava/io/ByteArrayOutputStream;-><init>()V
+
+    sget-object v6, Landroid/graphics/Bitmap$CompressFormat;->JPEG:Landroid/graphics/Bitmap$CompressFormat;
+
+    const/16 v7, 0x64
+
+    invoke-virtual {v0, v6, v7, v4}, Landroid/graphics/Bitmap;->compress(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z
+
+    invoke-virtual {v4}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B
+    :try_end_20
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_20} :catch_22
+
+    move-result-object v6
+
+    :goto_21
+    return-object v6
+
+    :catch_22
+    move-exception v1
+
+    const-string v6, "PM,Camera"
+
+    const-string/jumbo v7, "something went wrong with getting the picture!"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V
+
+    const/4 v6, 0x0
+
+    goto :goto_21
+.end method
+
 .method public static native getNumberOfCameras()I
 .end method
 
+.method private getPackageName()[Ljava/lang/String;
+    .registers 6
+
+    :try_start_0
+    iget-object v3, p0, Landroid/hardware/Camera;->mPm:Landroid/content/pm/IPackageManager;
+
+    if-eqz v3, :cond_f
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    iget-object v3, p0, Landroid/hardware/Camera;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+
+    move-result-object v1
+
+    :goto_e
+    return-object v1
+
+    :cond_f
+    const-string/jumbo v3, "package"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    iput-object v3, p0, Landroid/hardware/Camera;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    iget-object v3, p0, Landroid/hardware/Camera;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+    :try_end_25
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_25} :catch_27
+
+    move-result-object v1
+
+    goto :goto_e
+
+    :catch_27
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v3, "PM,Camera"
+
+    const-string/jumbo v4, "something went wrong with getting package name"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    goto :goto_e
+.end method
+
+.method private initiate()V
+    .registers 5
+
+    const/4 v1, 0x0
+
+    :try_start_1
+    iput-object v1, p0, Landroid/hardware/Camera;->context:Landroid/content/Context;
+
+    new-instance v1, Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v2, p0, Landroid/hardware/Camera;->context:Landroid/content/Context;
+
+    const-string/jumbo v3, "privacy"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v3
+
+    invoke-direct {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v1, p0, Landroid/hardware/Camera;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "package"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/hardware/Camera;->mPm:Landroid/content/pm/IPackageManager;
+
+    const/4 v1, 0x1
+
+    iput-boolean v1, p0, Landroid/hardware/Camera;->privacyMode:Z
+    :try_end_27
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_27} :catch_28
+
+    :goto_27
+    return-void
+
+    :catch_28
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v1, "PM,Camera"
+
+    const-string v2, "Something went wrong with initalize variables"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    iput-boolean v1, p0, Landroid/hardware/Camera;->privacyMode:Z
+
+    goto :goto_27
+.end method
+
 .method private final native native_autoFocus()V
 .end method
 
@@ -1170,7 +1637,7 @@
 .end method
 
 .method public final takePicture(Landroid/hardware/Camera$ShutterCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;)V
-    .registers 7
+    .registers 8
 
     iput-object p1, p0, Landroid/hardware/Camera;->mShutterCallback:Landroid/hardware/Camera$ShutterCallback;
 
@@ -1180,36 +1647,62 @@
 
     iput-object p4, p0, Landroid/hardware/Camera;->mJpegCallback:Landroid/hardware/Camera$PictureCallback;
 
+    iget-boolean v1, p0, Landroid/hardware/Camera;->privacyMode:Z
+
+    if-nez v1, :cond_f
+
+    invoke-direct {p0}, Landroid/hardware/Camera;->initiate()V
+
+    :cond_f
+    invoke-direct {p0}, Landroid/hardware/Camera;->checkIfPackagesAllowed()I
+
+    move-result v1
+
+    const/4 v2, -0x2
+
+    if-ne v1, v2, :cond_20
+
+    const/4 v1, 0x0
+
+    iput-object v1, p0, Landroid/hardware/Camera;->mRawImageCallback:Landroid/hardware/Camera$PictureCallback;
+
+    const-string v1, "PM,Camera"
+
+    const-string v2, "blocked rawImageCallback -> it will never be called!"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_20
     const/4 v0, 0x0
 
     iget-object v1, p0, Landroid/hardware/Camera;->mShutterCallback:Landroid/hardware/Camera$ShutterCallback;
 
-    if-eqz v1, :cond_f
+    if-eqz v1, :cond_27
 
     or-int/lit8 v0, v0, 0x2
 
-    :cond_f
+    :cond_27
     iget-object v1, p0, Landroid/hardware/Camera;->mRawImageCallback:Landroid/hardware/Camera$PictureCallback;
 
-    if-eqz v1, :cond_15
+    if-eqz v1, :cond_2d
 
     or-int/lit16 v0, v0, 0x80
 
-    :cond_15
+    :cond_2d
     iget-object v1, p0, Landroid/hardware/Camera;->mPostviewCallback:Landroid/hardware/Camera$PictureCallback;
 
-    if-eqz v1, :cond_1b
+    if-eqz v1, :cond_33
 
     or-int/lit8 v0, v0, 0x40
 
-    :cond_1b
+    :cond_33
     iget-object v1, p0, Landroid/hardware/Camera;->mJpegCallback:Landroid/hardware/Camera$PictureCallback;
 
-    if-eqz v1, :cond_21
+    if-eqz v1, :cond_39
 
     or-int/lit16 v0, v0, 0x100
 
-    :cond_21
+    :cond_39
     invoke-direct {p0, v0}, Landroid/hardware/Camera;->native_takePicture(I)V
 
     const/4 v1, 0x0
diff -Npruw stock-framework/smali/android/location/GeoFenceParams.smali pdroid-framework/smali/android/location/GeoFenceParams.smali
--- stock-framework/smali/android/location/GeoFenceParams.smali	2014-01-02 21:10:18.872311290 -0600
+++ pdroid-framework/smali/android/location/GeoFenceParams.smali	2014-01-02 21:10:34.392310883 -0600
@@ -201,7 +201,7 @@
 
     move-result-object v0
 
-    const-string v1, "mLatitude="
+    const-string/jumbo v1, "mLatitude="
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
diff -Npruw stock-framework/smali/android/media/AudioRecord.smali pdroid-framework/smali/android/media/AudioRecord.smali
--- stock-framework/smali/android/media/AudioRecord.smali	2014-01-02 21:10:18.904311289 -0600
+++ pdroid-framework/smali/android/media/AudioRecord.smali	2014-01-02 21:10:34.436310882 -0600
@@ -29,10 +29,18 @@
 
 .field public static final ERROR_INVALID_OPERATION:I = -0x3
 
+.field private static final GOT_ERROR:I = -0x3
+
+.field private static final IS_ALLOWED:I = -0x1
+
+.field private static final IS_NOT_ALLOWED:I = -0x2
+
 .field private static final NATIVE_EVENT_MARKER:I = 0x2
 
 .field private static final NATIVE_EVENT_NEW_POS:I = 0x3
 
+.field private static final PRIVACY_TAG:Ljava/lang/String; = "PM,AudioRecord"
+
 .field public static final RECORDSTATE_RECORDING:I = 0x3
 
 .field public static final RECORDSTATE_STOPPED:I = 0x1
@@ -47,6 +55,8 @@
 
 
 # instance fields
+.field private context:Landroid/content/Context;
+
 .field private mAudioFormat:I
 
 .field private mChannelConfiguration:I
@@ -65,6 +75,8 @@
 
 .field private mNativeRecorderInJavaObj:I
 
+.field private mPm:Landroid/content/pm/IPackageManager;
+
 .field private mPositionListener:Landroid/media/AudioRecord$OnRecordPositionUpdateListener;
 
 .field private final mPositionListenerLock:Ljava/lang/Object;
@@ -81,6 +93,10 @@
 
 .field private mState:I
 
+.field private pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+.field private privacyMode:Z
+
 
 # direct methods
 .method public constructor <init>(IIIII)V
@@ -159,6 +175,10 @@
 
     const/4 v0, 0x0
 
+    iput-boolean v0, p0, Landroid/media/AudioRecord;->privacyMode:Z
+
+    const/4 v0, 0x0
+
     iput v0, p0, Landroid/media/AudioRecord;->mState:I
 
     const/4 v0, 0x1
@@ -171,7 +191,7 @@
 
     iput-object v0, p0, Landroid/media/AudioRecord;->mInitializationLooper:Landroid/os/Looper;
 
-    if-nez v0, :cond_4f
+    if-nez v0, :cond_52
 
     invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;
 
@@ -179,7 +199,7 @@
 
     iput-object v0, p0, Landroid/media/AudioRecord;->mInitializationLooper:Landroid/os/Looper;
 
-    :cond_4f
+    :cond_52
     invoke-direct {p0, p1, p2, p3, p4}, Landroid/media/AudioRecord;->audioParamCheck(IIII)V
 
     invoke-direct {p0, p5}, Landroid/media/AudioRecord;->audioBuffSizeCheck(I)V
@@ -214,7 +234,7 @@
 
     move-result v8
 
-    if-eqz v8, :cond_8f
+    if-eqz v8, :cond_92
 
     new-instance v0, Ljava/lang/StringBuilder;
 
@@ -242,10 +262,12 @@
 
     invoke-static {v0}, Landroid/media/AudioRecord;->loge(Ljava/lang/String;)V
 
-    :goto_8e
+    :goto_91
     return-void
 
-    :cond_8f
+    :cond_92
+    invoke-direct {p0}, Landroid/media/AudioRecord;->initiate()V
+
     const/4 v0, 0x0
 
     aget v0, v7, v0
@@ -256,7 +278,7 @@
 
     iput v0, p0, Landroid/media/AudioRecord;->mState:I
 
-    goto :goto_8e
+    goto :goto_91
 .end method
 
 .method static synthetic access$000(Landroid/media/AudioRecord;)Ljava/lang/Object;
@@ -491,6 +513,205 @@
     .end sparse-switch
 .end method
 
+.method private checkIfPackagesAllowed()I
+    .registers 9
+
+    const/4 v5, -0x3
+
+    :try_start_1
+    iget-object v6, p0, Landroid/media/AudioRecord;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v6, :cond_41
+
+    const/4 v2, 0x0
+
+    invoke-direct {p0}, Landroid/media/AudioRecord;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v4
+
+    if-eqz v3, :cond_2c
+
+    const/4 v1, 0x0
+
+    :goto_11
+    array-length v6, v3
+
+    if-ge v1, v6, :cond_2a
+
+    iget-object v6, p0, Landroid/media/AudioRecord;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v7, v3, v1
+
+    invoke-virtual {v6, v7, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_26
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettings;->getRecordAudioSetting()B
+
+    move-result v6
+
+    if-eqz v6, :cond_26
+
+    const/4 v5, -0x2
+
+    :goto_25
+    return v5
+
+    :cond_26
+    const/4 v2, 0x0
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_11
+
+    :cond_2a
+    const/4 v5, -0x1
+
+    goto :goto_25
+
+    :cond_2c
+    const-string v6, "PM,AudioRecord"
+
+    const-string/jumbo v7, "return GOT_ERROR, because package_names are NULL"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_34
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_34} :catch_35
+
+    goto :goto_25
+
+    :catch_35
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v6, "PM,AudioRecord"
+
+    const-string v7, "Got exception in checkIfPackagesAllowed"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_25
+
+    :cond_41
+    :try_start_41
+    const-string v6, "PM,AudioRecord"
+
+    const-string/jumbo v7, "return GOT_ERROR, because pSetMan is NULL"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_49
+    .catch Ljava/lang/Exception; {:try_start_41 .. :try_end_49} :catch_35
+
+    goto :goto_25
+.end method
+
+.method private dataAccess(Z)V
+    .registers 7
+
+    invoke-direct {p0}, Landroid/media/AudioRecord;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v1
+
+    if-eqz p1, :cond_2f
+
+    if-eqz v1, :cond_2f
+
+    const/4 v0, 0x0
+
+    :goto_9
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_58
+
+    const-string v2, "PM,AudioRecord"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Allowed Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing microphone."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_9
+
+    :cond_2f
+    if-eqz v1, :cond_58
+
+    const/4 v0, 0x0
+
+    :goto_32
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_58
+
+    const-string v2, "PM,AudioRecord"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Blocked Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing microphone."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_32
+
+    :cond_58
+    return-void
+.end method
+
 .method public static getMinBufferSize(III)I
     .registers 8
 
@@ -582,6 +803,135 @@
     .end sparse-switch
 .end method
 
+.method private getPackageName()[Ljava/lang/String;
+    .registers 6
+
+    :try_start_0
+    iget-object v3, p0, Landroid/media/AudioRecord;->mPm:Landroid/content/pm/IPackageManager;
+
+    if-eqz v3, :cond_f
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    iget-object v3, p0, Landroid/media/AudioRecord;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+
+    move-result-object v1
+
+    :goto_e
+    return-object v1
+
+    :cond_f
+    const-string/jumbo v3, "package"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    iput-object v3, p0, Landroid/media/AudioRecord;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    iget-object v3, p0, Landroid/media/AudioRecord;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+    :try_end_25
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_25} :catch_27
+
+    move-result-object v1
+
+    goto :goto_e
+
+    :catch_27
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v3, "PM,AudioRecord"
+
+    const-string/jumbo v4, "something went wrong with getting package name"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    goto :goto_e
+.end method
+
+.method private initiate()V
+    .registers 5
+
+    const/4 v1, 0x0
+
+    :try_start_1
+    iput-object v1, p0, Landroid/media/AudioRecord;->context:Landroid/content/Context;
+
+    new-instance v1, Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v2, p0, Landroid/media/AudioRecord;->context:Landroid/content/Context;
+
+    const-string/jumbo v3, "privacy"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v3
+
+    invoke-direct {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v1, p0, Landroid/media/AudioRecord;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "package"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/media/AudioRecord;->mPm:Landroid/content/pm/IPackageManager;
+
+    const/4 v1, 0x1
+
+    iput-boolean v1, p0, Landroid/media/AudioRecord;->privacyMode:Z
+    :try_end_27
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_27} :catch_28
+
+    :goto_27
+    return-void
+
+    :catch_28
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v1, "PM,AudioRecord"
+
+    const-string v2, "Something went wrong with initalize variables"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    iput-boolean v1, p0, Landroid/media/AudioRecord;->privacyMode:Z
+
+    goto :goto_27
+.end method
+
 .method private static logd(Ljava/lang/String;)V
     .registers 4
 
@@ -1032,19 +1382,68 @@
 .end method
 
 .method public startRecording()V
-    .registers 4
+    .registers 11
     .annotation system Ldalvik/annotation/Throws;
         value = {
             Ljava/lang/IllegalStateException;
         }
     .end annotation
 
+    const/4 v5, 0x0
+
+    const/4 v3, 0x1
+
+    const/4 v2, 0x0
+
+    iget-boolean v0, p0, Landroid/media/AudioRecord;->privacyMode:Z
+
+    if-nez v0, :cond_a
+
+    invoke-direct {p0}, Landroid/media/AudioRecord;->initiate()V
+
+    :cond_a
     iget v0, p0, Landroid/media/AudioRecord;->mState:I
 
-    const/4 v1, 0x1
+    if-ne v0, v3, :cond_15
+
+    invoke-direct {p0}, Landroid/media/AudioRecord;->checkIfPackagesAllowed()I
+
+    move-result v0
+
+    const/4 v1, -0x2
+
+    if-ne v0, v1, :cond_3d
 
-    if-eq v0, v1, :cond_e
+    :cond_15
+    invoke-direct {p0, v2}, Landroid/media/AudioRecord;->dataAccess(Z)V
 
+    invoke-direct {p0}, Landroid/media/AudioRecord;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v7
+
+    if-eqz v7, :cond_34
+
+    iget-object v0, p0, Landroid/media/AudioRecord;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v1, v7, v2
+
+    const-string/jumbo v4, "recordAudio"
+
+    iget-object v6, p0, Landroid/media/AudioRecord;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v8, v7, v2
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v9
+
+    invoke-virtual {v6, v8, v9}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_34
     new-instance v0, Ljava/lang/IllegalStateException;
 
     const-string/jumbo v1, "startRecording() called on an uninitialized AudioRecord."
@@ -1053,7 +1452,38 @@
 
     throw v0
 
-    :cond_e
+    :cond_3d
+    invoke-direct {p0, v3}, Landroid/media/AudioRecord;->dataAccess(Z)V
+
+    invoke-direct {p0}, Landroid/media/AudioRecord;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v7
+
+    if-eqz v7, :cond_5d
+
+    iget-object v0, p0, Landroid/media/AudioRecord;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v1, v7, v2
+
+    const-string/jumbo v4, "recordAudio"
+
+    iget-object v3, p0, Landroid/media/AudioRecord;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v6, v7, v2
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v8
+
+    invoke-virtual {v3, v6, v8}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    move v3, v2
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_5d
     iget-object v1, p0, Landroid/media/AudioRecord;->mRecordingStateLock:Ljava/lang/Object;
 
     monitor-enter v1
@@ -1062,28 +1492,28 @@
 
     const/4 v2, 0x0
 
-    :try_start_13
+    :try_start_62
     invoke-direct {p0, v0, v2}, Landroid/media/AudioRecord;->native_start(II)I
 
     move-result v0
 
-    if-nez v0, :cond_1c
+    if-nez v0, :cond_6b
 
     const/4 v0, 0x3
 
     iput v0, p0, Landroid/media/AudioRecord;->mRecordingState:I
 
-    :cond_1c
+    :cond_6b
     monitor-exit v1
 
     return-void
 
-    :catchall_1e
+    :catchall_6d
     move-exception v0
 
     monitor-exit v1
-    :try_end_20
-    .catchall {:try_start_13 .. :try_end_20} :catchall_1e
+    :try_end_6f
+    .catchall {:try_start_62 .. :try_end_6f} :catchall_6d
 
     throw v0
 .end method
diff -Npruw stock-framework/smali/android/media/MediaRecorder$PrivacyRunner.smali pdroid-framework/smali/android/media/MediaRecorder$PrivacyRunner.smali
--- stock-framework/smali/android/media/MediaRecorder$PrivacyRunner.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/media/MediaRecorder$PrivacyRunner.smali	2014-01-02 21:10:34.548310879 -0600
@@ -0,0 +1,218 @@
+.class Landroid/media/MediaRecorder$PrivacyRunner;
+.super Ljava/lang/Thread;
+.source "MediaRecorder.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/media/MediaRecorder;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x2
+    name = "PrivacyRunner"
+.end annotation
+
+
+# static fields
+.field private static final OFFSET_DELAY:J = 0x9c4L
+
+
+# instance fields
+.field private delay:J
+
+.field final synthetic this$0:Landroid/media/MediaRecorder;
+
+
+# direct methods
+.method public constructor <init>(Landroid/media/MediaRecorder;)V
+    .registers 4
+
+    iput-object p1, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    invoke-direct {p0}, Ljava/lang/Thread;-><init>()V
+
+    const-wide/16 v0, 0x9c4
+
+    iput-wide v0, p0, Landroid/media/MediaRecorder$PrivacyRunner;->delay:J
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public getDelay()J
+    .registers 3
+
+    iget-wide v0, p0, Landroid/media/MediaRecorder$PrivacyRunner;->delay:J
+
+    return-wide v0
+.end method
+
+.method public run()V
+    .registers 5
+
+    :try_start_0
+    iget-wide v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->delay:J
+
+    invoke-static {v2, v3}, Ljava/lang/Thread;->sleep(J)V
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #calls: Landroid/media/MediaRecorder;->privacyStop()V
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$300(Landroid/media/MediaRecorder;)V
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$400(Landroid/media/MediaRecorder;)Ljava/lang/String;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_2f
+
+    new-instance v1, Ljava/io/File;
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$400(Landroid/media/MediaRecorder;)Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-direct {v1, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v1}, Ljava/io/File;->delete()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_29
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    const/4 v3, 0x1
+
+    #setter for: Landroid/media/MediaRecorder;->deletedFile:Z
+    invoke-static {v2, v3}, Landroid/media/MediaRecorder;->access$502(Landroid/media/MediaRecorder;Z)Z
+    :try_end_29
+    .catchall {:try_start_0 .. :try_end_29} :catchall_76
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_29} :catch_57
+
+    :cond_29
+    :goto_29
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #calls: Landroid/media/MediaRecorder;->privacyStop()V
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$300(Landroid/media/MediaRecorder;)V
+
+    :goto_2e
+    return-void
+
+    :cond_2f
+    :try_start_2f
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$600(Landroid/media/MediaRecorder;)Ljava/io/FileDescriptor;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_68
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$700(Landroid/media/MediaRecorder;)Ljava/lang/String;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_68
+
+    new-instance v1, Ljava/io/File;
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$700(Landroid/media/MediaRecorder;)Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-direct {v1, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v1}, Ljava/io/File;->delete()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_29
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    const/4 v3, 0x1
+
+    #setter for: Landroid/media/MediaRecorder;->deletedFile:Z
+    invoke-static {v2, v3}, Landroid/media/MediaRecorder;->access$502(Landroid/media/MediaRecorder;Z)Z
+    :try_end_56
+    .catchall {:try_start_2f .. :try_end_56} :catchall_76
+    .catch Ljava/lang/Exception; {:try_start_2f .. :try_end_56} :catch_57
+
+    goto :goto_29
+
+    :catch_57
+    move-exception v0
+
+    :try_start_58
+    const-string v2, "PM,MediaRecorder"
+
+    const-string v3, "Something went wrong while waiting for cancel the stream!"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+    :try_end_62
+    .catchall {:try_start_58 .. :try_end_62} :catchall_76
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #calls: Landroid/media/MediaRecorder;->privacyStop()V
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$300(Landroid/media/MediaRecorder;)V
+
+    goto :goto_2e
+
+    :cond_68
+    :try_start_68
+    const-string v2, "PM,MediaRecorder"
+
+    const-string v3, "Can\'t delete temporary File, because all is null?! It could be that we only want to record audio?!"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    const/4 v3, 0x0
+
+    #setter for: Landroid/media/MediaRecorder;->deletedFile:Z
+    invoke-static {v2, v3}, Landroid/media/MediaRecorder;->access$502(Landroid/media/MediaRecorder;Z)Z
+    :try_end_75
+    .catchall {:try_start_68 .. :try_end_75} :catchall_76
+    .catch Ljava/lang/Exception; {:try_start_68 .. :try_end_75} :catch_57
+
+    goto :goto_29
+
+    :catchall_76
+    move-exception v2
+
+    iget-object v3, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #calls: Landroid/media/MediaRecorder;->privacyStop()V
+    invoke-static {v3}, Landroid/media/MediaRecorder;->access$300(Landroid/media/MediaRecorder;)V
+
+    throw v2
+.end method
+
+.method public setDelay(J)V
+    .registers 3
+
+    iput-wide p1, p0, Landroid/media/MediaRecorder$PrivacyRunner;->delay:J
+
+    return-void
+.end method
diff -Npruw stock-framework/smali/android/media/MediaRecorder.smali pdroid-framework/smali/android/media/MediaRecorder.smali
--- stock-framework/smali/android/media/MediaRecorder.smali	2014-01-02 21:10:18.976311287 -0600
+++ pdroid-framework/smali/android/media/MediaRecorder.smali	2014-01-02 21:10:34.552310879 -0600
@@ -6,6 +6,7 @@
 # annotations
 .annotation system Ldalvik/annotation/MemberClasses;
     value = {
+        Landroid/media/MediaRecorder$PrivacyRunner;,
         Landroid/media/MediaRecorder$EventHandler;,
         Landroid/media/MediaRecorder$OnInfoListener;,
         Landroid/media/MediaRecorder$OnErrorListener;,
@@ -19,6 +20,14 @@
 
 
 # static fields
+.field private static final BOTH_DATA_ACCESS:I = 0xb
+
+.field private static final GOT_ERROR:I = -0x3
+
+.field private static final IS_ALLOWED:I = -0x1
+
+.field private static final IS_NOT_ALLOWED:I = -0x2
+
 .field public static final MEDIA_ERROR_SERVER_DIED:I = 0x64
 
 .field public static final MEDIA_RECORDER_ERROR_UNKNOWN:I = 0x1
@@ -53,10 +62,30 @@
 
 .field public static final MEDIA_RECORDER_TRACK_INTER_CHUNK_TIME_MS:I = 0x3ee
 
+.field private static final MIC_DATA_ACCESS:I = 0xa
+
+.field private static final MODE_RECORD_AUDIO:I = 0x2
+
+.field private static final MODE_RECORD_BOTH:I = 0x3
+
+.field private static final PRIVACY_PATH_DEF:Ljava/lang/String; = "/data/data/"
+
+.field private static final PRIVACY_TAG:Ljava/lang/String; = "PM,MediaRecorder"
+
+.field private static final STATE_RECORD_AUDIO:I = 0x0
+
+.field private static final STATE_RECORD_BOTH:I = 0x1
+
 .field private static final TAG:Ljava/lang/String; = "MediaRecorder"
 
 
 # instance fields
+.field private ACTUAL_STATE:I
+
+.field private context:Landroid/content/Context;
+
+.field private deletedFile:Z
+
 .field private mEventHandler:Landroid/media/MediaRecorder$EventHandler;
 
 .field private mFd:Ljava/io/FileDescriptor;
@@ -69,8 +98,24 @@
 
 .field private mPath:Ljava/lang/String;
 
+.field private mPm:Landroid/content/pm/IPackageManager;
+
 .field private mSurface:Landroid/view/Surface;
 
+.field private pFileDescriptor:Ljava/io/FileDescriptor;
+
+.field private pFileDescriptorPath:Ljava/lang/String;
+
+.field private pPath:Ljava/lang/String;
+
+.field private pRunner:Landroid/media/MediaRecorder$PrivacyRunner;
+
+.field private pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+.field private privacyMode:Z
+
+.field private stoppedStream:Z
+
 
 # direct methods
 .method static constructor <clinit>()V
@@ -86,15 +131,35 @@
 .end method
 
 .method public constructor <init>()V
-    .registers 4
+    .registers 5
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x0
 
     invoke-direct {p0}, Ljava/lang/Object;-><init>()V
 
+    iput-object v2, p0, Landroid/media/MediaRecorder;->pPath:Ljava/lang/String;
+
+    iput-object v2, p0, Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+
+    iput-object v2, p0, Landroid/media/MediaRecorder;->pFileDescriptor:Ljava/io/FileDescriptor;
+
+    iput-object v2, p0, Landroid/media/MediaRecorder;->pRunner:Landroid/media/MediaRecorder$PrivacyRunner;
+
+    iput-boolean v3, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    iput-boolean v3, p0, Landroid/media/MediaRecorder;->privacyMode:Z
+
+    iput-boolean v3, p0, Landroid/media/MediaRecorder;->stoppedStream:Z
+
+    iput v3, p0, Landroid/media/MediaRecorder;->ACTUAL_STATE:I
+
     invoke-static {}, Landroid/os/Looper;->myLooper()Landroid/os/Looper;
 
     move-result-object v0
 
-    if-eqz v0, :cond_1d
+    if-eqz v0, :cond_32
 
     new-instance v2, Landroid/media/MediaRecorder$EventHandler;
 
@@ -102,7 +167,9 @@
 
     iput-object v2, p0, Landroid/media/MediaRecorder;->mEventHandler:Landroid/media/MediaRecorder$EventHandler;
 
-    :goto_10
+    :goto_22
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->initiate()V
+
     invoke-static {}, Landroid/app/ActivityThread;->currentPackageName()Ljava/lang/String;
 
     move-result-object v1
@@ -115,12 +182,12 @@
 
     return-void
 
-    :cond_1d
+    :cond_32
     invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;
 
     move-result-object v0
 
-    if-eqz v0, :cond_2b
+    if-eqz v0, :cond_40
 
     new-instance v2, Landroid/media/MediaRecorder$EventHandler;
 
@@ -128,14 +195,12 @@
 
     iput-object v2, p0, Landroid/media/MediaRecorder;->mEventHandler:Landroid/media/MediaRecorder$EventHandler;
 
-    goto :goto_10
-
-    :cond_2b
-    const/4 v2, 0x0
+    goto :goto_22
 
+    :cond_40
     iput-object v2, p0, Landroid/media/MediaRecorder;->mEventHandler:Landroid/media/MediaRecorder$EventHandler;
 
-    goto :goto_10
+    goto :goto_22
 .end method
 
 .method private native _prepare()V
@@ -180,12 +245,1724 @@
     return-object v0
 .end method
 
-.method public static final getAudioSourceMax()I
+.method static synthetic access$300(Landroid/media/MediaRecorder;)V
     .registers 1
 
-    const/4 v0, 0x7
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->privacyStop()V
+
+    return-void
+.end method
+
+.method static synthetic access$400(Landroid/media/MediaRecorder;)Ljava/lang/String;
+    .registers 2
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+
+    return-object v0
+.end method
+
+.method static synthetic access$502(Landroid/media/MediaRecorder;Z)Z
+    .registers 2
+
+    iput-boolean p1, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    return p1
+.end method
+
+.method static synthetic access$600(Landroid/media/MediaRecorder;)Ljava/io/FileDescriptor;
+    .registers 2
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
+
+    return-object v0
+.end method
+
+.method static synthetic access$700(Landroid/media/MediaRecorder;)Ljava/lang/String;
+    .registers 2
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+
+    return-object v0
+.end method
+
+.method private checkIfPackagesAllowed(I)I
+    .registers 12
+
+    const/4 v6, -0x1
+
+    const/4 v5, -0x2
+
+    const/4 v7, -0x3
+
+    :try_start_3
+    iget-object v8, p0, Landroid/media/MediaRecorder;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v8, :cond_5b
+
+    const/4 v2, 0x0
+
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v4
+
+    if-eqz v3, :cond_51
+
+    packed-switch p1, :pswitch_data_72
+
+    move v5, v7
+
+    :cond_16
+    :goto_16
+    return v5
+
+    :pswitch_17
+    const/4 v1, 0x0
+
+    :goto_18
+    array-length v8, v3
+
+    if-ge v1, v8, :cond_2f
+
+    iget-object v8, p0, Landroid/media/MediaRecorder;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v9, v3, v1
+
+    invoke-virtual {v8, v9, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_2b
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettings;->getRecordAudioSetting()B
+
+    move-result v8
+
+    if-nez v8, :cond_16
+
+    :cond_2b
+    const/4 v2, 0x0
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_18
+
+    :cond_2f
+    move v5, v6
+
+    goto :goto_16
+
+    :pswitch_31
+    const/4 v1, 0x0
+
+    :goto_32
+    array-length v8, v3
+
+    if-ge v1, v8, :cond_4f
+
+    iget-object v8, p0, Landroid/media/MediaRecorder;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v9, v3, v1
+
+    invoke-virtual {v8, v9, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_4b
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettings;->getRecordAudioSetting()B
+
+    move-result v8
+
+    if-nez v8, :cond_16
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettings;->getCameraSetting()B
+
+    move-result v8
+
+    if-nez v8, :cond_16
+
+    :cond_4b
+    const/4 v2, 0x0
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_32
+
+    :cond_4f
+    move v5, v6
+
+    goto :goto_16
+
+    :cond_51
+    const-string v5, "PM,MediaRecorder"
+
+    const-string/jumbo v6, "return GOT_ERROR, because package_names are NULL"
+
+    invoke-static {v5, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    move v5, v7
+
+    goto :goto_16
+
+    :cond_5b
+    const-string v5, "PM,MediaRecorder"
+
+    const-string/jumbo v6, "return GOT_ERROR, because pSetMan is NULL"
+
+    invoke-static {v5, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_63
+    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_63} :catch_65
+
+    move v5, v7
+
+    goto :goto_16
+
+    :catch_65
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v5, "PM,MediaRecorder"
+
+    const-string v6, "Got exception in checkIfPackagesAllowed"
+
+    invoke-static {v5, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    move v5, v7
+
+    goto :goto_16
+
+    :pswitch_data_72
+    .packed-switch 0x2
+        :pswitch_17
+        :pswitch_31
+    .end packed-switch
+.end method
+
+.method private dataAccess(ZI)V
+    .registers 8
+
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v1
+
+    if-eqz p1, :cond_5a
+
+    if-eqz v1, :cond_5a
+
+    packed-switch p2, :pswitch_data_ae
+
+    :cond_b
+    :goto_b
+    return-void
+
+    :pswitch_c
+    const/4 v0, 0x0
+
+    :goto_d
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_b
+
+    const-string v2, "PM,MediaRecorder"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Allowed Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing microphone."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_d
+
+    :pswitch_33
+    const/4 v0, 0x0
+
+    :goto_34
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_b
+
+    const-string v2, "PM,MediaRecorder"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Allowed Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing microphone and camera."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_34
+
+    :cond_5a
+    if-eqz v1, :cond_b
+
+    packed-switch p2, :pswitch_data_b6
+
+    goto :goto_b
+
+    :pswitch_60
+    const/4 v0, 0x0
+
+    :goto_61
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_b
+
+    const-string v2, "PM,MediaRecorder"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Blocked Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing microphone."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_61
+
+    :pswitch_87
+    const/4 v0, 0x0
+
+    :goto_88
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_b
+
+    const-string v2, "PM,MediaRecorder"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Blocked Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing microphone and camera."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_88
+
+    :pswitch_data_ae
+    .packed-switch 0xa
+        :pswitch_c
+        :pswitch_33
+    .end packed-switch
+
+    :pswitch_data_b6
+    .packed-switch 0xa
+        :pswitch_60
+        :pswitch_87
+    .end packed-switch
+.end method
+
+.method public static final getAudioSourceMax()I
+    .registers 1
+
+    const/4 v0, 0x7
+
+    return v0
+.end method
+
+.method private getPackageName()[Ljava/lang/String;
+    .registers 6
+
+    :try_start_0
+    iget-object v3, p0, Landroid/media/MediaRecorder;->mPm:Landroid/content/pm/IPackageManager;
+
+    if-eqz v3, :cond_f
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    iget-object v3, p0, Landroid/media/MediaRecorder;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+
+    move-result-object v1
+
+    :goto_e
+    return-object v1
+
+    :cond_f
+    const-string/jumbo v3, "package"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    iput-object v3, p0, Landroid/media/MediaRecorder;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    iget-object v3, p0, Landroid/media/MediaRecorder;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+    :try_end_25
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_25} :catch_27
+
+    move-result-object v1
+
+    goto :goto_e
+
+    :catch_27
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v3, "PM,MediaRecorder"
+
+    const-string/jumbo v4, "something went wrong with getting package name"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    goto :goto_e
+.end method
+
+.method private getPrivacyFileDescriptor()Ljava/io/FileDescriptor;
+    .registers 19
+
+    invoke-direct/range {p0 .. p0}, Landroid/media/MediaRecorder;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v12
+
+    new-instance v14, Ljava/util/Random;
+
+    invoke-direct {v14}, Ljava/util/Random;-><init>()V
+
+    const/4 v1, 0x0
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v14}, Ljava/util/Random;->nextLong()J
+
+    move-result-wide v16
+
+    invoke-virtual/range {v15 .. v17}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, ".tmp"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    const/4 v7, 0x0
+
+    const/4 v3, 0x0
+
+    const/4 v11, 0x0
+
+    :goto_24
+    array-length v15, v12
+
+    if-ge v11, v15, :cond_247
+
+    :try_start_27
+    new-instance v9, Ljava/io/File;
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v16, "/data/data/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    aget-object v16, v12, v11
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, "/cache/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    invoke-direct {v9, v15}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v9}, Ljava/io/File;->mkdirs()Z
+
+    new-instance v8, Ljava/io/FileWriter;
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v16, "/data/data/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    aget-object v16, v12, v11
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, "/cache/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    invoke-direct {v8, v15}, Ljava/io/FileWriter;-><init>(Ljava/lang/String;)V
+    :try_end_6e
+    .catchall {:try_start_27 .. :try_end_6e} :catchall_15f
+    .catch Ljava/lang/Exception; {:try_start_27 .. :try_end_6e} :catch_155
+
+    :try_start_6e
+    const-string/jumbo v15, "test"
+
+    invoke-virtual {v8, v15}, Ljava/io/FileWriter;->write(Ljava/lang/String;)V
+
+    invoke-virtual {v8}, Ljava/io/FileWriter;->flush()V
+
+    invoke-virtual {v8}, Ljava/io/FileWriter;->close()V
+
+    new-instance v4, Ljava/io/File;
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v16, "/data/data/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    aget-object v16, v12, v11
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, "/cache/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    invoke-direct {v4, v15}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+    :try_end_9e
+    .catchall {:try_start_6e .. :try_end_9e} :catchall_235
+    .catch Ljava/lang/Exception; {:try_start_6e .. :try_end_9e} :catch_23e
+
+    :try_start_9e
+    invoke-virtual {v4}, Ljava/io/File;->delete()Z
+
+    const-string v15, "PM,MediaRecorder"
+
+    new-instance v16, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v16 .. v16}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v17, "found our package: "
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    aget-object v17, v12, v11
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    const-string v17, " with internal path. File: "
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v16
+
+    invoke-static/range {v15 .. v16}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    aget-object v1, v12, v11
+    :try_end_c9
+    .catchall {:try_start_9e .. :try_end_c9} :catchall_239
+    .catch Ljava/lang/Exception; {:try_start_9e .. :try_end_c9} :catch_242
+
+    const/4 v7, 0x0
+
+    const/4 v3, 0x0
+
+    invoke-static {}, Ljava/lang/System;->gc()V
+
+    move-object v4, v3
+
+    move-object v8, v7
+
+    :goto_d0
+    if-eqz v1, :cond_172
+
+    :try_start_d2
+    new-instance v10, Ljava/io/FileOutputStream;
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v16, "/data/data/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, "/cache/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    invoke-direct {v10, v15}, Ljava/io/FileOutputStream;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v10}, Ljava/io/FileOutputStream;->getFD()Ljava/io/FileDescriptor;
+
+    move-result-object v6
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v16, "/data/data/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, "/cache/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    move-object/from16 v0, p0
+
+    iput-object v15, v0, Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+
+    const-string v15, "PM,MediaRecorder"
+
+    new-instance v16, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v16 .. v16}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v17, "returned fileDescriptor for package: "
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    const-string v17, " with internal path. Path: "
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    const-string v17, "/data/data/"
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    const-string v17, "/cache/"
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v16
+
+    invoke-static/range {v15 .. v16}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_152
+    .catch Ljava/lang/Exception; {:try_start_d2 .. :try_end_152} :catch_166
+
+    move-object v3, v4
+
+    move-object v7, v8
+
+    :goto_154
+    return-object v6
+
+    :catch_155
+    move-exception v15
+
+    :goto_156
+    const/4 v7, 0x0
+
+    const/4 v3, 0x0
+
+    invoke-static {}, Ljava/lang/System;->gc()V
+
+    add-int/lit8 v11, v11, 0x1
+
+    goto/16 :goto_24
+
+    :catchall_15f
+    move-exception v15
+
+    :goto_160
+    const/4 v7, 0x0
+
+    const/4 v3, 0x0
+
+    invoke-static {}, Ljava/lang/System;->gc()V
+
+    throw v15
+
+    :catch_166
+    move-exception v5
+
+    const-string v15, "PM,MediaRecorder"
+
+    const-string v16, "Got exception while creating fileDescriptor -> return null"
+
+    invoke-static/range {v15 .. v16}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v6, 0x0
+
+    move-object v3, v4
+
+    move-object v7, v8
+
+    goto :goto_154
+
+    :cond_172
+    :try_start_172
+    invoke-static {}, Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;
+
+    move-result-object v13
+
+    new-instance v7, Ljava/io/FileWriter;
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v15, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, "/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    invoke-direct {v7, v15}, Ljava/io/FileWriter;-><init>(Ljava/lang/String;)V
+    :try_end_196
+    .catch Ljava/lang/Exception; {:try_start_172 .. :try_end_196} :catch_22e
+
+    :try_start_196
+    const-string/jumbo v15, "test"
+
+    invoke-virtual {v7, v15}, Ljava/io/FileWriter;->write(Ljava/lang/String;)V
+
+    invoke-virtual {v7}, Ljava/io/FileWriter;->flush()V
+
+    invoke-virtual {v7}, Ljava/io/FileWriter;->close()V
+
+    new-instance v3, Ljava/io/File;
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v15, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, "/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    invoke-direct {v3, v15}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+    :try_end_1be
+    .catch Ljava/lang/Exception; {:try_start_196 .. :try_end_1be} :catch_232
+
+    :try_start_1be
+    invoke-virtual {v3}, Ljava/io/File;->delete()Z
+
+    new-instance v10, Ljava/io/FileOutputStream;
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v15, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, "/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    invoke-direct {v10, v15}, Ljava/io/FileOutputStream;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v10}, Ljava/io/FileOutputStream;->getFD()Ljava/io/FileDescriptor;
+
+    move-result-object v6
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v15, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, "/"
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    move-object/from16 v0, p0
+
+    iput-object v15, v0, Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+
+    const-string v15, "PM,MediaRecorder"
+
+    new-instance v16, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v16 .. v16}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v17, "Returned FileDescriptor. Path:  "
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    const-string v17, "/"
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    const-string v17, " . It is on SDCard!"
+
+    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v16
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v16
+
+    invoke-static/range {v15 .. v16}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_228
+    .catch Ljava/lang/Exception; {:try_start_1be .. :try_end_228} :catch_22a
+
+    goto/16 :goto_154
+
+    :catch_22a
+    move-exception v5
+
+    :goto_22b
+    const/4 v6, 0x0
+
+    goto/16 :goto_154
+
+    :catch_22e
+    move-exception v5
+
+    move-object v3, v4
+
+    move-object v7, v8
+
+    goto :goto_22b
+
+    :catch_232
+    move-exception v5
+
+    move-object v3, v4
+
+    goto :goto_22b
+
+    :catchall_235
+    move-exception v15
+
+    move-object v7, v8
+
+    goto/16 :goto_160
+
+    :catchall_239
+    move-exception v15
+
+    move-object v3, v4
+
+    move-object v7, v8
+
+    goto/16 :goto_160
+
+    :catch_23e
+    move-exception v15
+
+    move-object v7, v8
+
+    goto/16 :goto_156
+
+    :catch_242
+    move-exception v15
+
+    move-object v3, v4
+
+    move-object v7, v8
+
+    goto/16 :goto_156
+
+    :cond_247
+    move-object v4, v3
+
+    move-object v8, v7
+
+    goto/16 :goto_d0
+.end method
+
+.method private getPrivacyPath()Ljava/lang/String;
+    .registers 16
+
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v9
+
+    new-instance v11, Ljava/util/Random;
+
+    invoke-direct {v11}, Ljava/util/Random;-><init>()V
+
+    const/4 v0, 0x0
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v11}, Ljava/util/Random;->nextLong()J
+
+    move-result-wide v13
+
+    invoke-virtual {v12, v13, v14}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, ".tmp"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v5, 0x0
+
+    const/4 v2, 0x0
+
+    const/4 v8, 0x0
+
+    :goto_24
+    array-length v12, v9
+
+    if-ge v8, v12, :cond_1eb
+
+    :try_start_27
+    new-instance v7, Ljava/io/File;
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "/data/data/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    aget-object v13, v9, v8
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, "/cache/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-direct {v7, v12}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v7}, Ljava/io/File;->mkdirs()Z
+
+    new-instance v6, Ljava/io/FileWriter;
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "/data/data/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    aget-object v13, v9, v8
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, "/cache/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-direct {v6, v12}, Ljava/io/FileWriter;-><init>(Ljava/lang/String;)V
+    :try_end_6e
+    .catchall {:try_start_27 .. :try_end_6e} :catchall_137
+    .catch Ljava/lang/Exception; {:try_start_27 .. :try_end_6e} :catch_12d
+
+    :try_start_6e
+    const-string/jumbo v12, "test"
+
+    invoke-virtual {v6, v12}, Ljava/io/FileWriter;->write(Ljava/lang/String;)V
+
+    invoke-virtual {v6}, Ljava/io/FileWriter;->flush()V
+
+    invoke-virtual {v6}, Ljava/io/FileWriter;->close()V
+
+    new-instance v3, Ljava/io/File;
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "/data/data/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    aget-object v13, v9, v8
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, "/cache/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-direct {v3, v12}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+    :try_end_9e
+    .catchall {:try_start_6e .. :try_end_9e} :catchall_1d9
+    .catch Ljava/lang/Exception; {:try_start_6e .. :try_end_9e} :catch_1e2
+
+    :try_start_9e
+    invoke-virtual {v3}, Ljava/io/File;->delete()Z
+
+    const-string v12, "PM,MediaRecorder"
+
+    new-instance v13, Ljava/lang/StringBuilder;
+
+    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v14, "found our package: "
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    aget-object v14, v9, v8
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    const-string v14, " with internal path. File: "
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v13
+
+    invoke-static {v12, v13}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    aget-object v0, v9, v8
+    :try_end_c7
+    .catchall {:try_start_9e .. :try_end_c7} :catchall_1dd
+    .catch Ljava/lang/Exception; {:try_start_9e .. :try_end_c7} :catch_1e6
+
+    const/4 v5, 0x0
+
+    const/4 v2, 0x0
+
+    invoke-static {}, Ljava/lang/System;->gc()V
+
+    move-object v3, v2
+
+    move-object v6, v5
+
+    :goto_ce
+    if-eqz v0, :cond_13e
+
+    const-string v12, "PM,MediaRecorder"
+
+    new-instance v13, Ljava/lang/StringBuilder;
+
+    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v14, "returned file: "
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    const-string v14, " for package: "
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    const-string v14, " with internal path. Path: "
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    const-string v14, "/data/data/"
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    const-string v14, "/cache/"
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v13
+
+    invoke-static {v12, v13}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "/data/data/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, "/cache/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v12
+
+    move-object v2, v3
+
+    move-object v5, v6
+
+    :goto_12c
+    return-object v12
+
+    :catch_12d
+    move-exception v12
+
+    :goto_12e
+    const/4 v5, 0x0
+
+    const/4 v2, 0x0
+
+    invoke-static {}, Ljava/lang/System;->gc()V
+
+    add-int/lit8 v8, v8, 0x1
+
+    goto/16 :goto_24
+
+    :catchall_137
+    move-exception v12
+
+    :goto_138
+    const/4 v5, 0x0
+
+    const/4 v2, 0x0
+
+    invoke-static {}, Ljava/lang/System;->gc()V
+
+    throw v12
+
+    :cond_13e
+    :try_start_13e
+    invoke-static {}, Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;
+
+    move-result-object v10
+
+    new-instance v5, Ljava/io/FileWriter;
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, "/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-direct {v5, v12}, Ljava/io/FileWriter;-><init>(Ljava/lang/String;)V
+    :try_end_162
+    .catch Ljava/lang/Exception; {:try_start_13e .. :try_end_162} :catch_1ce
+
+    :try_start_162
+    const-string/jumbo v12, "test"
+
+    invoke-virtual {v5, v12}, Ljava/io/FileWriter;->write(Ljava/lang/String;)V
+
+    invoke-virtual {v5}, Ljava/io/FileWriter;->flush()V
+
+    invoke-virtual {v5}, Ljava/io/FileWriter;->close()V
+
+    new-instance v2, Ljava/io/File;
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, "/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-direct {v2, v12}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+    :try_end_18a
+    .catch Ljava/lang/Exception; {:try_start_162 .. :try_end_18a} :catch_1d4
+
+    :try_start_18a
+    invoke-virtual {v2}, Ljava/io/File;->delete()Z
+
+    const-string v12, "PM,MediaRecorder"
+
+    new-instance v13, Ljava/lang/StringBuilder;
+
+    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v14, "Return filePath:  "
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    const-string v14, "/"
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    const-string v14, " . It is on SDCard!"
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v13
+
+    invoke-static {v12, v13}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, "/"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+    :try_end_1cb
+    .catch Ljava/lang/Exception; {:try_start_18a .. :try_end_1cb} :catch_1d7
+
+    move-result-object v12
+
+    goto/16 :goto_12c
+
+    :catch_1ce
+    move-exception v4
+
+    move-object v2, v3
+
+    move-object v5, v6
+
+    :goto_1d1
+    const/4 v12, 0x0
+
+    goto/16 :goto_12c
+
+    :catch_1d4
+    move-exception v4
+
+    move-object v2, v3
+
+    goto :goto_1d1
+
+    :catch_1d7
+    move-exception v4
+
+    goto :goto_1d1
+
+    :catchall_1d9
+    move-exception v12
+
+    move-object v5, v6
+
+    goto/16 :goto_138
+
+    :catchall_1dd
+    move-exception v12
+
+    move-object v2, v3
+
+    move-object v5, v6
+
+    goto/16 :goto_138
+
+    :catch_1e2
+    move-exception v12
+
+    move-object v5, v6
+
+    goto/16 :goto_12e
+
+    :catch_1e6
+    move-exception v12
+
+    move-object v2, v3
+
+    move-object v5, v6
+
+    goto/16 :goto_12e
+
+    :cond_1eb
+    move-object v3, v2
+
+    move-object v6, v5
+
+    goto/16 :goto_ce
+.end method
+
+.method private initiate()V
+    .registers 5
+
+    const/4 v1, 0x0
+
+    :try_start_1
+    iput-object v1, p0, Landroid/media/MediaRecorder;->context:Landroid/content/Context;
+
+    new-instance v1, Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v2, p0, Landroid/media/MediaRecorder;->context:Landroid/content/Context;
+
+    const-string/jumbo v3, "privacy"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v3
+
+    invoke-direct {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v1, p0, Landroid/media/MediaRecorder;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "package"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/media/MediaRecorder;->mPm:Landroid/content/pm/IPackageManager;
+
+    const/4 v1, 0x1
+
+    iput-boolean v1, p0, Landroid/media/MediaRecorder;->privacyMode:Z
+    :try_end_27
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_27} :catch_28
+
+    :goto_27
+    return-void
+
+    :catch_28
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v1, "PM,MediaRecorder"
+
+    const-string v2, "Something went wrong with initalize variables"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
 
-    return v0
+    iput-boolean v1, p0, Landroid/media/MediaRecorder;->privacyMode:Z
+
+    goto :goto_27
 .end method
 
 .method private final native native_finalize()V
@@ -240,17 +2017,104 @@
     goto :goto_a
 .end method
 
+.method private privacyStop()V
+    .registers 4
+
+    :try_start_0
+    invoke-virtual {p0}, Landroid/media/MediaRecorder;->stop()V
+    :try_end_3
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_3} :catch_4
+
+    :goto_3
+    return-void
+
+    :catch_4
+    move-exception v0
+
+    const-string v1, "PM,MediaRecorder"
+
+    const-string v2, "Got exception while trying to call privacyStop()"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_3
+.end method
+
 .method private native setParameter(Ljava/lang/String;)V
 .end method
 
 
 # virtual methods
 .method protected finalize()V
-    .registers 1
+    .registers 4
+
+    const/4 v2, 0x1
+
+    iget-boolean v1, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    if-nez v1, :cond_18
+
+    iget-object v1, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+
+    if-eqz v1, :cond_1c
 
+    new-instance v0, Ljava/io/File;
+
+    iget-object v1, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->delete()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_18
+
+    iput-boolean v2, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    :cond_18
+    :goto_18
     invoke-direct {p0}, Landroid/media/MediaRecorder;->native_finalize()V
 
     return-void
+
+    :cond_1c
+    iget-object v1, p0, Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
+
+    if-eqz v1, :cond_34
+
+    iget-object v1, p0, Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+
+    if-eqz v1, :cond_34
+
+    new-instance v0, Ljava/io/File;
+
+    iget-object v1, p0, Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->delete()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_18
+
+    iput-boolean v2, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    goto :goto_18
+
+    :cond_34
+    const-string v1, "PM,MediaRecorder"
+
+    const-string v2, "Can\'t delete temporary File, because all is null?! It could be that we only want to record audio?!"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    iput-boolean v1, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    goto :goto_18
 .end method
 
 .method public native getMaxAmplitude()I
@@ -262,7 +2126,7 @@
 .end method
 
 .method public prepare()V
-    .registers 8
+    .registers 12
     .annotation system Ldalvik/annotation/Throws;
         value = {
             Ljava/lang/IllegalStateException;,
@@ -270,20 +2134,80 @@
         }
     .end annotation
 
-    const-wide/16 v2, 0x0
+    iget-boolean v0, p0, Landroid/media/MediaRecorder;->privacyMode:Z
+
+    if-nez v0, :cond_7
+
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->initiate()V
+
+    :cond_7
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    const/4 v9, 0x0
+
+    iget v0, p0, Landroid/media/MediaRecorder;->ACTUAL_STATE:I
+
+    packed-switch v0, :pswitch_data_102
+
+    :cond_10
+    :goto_10
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v8
 
+    if-nez v9, :cond_31
+
+    iget v0, p0, Landroid/media/MediaRecorder;->ACTUAL_STATE:I
+
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_cf
+
+    if-eqz v8, :cond_cf
+
+    array-length v0, v8
+
+    if-lez v0, :cond_cf
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v1, 0x0
+
+    aget-object v1, v8, v1
+
+    const/4 v2, 0x0
+
+    const/4 v3, 0x0
+
+    const-string v4, "camera"
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_2e
+    :goto_2e
+    const/4 v0, 0x1
+
+    iput-boolean v0, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    :cond_31
     iget-object v0, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
 
-    if-eqz v0, :cond_25
+    if-eqz v0, :cond_ea
 
-    new-instance v6, Ljava/io/FileOutputStream;
+    new-instance v7, Ljava/io/FileOutputStream;
 
     iget-object v0, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
 
-    invoke-direct {v6, v0}, Ljava/io/FileOutputStream;-><init>(Ljava/lang/String;)V
+    invoke-direct {v7, v0}, Ljava/io/FileOutputStream;-><init>(Ljava/lang/String;)V
 
-    :try_start_d
-    invoke-virtual {v6}, Ljava/io/FileOutputStream;->getFD()Ljava/io/FileDescriptor;
+    :try_start_3c
+    invoke-virtual {v7}, Ljava/io/FileOutputStream;->getFD()Ljava/io/FileDescriptor;
 
     move-result-object v1
 
@@ -294,39 +2218,215 @@
     move-object v0, p0
 
     invoke-direct/range {v0 .. v5}, Landroid/media/MediaRecorder;->_setOutputFile(Ljava/io/FileDescriptor;JJ)V
-    :try_end_19
-    .catchall {:try_start_d .. :try_end_19} :catchall_20
+    :try_end_48
+    .catchall {:try_start_3c .. :try_end_48} :catchall_e5
 
-    invoke-virtual {v6}, Ljava/io/FileOutputStream;->close()V
+    invoke-virtual {v7}, Ljava/io/FileOutputStream;->close()V
 
-    :goto_1c
+    :goto_4b
     invoke-direct {p0}, Landroid/media/MediaRecorder;->_prepare()V
 
     return-void
 
-    :catchall_20
+    :pswitch_4f
+    const/4 v0, 0x2
+
+    invoke-direct {p0, v0}, Landroid/media/MediaRecorder;->checkIfPackagesAllowed(I)I
+
+    move-result v0
+
+    const/4 v1, -0x2
+
+    if-ne v0, v1, :cond_10
+
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v10
+
+    if-eqz v10, :cond_6f
+
+    array-length v0, v10
+
+    if-lez v0, :cond_6f
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v1, 0x0
+
+    aget-object v1, v10, v1
+
+    const/4 v2, 0x0
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "recordAudio"
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_6f
+    new-instance v0, Landroid/media/MediaRecorder$PrivacyRunner;
+
+    invoke-direct {v0, p0}, Landroid/media/MediaRecorder$PrivacyRunner;-><init>(Landroid/media/MediaRecorder;)V
+
+    iput-object v0, p0, Landroid/media/MediaRecorder;->pRunner:Landroid/media/MediaRecorder$PrivacyRunner;
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->pRunner:Landroid/media/MediaRecorder$PrivacyRunner;
+
+    const-wide/16 v1, 0x32
+
+    invoke-virtual {v0, v1, v2}, Landroid/media/MediaRecorder$PrivacyRunner;->setDelay(J)V
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->pRunner:Landroid/media/MediaRecorder$PrivacyRunner;
+
+    invoke-virtual {v0}, Landroid/media/MediaRecorder$PrivacyRunner;->start()V
+
+    const/4 v9, 0x1
+
+    goto :goto_10
+
+    :pswitch_84
+    const/4 v0, 0x3
+
+    invoke-direct {p0, v0}, Landroid/media/MediaRecorder;->checkIfPackagesAllowed(I)I
+
+    move-result v0
+
+    const/4 v1, -0x2
+
+    if-ne v0, v1, :cond_10
+
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v10
+
+    if-eqz v10, :cond_a3
+
+    array-length v0, v10
+
+    if-lez v0, :cond_a3
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v1, 0x0
+
+    aget-object v1, v10, v1
+
+    const/4 v2, 0x0
+
+    const/4 v3, 0x1
+
+    const-string v4, "camera"
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_a3
+    iget-object v0, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+
+    if-eqz v0, :cond_bc
+
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->getPrivacyPath()Ljava/lang/String;
+
+    move-result-object v0
+
+    iput-object v0, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+
+    :goto_ad
+    new-instance v0, Landroid/media/MediaRecorder$PrivacyRunner;
+
+    invoke-direct {v0, p0}, Landroid/media/MediaRecorder$PrivacyRunner;-><init>(Landroid/media/MediaRecorder;)V
+
+    iput-object v0, p0, Landroid/media/MediaRecorder;->pRunner:Landroid/media/MediaRecorder$PrivacyRunner;
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->pRunner:Landroid/media/MediaRecorder$PrivacyRunner;
+
+    invoke-virtual {v0}, Landroid/media/MediaRecorder$PrivacyRunner;->start()V
+
+    const/4 v9, 0x1
+
+    goto/16 :goto_10
+
+    :cond_bc
+    iget-object v0, p0, Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
+
+    if-eqz v0, :cond_c7
+
+    invoke-direct {p0}, Landroid/media/MediaRecorder;->getPrivacyFileDescriptor()Ljava/io/FileDescriptor;
+
+    move-result-object v0
+
+    iput-object v0, p0, Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
+
+    goto :goto_ad
+
+    :cond_c7
+    new-instance v0, Ljava/io/IOException;
+
+    const-string v1, "No valid output file"
+
+    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_cf
+    if-eqz v8, :cond_2e
+
+    array-length v0, v8
+
+    if-lez v0, :cond_2e
+
+    iget-object v0, p0, Landroid/media/MediaRecorder;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v1, 0x0
+
+    aget-object v1, v8, v1
+
+    const/4 v2, 0x0
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "recordAudio"
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_2e
+
+    :catchall_e5
     move-exception v0
 
-    invoke-virtual {v6}, Ljava/io/FileOutputStream;->close()V
+    invoke-virtual {v7}, Ljava/io/FileOutputStream;->close()V
 
     throw v0
 
-    :cond_25
+    :cond_ea
     iget-object v0, p0, Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
 
-    if-eqz v0, :cond_31
+    if-eqz v0, :cond_fa
 
     iget-object v1, p0, Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
 
-    move-object v0, p0
+    const-wide/16 v2, 0x0
 
-    move-wide v4, v2
+    const-wide/16 v4, 0x0
+
+    move-object v0, p0
 
     invoke-direct/range {v0 .. v5}, Landroid/media/MediaRecorder;->_setOutputFile(Ljava/io/FileDescriptor;JJ)V
 
-    goto :goto_1c
+    goto/16 :goto_4b
 
-    :cond_31
+    :cond_fa
     new-instance v0, Ljava/io/IOException;
 
     const-string v1, "No valid output file"
@@ -334,23 +2434,97 @@
     invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V
 
     throw v0
+
+    :pswitch_data_102
+    .packed-switch 0x0
+        :pswitch_4f
+        :pswitch_84
+    .end packed-switch
 .end method
 
 .method public native release()V
 .end method
 
 .method public reset()V
-    .registers 3
+    .registers 5
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x1
 
     invoke-direct {p0}, Landroid/media/MediaRecorder;->native_reset()V
 
-    iget-object v0, p0, Landroid/media/MediaRecorder;->mEventHandler:Landroid/media/MediaRecorder$EventHandler;
+    iget-boolean v1, p0, Landroid/media/MediaRecorder;->deletedFile:Z
 
-    const/4 v1, 0x0
+    if-nez v1, :cond_1c
+
+    iget-object v1, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+
+    if-eqz v1, :cond_27
+
+    new-instance v0, Ljava/io/File;
+
+    iget-object v1, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->delete()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_1c
+
+    iput-boolean v2, p0, Landroid/media/MediaRecorder;->deletedFile:Z
 
-    invoke-virtual {v0, v1}, Landroid/media/MediaRecorder$EventHandler;->removeCallbacksAndMessages(Ljava/lang/Object;)V
+    :cond_1c
+    :goto_1c
+    iput-object v3, p0, Landroid/media/MediaRecorder;->pRunner:Landroid/media/MediaRecorder$PrivacyRunner;
+
+    invoke-static {}, Ljava/lang/System;->gc()V
+
+    iget-object v1, p0, Landroid/media/MediaRecorder;->mEventHandler:Landroid/media/MediaRecorder$EventHandler;
+
+    invoke-virtual {v1, v3}, Landroid/media/MediaRecorder$EventHandler;->removeCallbacksAndMessages(Ljava/lang/Object;)V
 
     return-void
+
+    :cond_27
+    iget-object v1, p0, Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
+
+    if-eqz v1, :cond_3f
+
+    iget-object v1, p0, Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+
+    if-eqz v1, :cond_3f
+
+    new-instance v0, Ljava/io/File;
+
+    iget-object v1, p0, Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->delete()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_1c
+
+    iput-boolean v2, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    goto :goto_1c
+
+    :cond_3f
+    const-string v1, "PM,MediaRecorder"
+
+    const-string v2, "Can\'t delete temporary File, because all is null?! It could be that we only want to record audio?!"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    iput-boolean v1, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
+    goto :goto_1c
 .end method
 
 .method public setAudioChannels(I)V
@@ -510,6 +2684,10 @@
 .method public setCaptureRate(D)V
     .registers 8
 
+    const/4 v3, 0x1
+
+    iput v3, p0, Landroid/media/MediaRecorder;->ACTUAL_STATE:I
+
     const-string/jumbo v3, "time-lapse-enable=1"
 
     invoke-direct {p0, v3}, Landroid/media/MediaRecorder;->setParameter(Ljava/lang/String;)V
@@ -804,6 +2982,10 @@
 
     iput-object p1, p0, Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
 
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
     return-void
 .end method
 
@@ -821,6 +3003,10 @@
 
     iput-object p1, p0, Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
 
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Landroid/media/MediaRecorder;->deletedFile:Z
+
     return-void
 .end method
 
@@ -833,7 +3019,11 @@
 .end method
 
 .method public setPreviewDisplay(Landroid/view/Surface;)V
-    .registers 2
+    .registers 3
+
+    const/4 v0, 0x1
+
+    iput v0, p0, Landroid/media/MediaRecorder;->ACTUAL_STATE:I
 
     iput-object p1, p0, Landroid/media/MediaRecorder;->mSurface:Landroid/view/Surface;
 
@@ -843,6 +3033,10 @@
 .method public setProfile(Landroid/media/CamcorderProfile;)V
     .registers 4
 
+    const/4 v0, 0x1
+
+    iput v0, p0, Landroid/media/MediaRecorder;->ACTUAL_STATE:I
+
     iget v0, p1, Landroid/media/CamcorderProfile;->fileFormat:I
 
     invoke-virtual {p0, v0}, Landroid/media/MediaRecorder;->setOutputFormat(I)V
@@ -869,18 +3063,18 @@
 
     const/16 v1, 0x3e8
 
-    if-lt v0, v1, :cond_28
+    if-lt v0, v1, :cond_2b
 
     iget v0, p1, Landroid/media/CamcorderProfile;->quality:I
 
     const/16 v1, 0x3ef
 
-    if-gt v0, v1, :cond_28
+    if-gt v0, v1, :cond_2b
 
-    :goto_27
+    :goto_2a
     return-void
 
-    :cond_28
+    :cond_2b
     iget v0, p1, Landroid/media/CamcorderProfile;->audioBitRate:I
 
     invoke-virtual {p0, v0}, Landroid/media/MediaRecorder;->setAudioEncodingBitRate(I)V
@@ -897,7 +3091,7 @@
 
     invoke-virtual {p0, v0}, Landroid/media/MediaRecorder;->setAudioEncoder(I)V
 
-    goto :goto_27
+    goto :goto_2a
 .end method
 
 .method public native setVideoEncoder(I)V
@@ -911,7 +3105,11 @@
 .method public setVideoEncodingBitRate(I)V
     .registers 4
 
-    if-gtz p1, :cond_a
+    const/4 v0, 0x1
+
+    iput v0, p0, Landroid/media/MediaRecorder;->ACTUAL_STATE:I
+
+    if-gtz p1, :cond_d
 
     new-instance v0, Ljava/lang/IllegalArgumentException;
 
@@ -921,7 +3119,7 @@
 
     throw v0
 
-    :cond_a
+    :cond_d
     new-instance v0, Ljava/lang/StringBuilder;
 
     invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
diff -Npruw stock-framework/smali/android/net/NetworkInfo.smali pdroid-framework/smali/android/net/NetworkInfo.smali
--- stock-framework/smali/android/net/NetworkInfo.smali	2014-01-02 21:10:19.124311283 -0600
+++ pdroid-framework/smali/android/net/NetworkInfo.smali	2014-01-02 21:10:34.724310874 -0600
@@ -882,6 +882,14 @@
     throw v0
 .end method
 
+.method public setState(Landroid/net/NetworkInfo$State;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/net/NetworkInfo;->mState:Landroid/net/NetworkInfo$State;
+
+    return-void
+.end method
+
 .method setSubtype(ILjava/lang/String;)V
     .registers 4
 
diff -Npruw stock-framework/smali/android/net/wifi/p2p/WifiP2pService.smali pdroid-framework/smali/android/net/wifi/p2p/WifiP2pService.smali
--- stock-framework/smali/android/net/wifi/p2p/WifiP2pService.smali	2014-01-02 21:10:19.292311279 -0600
+++ pdroid-framework/smali/android/net/wifi/p2p/WifiP2pService.smali	2014-01-02 21:10:34.892310870 -0600
@@ -698,7 +698,7 @@
 
     invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
-    const-string v1, "mJoinExistingGroup "
+    const-string/jumbo v1, "mJoinExistingGroup "
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
diff -Npruw stock-framework/smali/android/net/wifi/WifiConfigStore.smali pdroid-framework/smali/android/net/wifi/WifiConfigStore.smali
--- stock-framework/smali/android/net/wifi/WifiConfigStore.smali	2014-01-02 21:10:19.200311281 -0600
+++ pdroid-framework/smali/android/net/wifi/WifiConfigStore.smali	2014-01-02 21:10:34.800310872 -0600
@@ -4759,7 +4759,7 @@
 
     invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
 
-    const-string v3, "mLastPriority "
+    const-string/jumbo v3, "mLastPriority "
 
     invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
@@ -4789,12 +4789,12 @@
 
     move-result-object v1
 
-    :goto_2a
+    :goto_2b
     invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z
 
     move-result v2
 
-    if-eqz v2, :cond_3a
+    if-eqz v2, :cond_3b
 
     invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
 
@@ -4804,9 +4804,9 @@
 
     invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
 
-    goto :goto_2a
+    goto :goto_2b
 
-    :cond_3a
+    :cond_3b
     invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V
 
     return-void
diff -Npruw stock-framework/smali/android/net/wifi/WifiInfo.smali pdroid-framework/smali/android/net/wifi/WifiInfo.smali
--- stock-framework/smali/android/net/wifi/WifiInfo.smali	2014-01-02 21:10:19.208311281 -0600
+++ pdroid-framework/smali/android/net/wifi/WifiInfo.smali	2014-01-02 21:10:34.808310872 -0600
@@ -265,6 +265,44 @@
     return-void
 .end method
 
+.method public constructor <init>(Z)V
+    .registers 4
+
+    const/4 v1, -0x1
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const-string v0, ""
+
+    invoke-static {v0}, Landroid/net/wifi/WifiSsid;->createFromAsciiEncoded(Ljava/lang/String;)Landroid/net/wifi/WifiSsid;
+
+    move-result-object v0
+
+    iput-object v0, p0, Landroid/net/wifi/WifiInfo;->mWifiSsid:Landroid/net/wifi/WifiSsid;
+
+    const-string v0, ""
+
+    iput-object v0, p0, Landroid/net/wifi/WifiInfo;->mBSSID:Ljava/lang/String;
+
+    iput v1, p0, Landroid/net/wifi/WifiInfo;->mNetworkId:I
+
+    sget-object v0, Landroid/net/wifi/SupplicantState;->UNINITIALIZED:Landroid/net/wifi/SupplicantState;
+
+    iput-object v0, p0, Landroid/net/wifi/WifiInfo;->mSupplicantState:Landroid/net/wifi/SupplicantState;
+
+    const/16 v0, -0x270f
+
+    iput v0, p0, Landroid/net/wifi/WifiInfo;->mRssi:I
+
+    iput v1, p0, Landroid/net/wifi/WifiInfo;->mLinkSpeed:I
+
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Landroid/net/wifi/WifiInfo;->mHiddenSSID:Z
+
+    return-void
+.end method
+
 .method static synthetic access$002(Landroid/net/wifi/WifiInfo;Landroid/net/wifi/WifiSsid;)Landroid/net/wifi/WifiSsid;
     .registers 2
 
diff -Npruw stock-framework/smali/android/net/wifi/WifiStateMachine.smali pdroid-framework/smali/android/net/wifi/WifiStateMachine.smali
--- stock-framework/smali/android/net/wifi/WifiStateMachine.smali	2014-01-02 21:10:19.252311280 -0600
+++ pdroid-framework/smali/android/net/wifi/WifiStateMachine.smali	2014-01-02 21:10:34.848310871 -0600
@@ -6098,7 +6098,7 @@
 
     invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
-    const-string v1, "mLinkProperties "
+    const-string/jumbo v1, "mLinkProperties "
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
@@ -6186,7 +6186,7 @@
 
     invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
-    const-string v1, "mLastSignalLevel "
+    const-string/jumbo v1, "mLastSignalLevel "
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
@@ -6208,7 +6208,7 @@
 
     invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
-    const-string v1, "mLastBssid "
+    const-string/jumbo v1, "mLastBssid "
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
@@ -6230,7 +6230,7 @@
 
     invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
-    const-string v1, "mLastNetworkId "
+    const-string/jumbo v1, "mLastNetworkId "
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
diff -Npruw stock-framework/smali/android/net/wifi/WifiWatchdogStateMachine.smali pdroid-framework/smali/android/net/wifi/WifiWatchdogStateMachine.smali
--- stock-framework/smali/android/net/wifi/WifiWatchdogStateMachine.smali	2014-01-02 21:10:19.260311280 -0600
+++ pdroid-framework/smali/android/net/wifi/WifiWatchdogStateMachine.smali	2014-01-02 21:10:34.860310871 -0600
@@ -1684,7 +1684,7 @@
 
     invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
-    const-string v1, "mLinkProperties: ["
+    const-string/jumbo v1, "mLinkProperties: ["
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
diff -Npruw stock-framework/smali/android/os/SystemProperties.smali pdroid-framework/smali/android/os/SystemProperties.smali
--- stock-framework/smali/android/os/SystemProperties.smali	2014-01-02 21:10:19.472311274 -0600
+++ pdroid-framework/smali/android/os/SystemProperties.smali	2014-01-02 21:10:35.084310865 -0600
@@ -4,12 +4,28 @@
 
 
 # static fields
+.field private static final GOT_ERROR:I = -0x3
+
+.field private static final IS_ALLOWED:I = -0x1
+
+.field private static final IS_NOT_ALLOWED:I = -0x2
+
+.field private static final PRIVACY_TAG:Ljava/lang/String; = "SystemProperties"
+
 .field public static final PROP_NAME_MAX:I = 0x1f
 
 .field public static final PROP_VALUE_MAX:I = 0x5b
 
 .field public static final QCOM_HARDWARE:Z
 
+.field private static context:Landroid/content/Context;
+
+.field private static mPm:Landroid/content/pm/IPackageManager;
+
+.field private static pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+.field private static privacyMode:Z
+
 .field private static final sChangeCallbacks:Ljava/util/ArrayList;
     .annotation system Ldalvik/annotation/Signature;
         value = {
@@ -26,10 +42,10 @@
 .method static constructor <clinit>()V
     .registers 2
 
-    const-string v0, "com.qc.hardware"
-
     const/4 v1, 0x0
 
+    const-string v0, "com.qc.hardware"
+
     invoke-static {v0, v1}, Landroid/os/SystemProperties;->native_get_boolean(Ljava/lang/String;Z)Z
 
     move-result v0
@@ -42,6 +58,8 @@
 
     sput-object v0, Landroid/os/SystemProperties;->sChangeCallbacks:Ljava/util/ArrayList;
 
+    sput-boolean v1, Landroid/os/SystemProperties;->privacyMode:Z
+
     return-void
 .end method
 
@@ -154,6 +172,205 @@
     throw v2
 .end method
 
+.method private static checkIfPackagesAllowed()I
+    .registers 8
+
+    const/4 v5, -0x3
+
+    :try_start_1
+    sget-object v6, Landroid/os/SystemProperties;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v6, :cond_41
+
+    const/4 v2, 0x0
+
+    invoke-static {}, Landroid/os/SystemProperties;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v4
+
+    if-eqz v3, :cond_2c
+
+    const/4 v1, 0x0
+
+    :goto_11
+    array-length v6, v3
+
+    if-ge v1, v6, :cond_2a
+
+    sget-object v6, Landroid/os/SystemProperties;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v7, v3, v1
+
+    invoke-virtual {v6, v7, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_26
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v6
+
+    if-eqz v6, :cond_26
+
+    const/4 v5, -0x2
+
+    :goto_25
+    return v5
+
+    :cond_26
+    const/4 v2, 0x0
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_11
+
+    :cond_2a
+    const/4 v5, -0x1
+
+    goto :goto_25
+
+    :cond_2c
+    const-string v6, "SystemProperties"
+
+    const-string/jumbo v7, "return GOT_ERROR, because package_names are NULL"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_34
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_34} :catch_35
+
+    goto :goto_25
+
+    :catch_35
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v6, "SystemProperties"
+
+    const-string v7, "Got exception in checkIfPackagesAllowed"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_25
+
+    :cond_41
+    :try_start_41
+    const-string v6, "SystemProperties"
+
+    const-string/jumbo v7, "return GOT_ERROR, because pSetMan is NULL"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_49
+    .catch Ljava/lang/Exception; {:try_start_41 .. :try_end_49} :catch_35
+
+    goto :goto_25
+.end method
+
+.method private static dataAccess(Z)V
+    .registers 6
+
+    invoke-static {}, Landroid/os/SystemProperties;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v1
+
+    if-eqz p0, :cond_2f
+
+    if-eqz v1, :cond_2f
+
+    const/4 v0, 0x0
+
+    :goto_9
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_58
+
+    const-string v2, "SystemProperties"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Allowed Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing networkinfo."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_9
+
+    :cond_2f
+    if-eqz v1, :cond_58
+
+    const/4 v0, 0x0
+
+    :goto_32
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_58
+
+    const-string v2, "SystemProperties"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Blocked Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing networkinfo."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_32
+
+    :cond_58
+    return-void
+.end method
+
 .method public static get(Ljava/lang/String;)Ljava/lang/String;
     .registers 3
 
@@ -174,11 +391,53 @@
     throw v0
 
     :cond_10
+    const-string v0, "gsm.operator.alpha"
+
+    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_20
+
+    const-string v0, "gsm.operator.numeric"
+
+    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_35
+
+    :cond_20
+    invoke-static {}, Landroid/os/SystemProperties;->initiate()V
+
+    invoke-static {}, Landroid/os/SystemProperties;->checkIfPackagesAllowed()I
+
+    move-result v0
+
+    const/4 v1, -0x2
+
+    if-ne v0, v1, :cond_31
+
+    const/4 v0, 0x0
+
+    invoke-static {v0}, Landroid/os/SystemProperties;->dataAccess(Z)V
+
+    const-string v0, ""
+
+    :goto_30
+    return-object v0
+
+    :cond_31
+    const/4 v0, 0x1
+
+    invoke-static {v0}, Landroid/os/SystemProperties;->dataAccess(Z)V
+
+    :cond_35
     invoke-static {p0}, Landroid/os/SystemProperties;->native_get(Ljava/lang/String;)Ljava/lang/String;
 
     move-result-object v0
 
-    return-object v0
+    goto :goto_30
 .end method
 
 .method public static get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@@ -201,11 +460,53 @@
     throw v0
 
     :cond_10
+    const-string v0, "gsm.operator.alpha"
+
+    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_20
+
+    const-string v0, "gsm.operator.numeric"
+
+    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_35
+
+    :cond_20
+    invoke-static {}, Landroid/os/SystemProperties;->initiate()V
+
+    invoke-static {}, Landroid/os/SystemProperties;->checkIfPackagesAllowed()I
+
+    move-result v0
+
+    const/4 v1, -0x2
+
+    if-ne v0, v1, :cond_31
+
+    const/4 v0, 0x0
+
+    invoke-static {v0}, Landroid/os/SystemProperties;->dataAccess(Z)V
+
+    const-string v0, ""
+
+    :goto_30
+    return-object v0
+
+    :cond_31
+    const/4 v0, 0x1
+
+    invoke-static {v0}, Landroid/os/SystemProperties;->dataAccess(Z)V
+
+    :cond_35
     invoke-static {p0, p1}, Landroid/os/SystemProperties;->native_get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 
     move-result-object v0
 
-    return-object v0
+    goto :goto_30
 .end method
 
 .method public static getBoolean(Ljava/lang/String;Z)Z
@@ -388,6 +689,135 @@
     goto :goto_2c
 .end method
 
+.method private static getPackageName()[Ljava/lang/String;
+    .registers 5
+
+    :try_start_0
+    sget-object v3, Landroid/os/SystemProperties;->mPm:Landroid/content/pm/IPackageManager;
+
+    if-eqz v3, :cond_f
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    sget-object v3, Landroid/os/SystemProperties;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+
+    move-result-object v1
+
+    :goto_e
+    return-object v1
+
+    :cond_f
+    const-string/jumbo v3, "package"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    sput-object v3, Landroid/os/SystemProperties;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    sget-object v3, Landroid/os/SystemProperties;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+    :try_end_25
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_25} :catch_27
+
+    move-result-object v1
+
+    goto :goto_e
+
+    :catch_27
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v3, "SystemProperties"
+
+    const-string/jumbo v4, "something went wrong with getting package name"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    goto :goto_e
+.end method
+
+.method private static initiate()V
+    .registers 4
+
+    const/4 v1, 0x0
+
+    :try_start_1
+    sput-object v1, Landroid/os/SystemProperties;->context:Landroid/content/Context;
+
+    new-instance v1, Landroid/privacy/PrivacySettingsManager;
+
+    sget-object v2, Landroid/os/SystemProperties;->context:Landroid/content/Context;
+
+    const-string/jumbo v3, "privacy"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v3
+
+    invoke-direct {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    sput-object v1, Landroid/os/SystemProperties;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "package"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v1
+
+    sput-object v1, Landroid/os/SystemProperties;->mPm:Landroid/content/pm/IPackageManager;
+
+    const/4 v1, 0x1
+
+    sput-boolean v1, Landroid/os/SystemProperties;->privacyMode:Z
+    :try_end_27
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_27} :catch_28
+
+    :goto_27
+    return-void
+
+    :catch_28
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v1, "SystemProperties"
+
+    const-string v2, "Something went wrong with initalize variables"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    sput-boolean v1, Landroid/os/SystemProperties;->privacyMode:Z
+
+    goto :goto_27
+.end method
+
 .method private static native native_add_change_callback()V
 .end method
 
diff -Npruw stock-framework/smali/android/privacy/IPrivacySettingsManager.smali pdroid-framework/smali/android/privacy/IPrivacySettingsManager.smali
--- stock-framework/smali/android/privacy/IPrivacySettingsManager.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/IPrivacySettingsManager.smali	2014-01-02 21:10:35.184310862 -0600
@@ -0,0 +1,96 @@
+.class public interface abstract Landroid/privacy/IPrivacySettingsManager;
+.super Ljava/lang/Object;
+.source "IPrivacySettingsManager.java"
+
+# interfaces
+.implements Landroid/os/IInterface;
+
+
+# annotations
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/privacy/IPrivacySettingsManager$Stub;
+    }
+.end annotation
+
+
+# virtual methods
+.method public abstract addObserver(Ljava/lang/String;)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract deleteSettings(Ljava/lang/String;)Z
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract purgeSettings()Z
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract registerObservers()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract saveSettings(Landroid/privacy/PrivacySettings;)Z
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract setBootCompleted()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract setEnabled(Z)Z
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract setNotificationsEnabled(Z)Z
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
diff -Npruw stock-framework/smali/android/privacy/IPrivacySettingsManager$Stub$Proxy.smali pdroid-framework/smali/android/privacy/IPrivacySettingsManager$Stub$Proxy.smali
--- stock-framework/smali/android/privacy/IPrivacySettingsManager$Stub$Proxy.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/IPrivacySettingsManager$Stub$Proxy.smali	2014-01-02 21:10:35.184310862 -0600
@@ -0,0 +1,690 @@
+.class Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;
+.super Ljava/lang/Object;
+.source "IPrivacySettingsManager.java"
+
+# interfaces
+.implements Landroid/privacy/IPrivacySettingsManager;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/privacy/IPrivacySettingsManager$Stub;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0xa
+    name = "Proxy"
+.end annotation
+
+
+# instance fields
+.field private mRemote:Landroid/os/IBinder;
+
+
+# direct methods
+.method constructor <init>(Landroid/os/IBinder;)V
+    .registers 2
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    iput-object p1, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public addObserver(Ljava/lang/String;)V
+    .registers 7
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_8
+    const-string v2, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-object v2, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v3, 0x6
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_1a
+    .catchall {:try_start_8 .. :try_end_1a} :catchall_21
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    :catchall_21
+    move-exception v2
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v2
+.end method
+
+.method public asBinder()Landroid/os/IBinder;
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    return-object v0
+.end method
+
+.method public deleteSettings(Ljava/lang/String;)Z
+    .registers 8
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v2, 0x0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_9
+    const-string v3, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v3}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-object v3, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v4, 0x3
+
+    const/4 v5, 0x0
+
+    invoke-interface {v3, v4, v0, v1, v5}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
+    :try_end_1e
+    .catchall {:try_start_9 .. :try_end_1e} :catchall_29
+
+    move-result v3
+
+    if-eqz v3, :cond_22
+
+    const/4 v2, 0x1
+
+    :cond_22
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return v2
+
+    :catchall_29
+    move-exception v3
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v3
+.end method
+
+.method public getInterfaceDescriptor()Ljava/lang/String;
+    .registers 2
+
+    const-string v0, "android.privacy.IPrivacySettingsManager"
+
+    return-object v0
+.end method
+
+.method public getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+    .registers 8
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_8
+    const-string v3, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v3}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-object v3, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v4, 0x1
+
+    const/4 v5, 0x0
+
+    invoke-interface {v3, v4, v0, v1, v5}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v3
+
+    if-eqz v3, :cond_2f
+
+    sget-object v3, Landroid/privacy/PrivacySettings;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-interface {v3, v1}, Landroid/os/Parcelable$Creator;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/privacy/PrivacySettings;
+    :try_end_28
+    .catchall {:try_start_8 .. :try_end_28} :catchall_31
+
+    :goto_28
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object v2
+
+    :cond_2f
+    const/4 v2, 0x0
+
+    goto :goto_28
+
+    :catchall_31
+    move-exception v3
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v3
+.end method
+
+.method public notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    .registers 10
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_8
+    const-string v2, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    invoke-virtual {v0, p2}, Landroid/os/Parcel;->writeByte(B)V
+
+    invoke-virtual {v0, p3}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    invoke-virtual {v0, p4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-object v2, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v3, 0x4
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_23
+    .catchall {:try_start_8 .. :try_end_23} :catchall_2a
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    :catchall_2a
+    move-exception v2
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v2
+.end method
+
+.method public purgeSettings()Z
+    .registers 7
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v2, 0x0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_9
+    const-string v3, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v3}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    iget-object v3, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v4, 0x7
+
+    const/4 v5, 0x0
+
+    invoke-interface {v3, v4, v0, v1, v5}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
+    :try_end_1b
+    .catchall {:try_start_9 .. :try_end_1b} :catchall_26
+
+    move-result v3
+
+    if-eqz v3, :cond_1f
+
+    const/4 v2, 0x1
+
+    :cond_1f
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return v2
+
+    :catchall_26
+    move-exception v3
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v3
+.end method
+
+.method public registerObservers()V
+    .registers 6
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_8
+    const-string v2, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    iget-object v2, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v3, 0x5
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_17
+    .catchall {:try_start_8 .. :try_end_17} :catchall_1e
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    :catchall_1e
+    move-exception v2
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v2
+.end method
+
+.method public saveSettings(Landroid/privacy/PrivacySettings;)Z
+    .registers 9
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v2, 0x1
+
+    const/4 v3, 0x0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_a
+    const-string v4, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    if-eqz p1, :cond_30
+
+    const/4 v4, 0x1
+
+    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V
+
+    const/4 v4, 0x0
+
+    invoke-virtual {p1, v0, v4}, Landroid/privacy/PrivacySettings;->writeToParcel(Landroid/os/Parcel;I)V
+
+    :goto_19
+    iget-object v4, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v5, 0x2
+
+    const/4 v6, 0x0
+
+    invoke-interface {v4, v5, v0, v1, v6}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
+    :try_end_26
+    .catchall {:try_start_a .. :try_end_26} :catchall_35
+
+    move-result v4
+
+    if-eqz v4, :cond_3d
+
+    :goto_29
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return v2
+
+    :cond_30
+    const/4 v4, 0x0
+
+    :try_start_31
+    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V
+    :try_end_34
+    .catchall {:try_start_31 .. :try_end_34} :catchall_35
+
+    goto :goto_19
+
+    :catchall_35
+    move-exception v3
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v3
+
+    :cond_3d
+    move v2, v3
+
+    goto :goto_29
+.end method
+
+.method public setBootCompleted()V
+    .registers 6
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_8
+    const-string v2, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    iget-object v2, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v3, 0xa
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_18
+    .catchall {:try_start_8 .. :try_end_18} :catchall_1f
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    :catchall_1f
+    move-exception v2
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v2
+.end method
+
+.method public setEnabled(Z)Z
+    .registers 9
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v2, 0x1
+
+    const/4 v3, 0x0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_a
+    const-string v4, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    if-eqz p1, :cond_2d
+
+    move v4, v2
+
+    :goto_12
+    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V
+
+    iget-object v4, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v5, 0x8
+
+    const/4 v6, 0x0
+
+    invoke-interface {v4, v5, v0, v1, v6}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
+    :try_end_23
+    .catchall {:try_start_a .. :try_end_23} :catchall_31
+
+    move-result v4
+
+    if-eqz v4, :cond_2f
+
+    :goto_26
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return v2
+
+    :cond_2d
+    move v4, v3
+
+    goto :goto_12
+
+    :cond_2f
+    move v2, v3
+
+    goto :goto_26
+
+    :catchall_31
+    move-exception v3
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v3
+.end method
+
+.method public setNotificationsEnabled(Z)Z
+    .registers 9
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v2, 0x1
+
+    const/4 v3, 0x0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    :try_start_a
+    const-string v4, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    if-eqz p1, :cond_2d
+
+    move v4, v2
+
+    :goto_12
+    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V
+
+    iget-object v4, p0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v5, 0x9
+
+    const/4 v6, 0x0
+
+    invoke-interface {v4, v5, v0, v1, v6}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
+    :try_end_23
+    .catchall {:try_start_a .. :try_end_23} :catchall_31
+
+    move-result v4
+
+    if-eqz v4, :cond_2f
+
+    :goto_26
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return v2
+
+    :cond_2d
+    move v4, v3
+
+    goto :goto_12
+
+    :cond_2f
+    move v2, v3
+
+    goto :goto_26
+
+    :catchall_31
+    move-exception v3
+
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    throw v3
+.end method
diff -Npruw stock-framework/smali/android/privacy/IPrivacySettingsManager$Stub.smali pdroid-framework/smali/android/privacy/IPrivacySettingsManager$Stub.smali
--- stock-framework/smali/android/privacy/IPrivacySettingsManager$Stub.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/IPrivacySettingsManager$Stub.smali	2014-01-02 21:10:35.184310862 -0600
@@ -0,0 +1,392 @@
+.class public abstract Landroid/privacy/IPrivacySettingsManager$Stub;
+.super Landroid/os/Binder;
+.source "IPrivacySettingsManager.java"
+
+# interfaces
+.implements Landroid/privacy/IPrivacySettingsManager;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/privacy/IPrivacySettingsManager;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x409
+    name = "Stub"
+.end annotation
+
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;
+    }
+.end annotation
+
+
+# static fields
+.field private static final DESCRIPTOR:Ljava/lang/String; = "android.privacy.IPrivacySettingsManager"
+
+.field static final TRANSACTION_addObserver:I = 0x6
+
+.field static final TRANSACTION_deleteSettings:I = 0x3
+
+.field static final TRANSACTION_getSettings:I = 0x1
+
+.field static final TRANSACTION_notification:I = 0x4
+
+.field static final TRANSACTION_purgeSettings:I = 0x7
+
+.field static final TRANSACTION_registerObservers:I = 0x5
+
+.field static final TRANSACTION_saveSettings:I = 0x2
+
+.field static final TRANSACTION_setBootCompleted:I = 0xa
+
+.field static final TRANSACTION_setEnabled:I = 0x8
+
+.field static final TRANSACTION_setNotificationsEnabled:I = 0x9
+
+
+# direct methods
+.method public constructor <init>()V
+    .registers 2
+
+    invoke-direct {p0}, Landroid/os/Binder;-><init>()V
+
+    const-string v0, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p0, p0, v0}, Landroid/privacy/IPrivacySettingsManager$Stub;->attachInterface(Landroid/os/IInterface;Ljava/lang/String;)V
+
+    return-void
+.end method
+
+.method public static asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+    .registers 3
+
+    if-nez p0, :cond_4
+
+    const/4 v0, 0x0
+
+    :goto_3
+    return-object v0
+
+    :cond_4
+    const-string v1, "android.privacy.IPrivacySettingsManager"
+
+    invoke-interface {p0, v1}, Landroid/os/IBinder;->queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_13
+
+    instance-of v1, v0, Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v1, :cond_13
+
+    check-cast v0, Landroid/privacy/IPrivacySettingsManager;
+
+    goto :goto_3
+
+    :cond_13
+    new-instance v0, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;
+
+    invoke-direct {v0, p0}, Landroid/privacy/IPrivacySettingsManager$Stub$Proxy;-><init>(Landroid/os/IBinder;)V
+
+    goto :goto_3
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .registers 1
+
+    return-object p0
+.end method
+
+.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+    .registers 13
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x1
+
+    sparse-switch p1, :sswitch_data_fc
+
+    invoke-super {p0, p1, p2, p3, p4}, Landroid/os/Binder;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result v6
+
+    :goto_9
+    return v6
+
+    :sswitch_a
+    const-string v5, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p3, v5}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    goto :goto_9
+
+    :sswitch_10
+    const-string v7, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v7}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-virtual {p0, v0}, Landroid/privacy/IPrivacySettingsManager$Stub;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v4
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    if-eqz v4, :cond_29
+
+    invoke-virtual {p3, v6}, Landroid/os/Parcel;->writeInt(I)V
+
+    invoke-virtual {v4, p3, v6}, Landroid/privacy/PrivacySettings;->writeToParcel(Landroid/os/Parcel;I)V
+
+    goto :goto_9
+
+    :cond_29
+    invoke-virtual {p3, v5}, Landroid/os/Parcel;->writeInt(I)V
+
+    goto :goto_9
+
+    :sswitch_2d
+    const-string v7, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v7}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readInt()I
+
+    move-result v7
+
+    if-eqz v7, :cond_4e
+
+    sget-object v7, Landroid/privacy/PrivacySettings;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-interface {v7, p2}, Landroid/os/Parcelable$Creator;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Landroid/privacy/PrivacySettings;
+
+    :goto_40
+    invoke-virtual {p0, v0}, Landroid/privacy/IPrivacySettingsManager$Stub;->saveSettings(Landroid/privacy/PrivacySettings;)Z
+
+    move-result v4
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    if-eqz v4, :cond_4a
+
+    move v5, v6
+
+    :cond_4a
+    invoke-virtual {p3, v5}, Landroid/os/Parcel;->writeInt(I)V
+
+    goto :goto_9
+
+    :cond_4e
+    const/4 v0, 0x0
+
+    goto :goto_40
+
+    :sswitch_50
+    const-string v7, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v7}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-virtual {p0, v0}, Landroid/privacy/IPrivacySettingsManager$Stub;->deleteSettings(Ljava/lang/String;)Z
+
+    move-result v4
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    if-eqz v4, :cond_63
+
+    move v5, v6
+
+    :cond_63
+    invoke-virtual {p3, v5}, Landroid/os/Parcel;->writeInt(I)V
+
+    goto :goto_9
+
+    :sswitch_67
+    const-string v5, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v5}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {p0, v0, v1, v2, v3}, Landroid/privacy/IPrivacySettingsManager$Stub;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_9
+
+    :sswitch_83
+    const-string v5, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v5}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p0}, Landroid/privacy/IPrivacySettingsManager$Stub;->registerObservers()V
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_9
+
+    :sswitch_90
+    const-string v5, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v5}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-virtual {p0, v0}, Landroid/privacy/IPrivacySettingsManager$Stub;->addObserver(Ljava/lang/String;)V
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_9
+
+    :sswitch_a1
+    const-string v7, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v7}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p0}, Landroid/privacy/IPrivacySettingsManager$Stub;->purgeSettings()Z
+
+    move-result v4
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    if-eqz v4, :cond_b0
+
+    move v5, v6
+
+    :cond_b0
+    invoke-virtual {p3, v5}, Landroid/os/Parcel;->writeInt(I)V
+
+    goto/16 :goto_9
+
+    :sswitch_b5
+    const-string v7, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v7}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readInt()I
+
+    move-result v7
+
+    if-eqz v7, :cond_d0
+
+    move v0, v6
+
+    :goto_c1
+    invoke-virtual {p0, v0}, Landroid/privacy/IPrivacySettingsManager$Stub;->setEnabled(Z)Z
+
+    move-result v4
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    if-eqz v4, :cond_cb
+
+    move v5, v6
+
+    :cond_cb
+    invoke-virtual {p3, v5}, Landroid/os/Parcel;->writeInt(I)V
+
+    goto/16 :goto_9
+
+    :cond_d0
+    move v0, v5
+
+    goto :goto_c1
+
+    :sswitch_d2
+    const-string v7, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v7}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Landroid/os/Parcel;->readInt()I
+
+    move-result v7
+
+    if-eqz v7, :cond_ed
+
+    move v0, v6
+
+    :goto_de
+    invoke-virtual {p0, v0}, Landroid/privacy/IPrivacySettingsManager$Stub;->setNotificationsEnabled(Z)Z
+
+    move-result v4
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    if-eqz v4, :cond_e8
+
+    move v5, v6
+
+    :cond_e8
+    invoke-virtual {p3, v5}, Landroid/os/Parcel;->writeInt(I)V
+
+    goto/16 :goto_9
+
+    :cond_ed
+    move v0, v5
+
+    goto :goto_de
+
+    :sswitch_ef
+    const-string v5, "android.privacy.IPrivacySettingsManager"
+
+    invoke-virtual {p2, v5}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    invoke-virtual {p0}, Landroid/privacy/IPrivacySettingsManager$Stub;->setBootCompleted()V
+
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_9
+
+    :sswitch_data_fc
+    .sparse-switch
+        0x1 -> :sswitch_10
+        0x2 -> :sswitch_2d
+        0x3 -> :sswitch_50
+        0x4 -> :sswitch_67
+        0x5 -> :sswitch_83
+        0x6 -> :sswitch_90
+        0x7 -> :sswitch_a1
+        0x8 -> :sswitch_b5
+        0x9 -> :sswitch_d2
+        0xa -> :sswitch_ef
+        0x5f4e5446 -> :sswitch_a
+    .end sparse-switch
+.end method
diff -Npruw stock-framework/smali/android/privacy/PrivacyFileObserver.smali pdroid-framework/smali/android/privacy/PrivacyFileObserver.smali
--- stock-framework/smali/android/privacy/PrivacyFileObserver.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/PrivacyFileObserver.smali	2014-01-02 21:10:35.184310862 -0600
@@ -0,0 +1,272 @@
+.class public final Landroid/privacy/PrivacyFileObserver;
+.super Landroid/os/FileObserver;
+.source "PrivacyFileObserver.java"
+
+
+# static fields
+.field public static final PACKAGE_PATH_INDEX:I = 0x3
+
+.field public static final SETTINGS_TYPE_INDEX:I = 0x4
+
+.field public static final TAG:Ljava/lang/String; = "PrivacyFileObserver"
+
+
+# instance fields
+.field public absolutePath:Ljava/lang/String;
+
+.field public children:Ljava/util/HashMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashMap",
+            "<",
+            "Ljava/lang/String;",
+            "Landroid/privacy/PrivacyFileObserver;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field private pSetManServ:Landroid/privacy/PrivacySettingsManagerService;
+
+
+# direct methods
+.method public constructor <init>(Ljava/lang/String;Landroid/privacy/PrivacySettingsManagerService;)V
+    .registers 12
+
+    const/16 v8, 0xfff
+
+    invoke-direct {p0, p1, v8}, Landroid/os/FileObserver;-><init>(Ljava/lang/String;I)V
+
+    iput-object p1, p0, Landroid/privacy/PrivacyFileObserver;->absolutePath:Ljava/lang/String;
+
+    iput-object p2, p0, Landroid/privacy/PrivacyFileObserver;->pSetManServ:Landroid/privacy/PrivacySettingsManagerService;
+
+    new-instance v8, Ljava/util/HashMap;
+
+    invoke-direct {v8}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v8, p0, Landroid/privacy/PrivacyFileObserver;->children:Ljava/util/HashMap;
+
+    new-instance v7, Ljava/io/File;
+
+    iget-object v8, p0, Landroid/privacy/PrivacyFileObserver;->absolutePath:Ljava/lang/String;
+
+    invoke-direct {v7, v8}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v7}, Ljava/io/File;->isDirectory()Z
+
+    move-result v8
+
+    if-eqz v8, :cond_42
+
+    invoke-virtual {v7}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v6
+
+    move-object v0, v6
+
+    array-length v4, v0
+
+    const/4 v3, 0x0
+
+    :goto_24
+    if-ge v3, v4, :cond_42
+
+    aget-object v2, v0, v3
+
+    invoke-virtual {v2}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;
+
+    move-result-object v5
+
+    new-instance v1, Landroid/privacy/PrivacyFileObserver;
+
+    invoke-direct {v1, v5, p2}, Landroid/privacy/PrivacyFileObserver;-><init>(Ljava/lang/String;Landroid/privacy/PrivacySettingsManagerService;)V
+
+    iget-object v8, p0, Landroid/privacy/PrivacyFileObserver;->children:Ljava/util/HashMap;
+
+    invoke-virtual {v8, v5, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    invoke-virtual {v2}, Ljava/io/File;->isFile()Z
+
+    move-result v8
+
+    if-eqz v8, :cond_3f
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacyFileObserver;->startWatching()V
+
+    :cond_3f
+    add-int/lit8 v3, v3, 0x1
+
+    goto :goto_24
+
+    :cond_42
+    return-void
+.end method
+
+
+# virtual methods
+.method public addObserver(Ljava/lang/String;)V
+    .registers 6
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    iget-object v3, p0, Landroid/privacy/PrivacyFileObserver;->absolutePath:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "/"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iget-object v2, p0, Landroid/privacy/PrivacyFileObserver;->children:Ljava/util/HashMap;
+
+    invoke-virtual {v2, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    new-instance v0, Landroid/privacy/PrivacyFileObserver;
+
+    iget-object v2, p0, Landroid/privacy/PrivacyFileObserver;->pSetManServ:Landroid/privacy/PrivacySettingsManagerService;
+
+    invoke-direct {v0, v1, v2}, Landroid/privacy/PrivacyFileObserver;-><init>(Ljava/lang/String;Landroid/privacy/PrivacySettingsManagerService;)V
+
+    iget-object v2, p0, Landroid/privacy/PrivacyFileObserver;->children:Ljava/util/HashMap;
+
+    invoke-virtual {v2, v1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    return-void
+.end method
+
+.method public onEvent(ILjava/lang/String;)V
+    .registers 12
+
+    and-int/lit8 v5, p1, 0x1
+
+    if-eqz v5, :cond_48
+
+    new-instance v4, Ljava/util/StringTokenizer;
+
+    iget-object v5, p0, Landroid/privacy/PrivacyFileObserver;->absolutePath:Ljava/lang/String;
+
+    const-string v6, "/"
+
+    invoke-direct {v4, v5, v6}, Ljava/util/StringTokenizer;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    const/4 v0, 0x0
+
+    :goto_e
+    const/4 v5, 0x3
+
+    if-ge v0, v5, :cond_1d
+
+    invoke-virtual {v4}, Ljava/util/StringTokenizer;->hasMoreElements()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_1d
+
+    invoke-virtual {v4}, Ljava/util/StringTokenizer;->nextToken()Ljava/lang/String;
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_e
+
+    :cond_1d
+    invoke-virtual {v4}, Ljava/util/StringTokenizer;->nextToken()Ljava/lang/String;
+
+    move-result-object v2
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v4}, Ljava/util/StringTokenizer;->hasMoreElements()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_2c
+
+    invoke-virtual {v4}, Ljava/util/StringTokenizer;->nextToken()Ljava/lang/String;
+
+    move-result-object v3
+
+    :cond_2c
+    if-eqz v3, :cond_49
+
+    :try_start_2e
+    const-string v5, "ipTableProtectSetting"
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_49
+
+    iget-object v5, p0, Landroid/privacy/PrivacyFileObserver;->pSetManServ:Landroid/privacy/PrivacySettingsManagerService;
+
+    invoke-virtual {v5, v2}, Landroid/privacy/PrivacySettingsManagerService;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v1
+
+    iget-object v5, p0, Landroid/privacy/PrivacyFileObserver;->pSetManServ:Landroid/privacy/PrivacySettingsManagerService;
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getIpTableProtectSetting()B
+
+    move-result v6
+
+    const-string v7, "iptables"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v5, v2, v6, v7, v8}, Landroid/privacy/PrivacySettingsManagerService;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    :cond_48
+    :goto_48
+    return-void
+
+    :cond_49
+    iget-object v5, p0, Landroid/privacy/PrivacyFileObserver;->pSetManServ:Landroid/privacy/PrivacySettingsManagerService;
+
+    invoke-virtual {v5, v2}, Landroid/privacy/PrivacySettingsManagerService;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v1
+
+    iget-object v5, p0, Landroid/privacy/PrivacyFileObserver;->pSetManServ:Landroid/privacy/PrivacySettingsManagerService;
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getSystemLogsSetting()B
+
+    move-result v6
+
+    const-string/jumbo v7, "systemLogs"
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v5, v2, v6, v7, v8}, Landroid/privacy/PrivacySettingsManagerService;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    :try_end_5c
+    .catch Ljava/lang/Exception; {:try_start_2e .. :try_end_5c} :catch_5d
+
+    goto :goto_48
+
+    :catch_5d
+    move-exception v5
+
+    goto :goto_48
+.end method
+
+.method public startWatching()V
+    .registers 1
+
+    invoke-super {p0}, Landroid/os/FileObserver;->startWatching()V
+
+    return-void
+.end method
diff -Npruw stock-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali pdroid-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali
--- stock-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali	2014-01-02 21:10:35.188310862 -0600
@@ -0,0 +1,5140 @@
+.class public final Landroid/privacy/PrivacyPersistenceAdapter;
+.super Ljava/lang/Object;
+.source "PrivacyPersistenceAdapter.java"
+
+
+# static fields
+.field private static final CREATE_TABLE_ALLOWED_CONTACTS:Ljava/lang/String; = "CREATE TABLE IF NOT EXISTS allowed_contacts ( settings_id, contact_id, PRIMARY KEY(settings_id, contact_id) );"
+
+.field private static final CREATE_TABLE_MAP:Ljava/lang/String; = "CREATE TABLE IF NOT EXISTS map ( name TEXT PRIMARY KEY, value TEXT );"
+
+.field private static final CREATE_TABLE_SETTINGS:Ljava/lang/String; = "CREATE TABLE IF NOT EXISTS settings (  _id INTEGER PRIMARY KEY AUTOINCREMENT,  packageName TEXT,  uid INTEGER,  deviceIdSetting INTEGER,  deviceId TEXT,  line1NumberSetting INTEGER,  line1Number TEXT,  locationGpsSetting INTEGER,  locationGpsLat TEXT,  locationGpsLon TEXT,  locationNetworkSetting INTEGER,  locationNetworkLat TEXT,  locationNetworkLon TEXT,  networkInfoSetting INTEGER,  simInfoSetting INTEGER,  simSerialNumberSetting INTEGER,  simSerialNumber TEXT,  subscriberIdSetting INTEGER,  subscriberId TEXT,  accountsSetting INTEGER,  accountsAuthTokensSetting INTEGER,  outgoingCallsSetting INTEGER,  incomingCallsSetting INTEGER,  contactsSetting INTEGER,  calendarSetting INTEGER,  mmsSetting INTEGER,  smsSetting INTEGER,  callLogSetting INTEGER,  bookmarksSetting INTEGER,  systemLogsSetting INTEGER,  externalStorageSetting INTEGER,  cameraSetting INTEGER,  recordAudioSetting INTEGER,  notificationSetting INTEGER,  intentBootCompletedSetting INTEGER, smsSendSetting INTEGER, phoneCallSetting INTEGER, ipTableProtectSetting INTEGER, iccAccessSetting INTEGER, addOnManagementSetting INTEGER, androidIdSetting INTEGER, androidId TEXT, wifiInfoSetting INTEGER, switchConnectivitySetting INTEGER, sendMmsSetting INTEGER, forceOnlineState INTEGER, switchWifiStateSetting INTEGER);"
+
+.field private static final DATABASE_FIELDS:[Ljava/lang/String; = null
+
+.field private static final DATABASE_FILE:Ljava/lang/String; = "/data/system/privacy.db"
+
+.field private static final DATABASE_VERSION:I = 0x4
+
+.field private static final DEFAULT_CACHE_ENTRIES:I = 0x14
+
+.field public static final DUMMY_UID:I = -0x1
+
+.field private static final INSERT_ENABLED:Ljava/lang/String; = "INSERT OR REPLACE INTO map (name, value) VALUES (\"enabled\", \"1\");"
+
+.field private static final INSERT_NOTIFICATIONS_ENABLED:Ljava/lang/String; = "INSERT OR REPLACE INTO map (name, value) VALUES (\"notifications_enabled\", \"1\");"
+
+.field private static final INSERT_VERSION:Ljava/lang/String; = "INSERT OR REPLACE INTO map (name, value) VALUES (\"db_version\", 4);"
+
+.field private static final LOG_CACHE:Z = false
+
+.field private static final LOG_LOCKING:Z = false
+
+.field private static final LOG_OPEN_AND_CLOSE:Z = false
+
+.field private static final MINIMUM_CACHE_ENTRIES:I = 0x0
+
+.field private static final RETRY_QUERY_COUNT:I = 0x5
+
+.field public static final SETTINGS_DIRECTORY:Ljava/lang/String; = "/data/system/privacy"
+
+.field public static final SETTING_DB_VERSION:Ljava/lang/String; = "db_version"
+
+.field public static final SETTING_ENABLED:Ljava/lang/String; = "enabled"
+
+.field public static final SETTING_NOTIFICATIONS_ENABLED:Ljava/lang/String; = "notifications_enabled"
+
+.field private static final TABLE_ALLOWED_CONTACTS:Ljava/lang/String; = "allowed_contacts"
+
+.field private static final TABLE_MAP:Ljava/lang/String; = "map"
+
+.field private static final TABLE_SETTINGS:Ljava/lang/String; = "settings"
+
+.field private static final TABLE_VERSION:Ljava/lang/String; = "version"
+
+.field private static final TAG:Ljava/lang/String; = "PrivacyPersistenceAdapter"
+
+.field public static final VALUE_FALSE:Ljava/lang/String; = "0"
+
+.field public static final VALUE_TRUE:Ljava/lang/String; = "1"
+
+.field private static final autoCloseDb:Z = false
+
+.field public static volatile sDbAccessThreads:Ljava/lang/Integer; = null
+
+.field private static sDbLock:Ljava/util/concurrent/locks/ReadWriteLock; = null
+
+.field public static volatile sDbVersion:I = 0x0
+
+.field private static settingsCache:Landroid/util/LruCache; = null
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/util/LruCache",
+            "<",
+            "Ljava/lang/String;",
+            "Landroid/privacy/PrivacySettingsStub;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field private static final useCache:Z = true
+
+
+# instance fields
+.field private mContext:Landroid/content/Context;
+
+.field private mDb:Landroid/database/sqlite/SQLiteDatabase;
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 4
+
+    const/16 v3, 0x14
+
+    const/4 v2, 0x0
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    new-instance v0, Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+
+    invoke-direct {v0}, Ljava/util/concurrent/locks/ReentrantReadWriteLock;-><init>()V
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    new-instance v0, Landroid/util/LruCache;
+
+    invoke-direct {v0, v3}, Landroid/util/LruCache;-><init>(I)V
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->settingsCache:Landroid/util/LruCache;
+
+    const/16 v0, 0x2f
+
+    new-array v0, v0, [Ljava/lang/String;
+
+    const-string v1, "_id"
+
+    aput-object v1, v0, v2
+
+    const/4 v1, 0x1
+
+    const-string/jumbo v2, "packageName"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x2
+
+    const-string/jumbo v2, "uid"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x3
+
+    const-string v2, "deviceIdSetting"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x4
+
+    const-string v2, "deviceId"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x5
+
+    const-string v2, "line1NumberSetting"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x6
+
+    const-string v2, "line1Number"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x7
+
+    const-string v2, "locationGpsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x8
+
+    const-string v2, "locationGpsLat"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x9
+
+    const-string v2, "locationGpsLon"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xa
+
+    const-string v2, "locationNetworkSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xb
+
+    const-string v2, "locationNetworkLat"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xc
+
+    const-string v2, "locationNetworkLon"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xd
+
+    const-string/jumbo v2, "networkInfoSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xe
+
+    const-string/jumbo v2, "simInfoSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xf
+
+    const-string/jumbo v2, "simSerialNumberSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x10
+
+    const-string/jumbo v2, "simSerialNumber"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x11
+
+    const-string/jumbo v2, "subscriberIdSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x12
+
+    const-string/jumbo v2, "subscriberId"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x13
+
+    const-string v2, "accountsSetting"
+
+    aput-object v2, v0, v1
+
+    const-string v1, "accountsAuthTokensSetting"
+
+    aput-object v1, v0, v3
+
+    const/16 v1, 0x15
+
+    const-string/jumbo v2, "outgoingCallsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x16
+
+    const-string v2, "incomingCallsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x17
+
+    const-string v2, "contactsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x18
+
+    const-string v2, "calendarSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x19
+
+    const-string/jumbo v2, "mmsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1a
+
+    const-string/jumbo v2, "smsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1b
+
+    const-string v2, "callLogSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1c
+
+    const-string v2, "bookmarksSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1d
+
+    const-string/jumbo v2, "systemLogsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1e
+
+    const-string v2, "externalStorageSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1f
+
+    const-string v2, "cameraSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x20
+
+    const-string/jumbo v2, "recordAudioSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x21
+
+    const-string/jumbo v2, "notificationSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x22
+
+    const-string v2, "intentBootCompletedSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x23
+
+    const-string/jumbo v2, "smsSendSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x24
+
+    const-string/jumbo v2, "phoneCallSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x25
+
+    const-string v2, "ipTableProtectSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x26
+
+    const-string v2, "iccAccessSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x27
+
+    const-string v2, "addOnManagementSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x28
+
+    const-string v2, "androidIdSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x29
+
+    const-string v2, "androidId"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2a
+
+    const-string/jumbo v2, "wifiInfoSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2b
+
+    const-string/jumbo v2, "switchConnectivitySetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2c
+
+    const-string/jumbo v2, "sendMmsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2d
+
+    const-string v2, "forceOnlineState"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2e
+
+    const-string/jumbo v2, "switchWifiStateSetting"
+
+    aput-object v2, v0, v1
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->DATABASE_FIELDS:[Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public constructor <init>(Landroid/content/Context;)V
+    .registers 4
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    iput-object p1, p0, Landroid/privacy/PrivacyPersistenceAdapter;->mContext:Landroid/content/Context;
+
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->canWrite()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_6c
+
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/privacy.db"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->exists()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_2c
+
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/privacy"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->exists()Z
+
+    move-result v0
+
+    if-nez v0, :cond_5e
+
+    :cond_2c
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v0
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->lock()V
+
+    :try_start_35
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/privacy.db"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->exists()Z
+
+    move-result v0
+
+    if-nez v0, :cond_45
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->createDatabase()V
+
+    :cond_45
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/privacy"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->exists()Z
+
+    move-result v0
+
+    if-nez v0, :cond_55
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->createSettingsDir()V
+    :try_end_55
+    .catchall {:try_start_35 .. :try_end_55} :catchall_6d
+
+    :cond_55
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v0
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    :cond_5e
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDbVersion()I
+
+    move-result v0
+
+    sput v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbVersion:I
+
+    sget v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbVersion:I
+
+    const/4 v1, 0x4
+
+    if-ge v0, v1, :cond_6c
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->upgradeDatabase()V
+
+    :cond_6c
+    return-void
+
+    :catchall_6d
+    move-exception v0
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    throw v0
+.end method
+
+.method private closeIdleDatabase()V
+    .registers 3
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-enter v1
+
+    :try_start_3
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v0
+
+    add-int/lit8 v0, v0, -0x1
+
+    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v0
+
+    if-nez v0, :cond_27
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->mDb:Landroid/database/sqlite/SQLiteDatabase;
+
+    if-eqz v0, :cond_27
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->mDb:Landroid/database/sqlite/SQLiteDatabase;
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_27
+
+    :cond_27
+    monitor-exit v1
+
+    return-void
+
+    :catchall_29
+    move-exception v0
+
+    monitor-exit v1
+    :try_end_2b
+    .catchall {:try_start_3 .. :try_end_2b} :catchall_29
+
+    throw v0
+.end method
+
+.method private createDatabase()V
+    .registers 6
+
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v3, "createDatabase - creating privacy database file"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    :try_start_7
+    const-string v2, "/data/system/privacy.db"
+
+    const/4 v3, 0x0
+
+    const/high16 v4, 0x1000
+
+    invoke-static {v2, v3, v4}, Landroid/database/sqlite/SQLiteDatabase;->openDatabase(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v3, "createDatabase - creating privacy database"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const-string v2, "CREATE TABLE IF NOT EXISTS settings (  _id INTEGER PRIMARY KEY AUTOINCREMENT,  packageName TEXT,  uid INTEGER,  deviceIdSetting INTEGER,  deviceId TEXT,  line1NumberSetting INTEGER,  line1Number TEXT,  locationGpsSetting INTEGER,  locationGpsLat TEXT,  locationGpsLon TEXT,  locationNetworkSetting INTEGER,  locationNetworkLat TEXT,  locationNetworkLon TEXT,  networkInfoSetting INTEGER,  simInfoSetting INTEGER,  simSerialNumberSetting INTEGER,  simSerialNumber TEXT,  subscriberIdSetting INTEGER,  subscriberId TEXT,  accountsSetting INTEGER,  accountsAuthTokensSetting INTEGER,  outgoingCallsSetting INTEGER,  incomingCallsSetting INTEGER,  contactsSetting INTEGER,  calendarSetting INTEGER,  mmsSetting INTEGER,  smsSetting INTEGER,  callLogSetting INTEGER,  bookmarksSetting INTEGER,  systemLogsSetting INTEGER,  externalStorageSetting INTEGER,  cameraSetting INTEGER,  recordAudioSetting INTEGER,  notificationSetting INTEGER,  intentBootCompletedSetting INTEGER, smsSendSetting INTEGER, phoneCallSetting INTEGER, ipTableProtectSetting INTEGER, iccAccessSetting INTEGER, addOnManagementSetting INTEGER, androidIdSetting INTEGER, androidId TEXT, wifiInfoSetting INTEGER, switchConnectivitySetting INTEGER, sendMmsSetting INTEGER, forceOnlineState INTEGER, switchWifiStateSetting INTEGER);"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "CREATE TABLE IF NOT EXISTS allowed_contacts ( settings_id, contact_id, PRIMARY KEY(settings_id, contact_id) );"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "CREATE TABLE IF NOT EXISTS map ( name TEXT PRIMARY KEY, value TEXT );"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "INSERT OR REPLACE INTO map (name, value) VALUES (\"db_version\", 4);"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "INSERT OR REPLACE INTO map (name, value) VALUES (\"enabled\", \"1\");"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "INSERT OR REPLACE INTO map (name, value) VALUES (\"notifications_enabled\", \"1\");"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    if-eqz v0, :cond_40
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_40
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_40
+    .catch Landroid/database/SQLException; {:try_start_7 .. :try_end_40} :catch_41
+
+    :cond_40
+    :goto_40
+    return-void
+
+    :catch_41
+    move-exception v1
+
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v3, "createDatabase - failed to create privacy database"
+
+    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_40
+.end method
+
+.method private createSettingsDir()V
+    .registers 5
+
+    const/4 v3, 0x1
+
+    const/4 v2, 0x0
+
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/privacy/"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->mkdirs()Z
+
+    invoke-virtual {v0, v3, v2}, Ljava/io/File;->setReadable(ZZ)Z
+
+    invoke-virtual {v0, v3, v2}, Ljava/io/File;->setExecutable(ZZ)Z
+
+    return-void
+.end method
+
+.method private deleteRecursive(Ljava/io/File;)V
+    .registers 7
+
+    invoke-virtual {p1}, Ljava/io/File;->isDirectory()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_16
+
+    invoke-virtual {p1}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v0
+
+    array-length v3, v0
+
+    const/4 v2, 0x0
+
+    :goto_c
+    if-ge v2, v3, :cond_16
+
+    aget-object v1, v0, v2
+
+    invoke-direct {p0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteRecursive(Ljava/io/File;)V
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_c
+
+    :cond_16
+    invoke-virtual {p1}, Ljava/io/File;->delete()Z
+
+    return-void
+.end method
+
+.method private declared-synchronized getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->mDb:Landroid/database/sqlite/SQLiteDatabase;
+
+    if-eqz v0, :cond_15
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->mDb:Landroid/database/sqlite/SQLiteDatabase;
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_15
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->mDb:Landroid/database/sqlite/SQLiteDatabase;
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isReadOnly()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_1f
+
+    :cond_15
+    const-string v0, "/data/system/privacy.db"
+
+    const/4 v1, 0x0
+
+    const/4 v2, 0x0
+
+    invoke-static {v0, v1, v2}, Landroid/database/sqlite/SQLiteDatabase;->openDatabase(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    iput-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->mDb:Landroid/database/sqlite/SQLiteDatabase;
+
+    :cond_1f
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->mDb:Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_21
+    .catchall {:try_start_1 .. :try_end_21} :catchall_23
+
+    monitor-exit p0
+
+    return-object v0
+
+    :catchall_23
+    move-exception v0
+
+    monitor-exit p0
+
+    throw v0
+.end method
+
+.method private getDbVersion()I
+    .registers 6
+
+    const/4 v2, 0x1
+
+    const-string v3, "db_version"
+
+    invoke-virtual {p0, v3}, Landroid/privacy/PrivacyPersistenceAdapter;->getValue(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v1
+
+    if-nez v1, :cond_11
+
+    const-string v3, "PrivacyPersistenceAdapter"
+
+    const-string v4, "PrivacyPersistenceAdapter:getDbVersion: getValue returned null; assuming version = 1"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    :goto_10
+    return v2
+
+    :cond_11
+    :try_start_11
+    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
+    :try_end_14
+    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_14} :catch_16
+
+    move-result v2
+
+    goto :goto_10
+
+    :catch_16
+    move-exception v0
+
+    const-string v3, "PrivacyPersistenceAdapter"
+
+    const-string v4, "PrivacyPersistenceAdapter:getDbVersion: failed to parse database version; returning 1"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_10
+.end method
+
+.method private query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+    .registers 16
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/Exception;
+        }
+    .end annotation
+
+    const/4 v0, 0x0
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x0
+
+    :goto_3
+    if-nez v3, :cond_27
+
+    const/4 v4, 0x5
+
+    if-ge v2, v4, :cond_27
+
+    if-eqz v0, :cond_d
+
+    :try_start_a
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    :cond_d
+    invoke-virtual/range {p1 .. p9}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+    :try_end_10
+    .catch Ljava/lang/IllegalStateException; {:try_start_a .. :try_end_10} :catch_15
+
+    move-result-object v0
+
+    const/4 v3, 0x1
+
+    :goto_12
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_3
+
+    :catch_15
+    move-exception v1
+
+    const/4 v3, 0x0
+
+    if-eqz p1, :cond_22
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_22
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_22
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object p1
+
+    goto :goto_12
+
+    :cond_27
+    if-nez v3, :cond_32
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "query - failed to execute query on the DB"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_32
+    return-object v0
+.end method
+
+.method private rawQuery(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Landroid/database/Cursor;
+    .registers 9
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/Exception;
+        }
+    .end annotation
+
+    const/4 v0, 0x0
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x0
+
+    :goto_3
+    if-nez v3, :cond_28
+
+    const/4 v4, 0x5
+
+    if-ge v2, v4, :cond_28
+
+    if-eqz v0, :cond_d
+
+    :try_start_a
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    :cond_d
+    const/4 v4, 0x0
+
+    invoke-virtual {p1, p2, v4}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;
+    :try_end_11
+    .catch Ljava/lang/IllegalStateException; {:try_start_a .. :try_end_11} :catch_16
+
+    move-result-object v0
+
+    const/4 v3, 0x1
+
+    :goto_13
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_3
+
+    :catch_16
+    move-exception v1
+
+    const/4 v3, 0x0
+
+    if-eqz p1, :cond_23
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_23
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_23
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object p1
+
+    goto :goto_13
+
+    :cond_28
+    if-nez v3, :cond_33
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "query - failed to execute query on the DB"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_33
+    return-object v0
+.end method
+
+.method private upgradeDatabase()V
+    .registers 18
+
+    sget v14, Landroid/privacy/PrivacyPersistenceAdapter;->sDbVersion:I
+
+    const/4 v15, 0x4
+
+    if-ge v14, v15, :cond_31
+
+    const-string v14, "PrivacyPersistenceAdapter"
+
+    new-instance v15, Ljava/lang/StringBuilder;
+
+    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v16, "PrivacyPersistenceAdapter:upgradeDatabase - upgrading DB from version "
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    sget v16, Landroid/privacy/PrivacyPersistenceAdapter;->sDbVersion:I
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const-string v16, " to "
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    const/16 v16, 0x4
+
+    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v15
+
+    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v15
+
+    invoke-static {v14, v15}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v3, 0x0
+
+    sget v14, Landroid/privacy/PrivacyPersistenceAdapter;->sDbVersion:I
+
+    packed-switch v14, :pswitch_data_12c
+
+    :cond_31
+    :goto_31
+    return-void
+
+    :pswitch_32
+    :try_start_32
+    sget-object v15, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-enter v15
+    :try_end_35
+    .catchall {:try_start_32 .. :try_end_35} :catchall_11e
+    .catch Landroid/database/SQLException; {:try_start_32 .. :try_end_35} :catch_e6
+
+    :try_start_35
+    sget-object v14, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    sget-object v14, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v14}, Ljava/lang/Integer;->intValue()I
+
+    move-result v14
+
+    add-int/lit8 v14, v14, 0x1
+
+    invoke-static {v14}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v14
+
+    sput-object v14, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-exit v15
+    :try_end_46
+    .catchall {:try_start_35 .. :try_end_46} :catchall_e3
+
+    :try_start_46
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_109
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v14
+
+    if-eqz v14, :cond_109
+
+    sget-object v14, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v14}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v14
+
+    invoke-interface {v14}, Ljava/util/concurrent/locks/Lock;->lock()V
+    :try_end_5b
+    .catchall {:try_start_46 .. :try_end_5b} :catchall_11e
+    .catch Landroid/database/SQLException; {:try_start_46 .. :try_end_5b} :catch_e6
+
+    :try_start_5b
+    sget v14, Landroid/privacy/PrivacyPersistenceAdapter;->sDbVersion:I
+
+    const/4 v15, 0x4
+
+    if-ge v14, v15, :cond_100
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+    :try_end_63
+    .catchall {:try_start_5b .. :try_end_63} :catchall_113
+
+    :try_start_63
+    const-string v14, "DROP TABLE IF EXISTS version;"
+
+    invoke-virtual {v3, v14}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v14, "CREATE TABLE IF NOT EXISTS allowed_contacts ( settings_id, contact_id, PRIMARY KEY(settings_id, contact_id) );"
+
+    invoke-virtual {v3, v14}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v14, "CREATE TABLE IF NOT EXISTS map ( name TEXT PRIMARY KEY, value TEXT );"
+
+    invoke-virtual {v3, v14}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v14, "INSERT OR REPLACE INTO map (name, value) VALUES (\"db_version\", 4);"
+
+    invoke-virtual {v3, v14}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v14, "INSERT OR REPLACE INTO map (name, value) VALUES (\"enabled\", \"1\");"
+
+    invoke-virtual {v3, v14}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v14, "INSERT OR REPLACE INTO map (name, value) VALUES (\"notifications_enabled\", \"1\");"
+
+    invoke-virtual {v3, v14}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    invoke-virtual/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->purgeSettings()Z
+
+    new-instance v11, Ljava/io/File;
+
+    const-string v14, "/data/system/privacy"
+
+    invoke-direct {v11, v14}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v11}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v1
+
+    array-length v7, v1
+
+    const/4 v5, 0x0
+
+    move v6, v5
+
+    :goto_92
+    if-ge v6, v7, :cond_f7
+
+    aget-object v10, v1, v6
+
+    invoke-virtual {v10}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v2
+
+    array-length v8, v2
+
+    const/4 v5, 0x0
+
+    :goto_9c
+    if-ge v5, v8, :cond_f3
+
+    aget-object v13, v2, v5
+
+    invoke-virtual {v13}, Ljava/io/File;->isDirectory()Z
+
+    move-result v14
+
+    if-eqz v14, :cond_e0
+
+    invoke-virtual {v13}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v12
+
+    const/4 v14, 0x0
+
+    aget-object v14, v12, v14
+
+    if-eqz v14, :cond_e0
+
+    new-instance v9, Ljava/io/File;
+
+    new-instance v14, Ljava/lang/StringBuilder;
+
+    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v14, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v14
+
+    const-string v15, "/"
+
+    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v14
+
+    const/4 v15, 0x0
+
+    aget-object v15, v12, v15
+
+    invoke-virtual {v15}, Ljava/io/File;->getName()Ljava/lang/String;
+
+    move-result-object v15
+
+    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v14
+
+    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v14
+
+    invoke-direct {v9, v14}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v9}, Ljava/io/File;->delete()Z
+
+    const/4 v14, 0x0
+
+    aget-object v14, v12, v14
+
+    invoke-virtual {v14, v9}, Ljava/io/File;->renameTo(Ljava/io/File;)Z
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v13}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteRecursive(Ljava/io/File;)V
+    :try_end_e0
+    .catchall {:try_start_63 .. :try_end_e0} :catchall_10e
+
+    :cond_e0
+    add-int/lit8 v5, v5, 0x1
+
+    goto :goto_9c
+
+    :catchall_e3
+    move-exception v14
+
+    :try_start_e4
+    monitor-exit v15
+    :try_end_e5
+    .catchall {:try_start_e4 .. :try_end_e5} :catchall_e3
+
+    :try_start_e5
+    throw v14
+    :try_end_e6
+    .catchall {:try_start_e5 .. :try_end_e6} :catchall_11e
+    .catch Landroid/database/SQLException; {:try_start_e5 .. :try_end_e6} :catch_e6
+
+    :catch_e6
+    move-exception v4
+
+    :try_start_e7
+    const-string v14, "PrivacyPersistenceAdapter"
+
+    const-string v15, "PrivacyPersistenceAdapter:upgradeDatabase: SQLException occurred performing database upgrade"
+
+    invoke-static {v14, v15, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_ee
+    .catchall {:try_start_e7 .. :try_end_ee} :catchall_11e
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    goto/16 :goto_31
+
+    :cond_f3
+    add-int/lit8 v5, v6, 0x1
+
+    move v6, v5
+
+    goto :goto_92
+
+    :cond_f7
+    :try_start_f7
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+
+    const/4 v14, 0x4
+
+    sput v14, Landroid/privacy/PrivacyPersistenceAdapter;->sDbVersion:I
+    :try_end_fd
+    .catchall {:try_start_f7 .. :try_end_fd} :catchall_10e
+
+    :try_start_fd
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+    :try_end_100
+    .catchall {:try_start_fd .. :try_end_100} :catchall_113
+
+    :cond_100
+    :try_start_100
+    sget-object v14, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v14}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v14
+
+    invoke-interface {v14}, Ljava/util/concurrent/locks/Lock;->unlock()V
+    :try_end_109
+    .catchall {:try_start_100 .. :try_end_109} :catchall_11e
+    .catch Landroid/database/SQLException; {:try_start_100 .. :try_end_109} :catch_e6
+
+    :cond_109
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    goto/16 :goto_31
+
+    :catchall_10e
+    move-exception v14
+
+    :try_start_10f
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    throw v14
+    :try_end_113
+    .catchall {:try_start_10f .. :try_end_113} :catchall_113
+
+    :catchall_113
+    move-exception v14
+
+    :try_start_114
+    sget-object v15, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v15}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v15
+
+    invoke-interface {v15}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    throw v14
+    :try_end_11e
+    .catchall {:try_start_114 .. :try_end_11e} :catchall_11e
+    .catch Landroid/database/SQLException; {:try_start_114 .. :try_end_11e} :catch_e6
+
+    :catchall_11e
+    move-exception v14
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    throw v14
+
+    :pswitch_123
+    const-string v14, "PrivacyPersistenceAdapter"
+
+    const-string v15, "PrivacyPersistenceAdapter:upgradeDatabase: Database is already at the most recent version"
+
+    invoke-static {v14, v15}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_31
+
+    :pswitch_data_12c
+    .packed-switch 0x1
+        :pswitch_32
+        :pswitch_32
+        :pswitch_32
+        :pswitch_123
+    .end packed-switch
+.end method
+
+.method private writeExternalSettings(Ljava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)Z
+    .registers 12
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/Exception;
+        }
+    .end annotation
+
+    const/4 v7, 0x1
+
+    new-instance v2, Ljava/io/File;
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "/data/system/privacy/"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "/"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-direct {v2, v5}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    new-instance v3, Ljava/io/File;
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "/data/system/privacy/"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "/"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "/"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-direct {v3, v5}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    const/4 v1, 0x0
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v5}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v5
+
+    invoke-interface {v5}, Ljava/util/concurrent/locks/Lock;->lock()V
+
+    :try_start_51
+    invoke-virtual {v2}, Ljava/io/File;->mkdirs()Z
+
+    const/4 v5, 0x1
+
+    const/4 v6, 0x0
+
+    invoke-virtual {v2, v5, v6}, Ljava/io/File;->setReadable(ZZ)Z
+
+    const/4 v5, 0x1
+
+    const/4 v6, 0x0
+
+    invoke-virtual {v2, v5, v6}, Ljava/io/File;->setExecutable(ZZ)Z
+
+    invoke-virtual {v3}, Ljava/io/File;->createNewFile()Z
+
+    const/4 v5, 0x1
+
+    const/4 v6, 0x0
+
+    invoke-virtual {v3, v5, v6}, Ljava/io/File;->setReadable(ZZ)Z
+
+    new-instance v4, Ljava/io/OutputStreamWriter;
+
+    new-instance v5, Ljava/io/FileOutputStream;
+
+    invoke-direct {v5, v3}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
+
+    invoke-direct {v4, v5}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V
+
+    const-string/jumbo v5, "systemLogsSetting"
+
+    invoke-virtual {p1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_a4
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {p3}, Landroid/privacy/PrivacySettings;->getSystemLogsSetting()B
+
+    move-result v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ""
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v4, v5}, Ljava/io/OutputStreamWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;
+
+    :cond_93
+    :goto_93
+    invoke-virtual {v4}, Ljava/io/OutputStreamWriter;->flush()V
+
+    invoke-virtual {v4}, Ljava/io/OutputStreamWriter;->close()V
+    :try_end_99
+    .catchall {:try_start_51 .. :try_end_99} :catchall_d1
+    .catch Ljava/io/IOException; {:try_start_51 .. :try_end_99} :catch_c7
+
+    const/4 v1, 0x1
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v5}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v5
+
+    invoke-interface {v5}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    return v7
+
+    :cond_a4
+    :try_start_a4
+    const-string v5, "ipTableProtectSetting"
+
+    invoke-virtual {p1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_93
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {p3}, Landroid/privacy/PrivacySettings;->getIpTableProtectSetting()B
+
+    move-result v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ""
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v4, v5}, Ljava/io/OutputStreamWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;
+    :try_end_c6
+    .catchall {:try_start_a4 .. :try_end_c6} :catchall_d1
+    .catch Ljava/io/IOException; {:try_start_a4 .. :try_end_c6} :catch_c7
+
+    goto :goto_93
+
+    :catch_c7
+    move-exception v0
+
+    :try_start_c8
+    new-instance v5, Ljava/lang/Exception;
+
+    const-string/jumbo v6, "saveSettings - could not write settings to file"
+
+    invoke-direct {v5, v6, v0}, Ljava/lang/Exception;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+
+    throw v5
+    :try_end_d1
+    .catchall {:try_start_c8 .. :try_end_d1} :catchall_d1
+
+    :catchall_d1
+    move-exception v5
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v6}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v6
+
+    invoke-interface {v6}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    throw v5
+.end method
+
+
+# virtual methods
+.method public deleteSettings(Ljava/lang/String;)Z
+    .registers 16
+
+    const/4 v11, 0x1
+
+    const/4 v0, 0x0
+
+    :try_start_2
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-enter v2
+    :try_end_5
+    .catchall {:try_start_2 .. :try_end_5} :catchall_14d
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_2 .. :try_end_5} :catch_103
+    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_5} :catch_140
+
+    :try_start_5
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I
+
+    move-result v1
+
+    add-int/lit8 v1, v1, 0x1
+
+    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v1
+
+    sput-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-exit v2
+    :try_end_16
+    .catchall {:try_start_5 .. :try_end_16} :catchall_100
+
+    :try_start_16
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->lock()V
+    :try_end_23
+    .catchall {:try_start_16 .. :try_end_23} :catchall_14d
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_16 .. :try_end_23} :catch_103
+    .catch Ljava/lang/Exception; {:try_start_16 .. :try_end_23} :catch_140
+
+    :try_start_23
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+    :try_end_26
+    .catchall {:try_start_23 .. :try_end_26} :catchall_135
+
+    :try_start_26
+    const-string/jumbo v1, "settings"
+
+    const/4 v2, 0x1
+
+    new-array v2, v2, [Ljava/lang/String;
+
+    const/4 v3, 0x0
+
+    const-string v4, "_id"
+
+    aput-object v4, v2, v3
+
+    const-string/jumbo v3, "packageName=?"
+
+    const/4 v4, 0x1
+
+    new-array v4, v4, [Ljava/lang/String;
+
+    const/4 v5, 0x0
+
+    aput-object p1, v4, v5
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {v0 .. v7}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_110
+
+    invoke-interface {v8}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    if-lez v1, :cond_110
+
+    invoke-interface {v8}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_110
+
+    const/4 v1, 0x0
+
+    invoke-interface {v8, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v10
+
+    const-string v1, "allowed_contacts"
+
+    const-string/jumbo v2, "settings_id=?"
+
+    const/4 v3, 0x1
+
+    new-array v3, v3, [Ljava/lang/String;
+
+    const/4 v4, 0x0
+
+    invoke-static {v10}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    invoke-virtual {v0, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-interface {v8}, Landroid/database/Cursor;->close()V
+
+    :goto_69
+    const-string/jumbo v1, "settings"
+
+    const-string/jumbo v2, "packageName=?"
+
+    const/4 v3, 0x1
+
+    new-array v3, v3, [Ljava/lang/String;
+
+    const/4 v4, 0x0
+
+    aput-object p1, v3, v4
+
+    invoke-virtual {v0, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    move-result v1
+
+    if-nez v1, :cond_99
+
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "deleteSettings - database entry for "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " not found"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_99
+    new-instance v12, Ljava/io/File;
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "/data/system/privacy/"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "/"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-direct {v12, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    new-instance v13, Ljava/io/File;
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "/data/system/privacy/"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "/systemLogsSetting"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-direct {v13, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v13}, Ljava/io/File;->delete()Z
+
+    invoke-virtual {v12}, Ljava/io/File;->list()[Ljava/lang/String;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_e5
+
+    invoke-virtual {v12}, Ljava/io/File;->list()[Ljava/lang/String;
+
+    move-result-object v1
+
+    array-length v1, v1
+
+    if-nez v1, :cond_e8
+
+    :cond_e5
+    invoke-virtual {v12}, Ljava/io/File;->delete()Z
+
+    :cond_e8
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->settingsCache:Landroid/util/LruCache;
+
+    invoke-virtual {v1, p1}, Landroid/util/LruCache;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+    :try_end_f0
+    .catchall {:try_start_26 .. :try_end_f0} :catchall_130
+
+    :try_start_f0
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+    :try_end_f3
+    .catchall {:try_start_f0 .. :try_end_f3} :catchall_135
+
+    :try_start_f3
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->unlock()V
+    :try_end_fc
+    .catchall {:try_start_f3 .. :try_end_fc} :catchall_14d
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_f3 .. :try_end_fc} :catch_103
+    .catch Ljava/lang/Exception; {:try_start_f3 .. :try_end_fc} :catch_140
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    :goto_ff
+    return v11
+
+    :catchall_100
+    move-exception v1
+
+    :try_start_101
+    monitor-exit v2
+    :try_end_102
+    .catchall {:try_start_101 .. :try_end_102} :catchall_100
+
+    :try_start_102
+    throw v1
+    :try_end_103
+    .catchall {:try_start_102 .. :try_end_103} :catchall_14d
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_102 .. :try_end_103} :catch_103
+    .catch Ljava/lang/Exception; {:try_start_102 .. :try_end_103} :catch_140
+
+    :catch_103
+    move-exception v9
+
+    const/4 v11, 0x0
+
+    :try_start_105
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    const-string v2, "PrivacyPersistenceAdapter:deleteSettings: failed to open the database, or open a transaction"
+
+    invoke-static {v1, v2, v9}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_10c
+    .catchall {:try_start_105 .. :try_end_10c} :catchall_14d
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    goto :goto_ff
+
+    :cond_110
+    :try_start_110
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "deleteSettings - database entry for "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " not found"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_12e
+    .catchall {:try_start_110 .. :try_end_12e} :catchall_130
+
+    goto/16 :goto_69
+
+    :catchall_130
+    move-exception v1
+
+    :try_start_131
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    throw v1
+    :try_end_135
+    .catchall {:try_start_131 .. :try_end_135} :catchall_135
+
+    :catchall_135
+    move-exception v1
+
+    :try_start_136
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v2}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    throw v1
+    :try_end_140
+    .catchall {:try_start_136 .. :try_end_140} :catchall_14d
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_136 .. :try_end_140} :catch_103
+    .catch Ljava/lang/Exception; {:try_start_136 .. :try_end_140} :catch_140
+
+    :catch_140
+    move-exception v9
+
+    const/4 v11, 0x0
+
+    :try_start_142
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    const-string v2, "PrivacyPersistenceAdapter:deleteSettings - could not delete settings"
+
+    invoke-static {v1, v2, v9}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_149
+    .catchall {:try_start_142 .. :try_end_149} :catchall_14d
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    goto :goto_ff
+
+    :catchall_14d
+    move-exception v1
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    throw v1
+.end method
+
+.method public getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+    .registers 59
+
+    const/16 v56, 0x0
+
+    if-nez p1, :cond_c
+
+    new-instance v1, Ljava/security/InvalidParameterException;
+
+    const-string v4, "PrivacyPersistenceAdapter:getSettings:insufficient application identifier - package name is required"
+
+    invoke-direct {v1, v4}, Ljava/security/InvalidParameterException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_c
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->settingsCache:Landroid/util/LruCache;
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v1, v0}, Landroid/util/LruCache;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v53
+
+    check-cast v53, Landroid/privacy/PrivacySettingsStub;
+
+    if-eqz v53, :cond_28
+
+    move-object/from16 v0, v53
+
+    instance-of v1, v0, Landroid/privacy/PrivacySettings;
+
+    if-eqz v1, :cond_23
+
+    check-cast v53, Landroid/privacy/PrivacySettings;
+
+    move-object/from16 v3, v56
+
+    :goto_22
+    return-object v53
+
+    :cond_23
+    const/16 v53, 0x0
+
+    move-object/from16 v3, v56
+
+    goto :goto_22
+
+    :cond_28
+    :try_start_28
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-enter v4
+    :try_end_2b
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_28 .. :try_end_2b} :catch_a8
+
+    :try_start_2b
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I
+
+    move-result v1
+
+    add-int/lit8 v1, v1, 0x1
+
+    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v1
+
+    sput-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-exit v4
+    :try_end_3c
+    .catchall {:try_start_2b .. :try_end_3c} :catchall_a5
+
+    :try_start_3c
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_3f
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_3c .. :try_end_3f} :catch_a8
+
+    move-result-object v2
+
+    const/16 v54, 0x0
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->lock()V
+
+    :try_start_4b
+    const-string/jumbo v3, "settings"
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->DATABASE_FIELDS:[Ljava/lang/String;
+
+    const-string/jumbo v5, "packageName=?"
+
+    const/4 v1, 0x1
+
+    new-array v6, v1, [Ljava/lang/String;
+
+    const/4 v1, 0x0
+
+    aput-object p1, v6, v1
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    move-object/from16 v1, p0
+
+    invoke-direct/range {v1 .. v10}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v54
+
+    if-eqz v54, :cond_367
+
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    if-nez v1, :cond_b6
+
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "PrivacyPersistenceAdapter:getSettingsfound for package "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v1, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_85
+    .catchall {:try_start_4b .. :try_end_85} :catchall_35f
+    .catch Ljava/lang/Exception; {:try_start_4b .. :try_end_85} :catch_363
+
+    move-object/from16 v3, v56
+
+    :cond_87
+    :goto_87
+    if-eqz v3, :cond_351
+
+    :try_start_89
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->settingsCache:Landroid/util/LruCache;
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v1, v0, v3}, Landroid/util/LruCache;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+    :try_end_90
+    .catchall {:try_start_89 .. :try_end_90} :catchall_33e
+    .catch Ljava/lang/Exception; {:try_start_89 .. :try_end_90} :catch_307
+
+    :goto_90
+    if-eqz v54, :cond_95
+
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->close()V
+
+    :cond_95
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    :goto_a1
+    move-object/from16 v53, v3
+
+    goto/16 :goto_22
+
+    :catchall_a5
+    move-exception v1
+
+    :try_start_a6
+    monitor-exit v4
+    :try_end_a7
+    .catchall {:try_start_a6 .. :try_end_a7} :catchall_a5
+
+    :try_start_a7
+    throw v1
+    :try_end_a8
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_a7 .. :try_end_a8} :catch_a8
+
+    :catch_a8
+    move-exception v55
+
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    const-string v4, "getSettings - database could not be opened"
+
+    move-object/from16 v0, v55
+
+    invoke-static {v1, v4, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    throw v55
+
+    :cond_b6
+    :try_start_b6
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-le v1, v4, :cond_d7
+
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Multiple privacy settings found for package "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v1, v4}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_d7
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_367
+
+    new-instance v3, Landroid/privacy/PrivacySettings;
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v1
+
+    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    const/4 v1, 0x1
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v1, 0x2
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v6
+
+    const/4 v1, 0x3
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v7, v1
+
+    const/4 v1, 0x4
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v8
+
+    const/4 v1, 0x5
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v9, v1
+
+    const/4 v1, 0x6
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v10
+
+    const/4 v1, 0x7
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v11, v1
+
+    const/16 v1, 0x8
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v12
+
+    const/16 v1, 0x9
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v13
+
+    const/16 v1, 0xa
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v14, v1
+
+    const/16 v1, 0xb
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v15
+
+    const/16 v1, 0xc
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v16
+
+    const/16 v1, 0xd
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v17, v0
+
+    const/16 v1, 0xe
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v18, v0
+
+    const/16 v1, 0xf
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v19, v0
+
+    const/16 v1, 0x10
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v20
+
+    const/16 v1, 0x11
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v21, v0
+
+    const/16 v1, 0x12
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v22
+
+    const/16 v1, 0x13
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v23, v0
+
+    const/16 v1, 0x14
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v24, v0
+
+    const/16 v1, 0x15
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v25, v0
+
+    const/16 v1, 0x16
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v26, v0
+
+    const/16 v1, 0x17
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v27, v0
+
+    const/16 v1, 0x18
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v28, v0
+
+    const/16 v1, 0x19
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v29, v0
+
+    const/16 v1, 0x1a
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v30, v0
+
+    const/16 v1, 0x1b
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v31, v0
+
+    const/16 v1, 0x1c
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v32, v0
+
+    const/16 v1, 0x1d
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v33, v0
+
+    const/16 v1, 0x1e
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v34, v0
+
+    const/16 v1, 0x1f
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v35, v0
+
+    const/16 v1, 0x20
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v36, v0
+
+    const/16 v1, 0x21
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v37, v0
+
+    const/16 v1, 0x22
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v38, v0
+
+    const/16 v39, 0x0
+
+    const/16 v1, 0x23
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v40, v0
+
+    const/16 v1, 0x24
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v41, v0
+
+    const/16 v1, 0x25
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v42, v0
+
+    const/16 v1, 0x26
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v43, v0
+
+    const/16 v1, 0x27
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v44, v0
+
+    const/16 v1, 0x28
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v45, v0
+
+    const/16 v1, 0x29
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v46
+
+    const/16 v1, 0x2a
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v47, v0
+
+    const/16 v1, 0x2b
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v48, v0
+
+    const/16 v1, 0x2c
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v49, v0
+
+    const/16 v1, 0x2d
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v50, v0
+
+    const/16 v1, 0x2e
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v51, v0
+
+    invoke-direct/range {v3 .. v51}, Landroid/privacy/PrivacySettings;-><init>(Ljava/lang/Integer;Ljava/lang/String;IBLjava/lang/String;BLjava/lang/String;BLjava/lang/String;Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;BBBLjava/lang/String;BLjava/lang/String;BBBBBBBBBBBBBBBB[IBBBBBBLjava/lang/String;BBBBB)V
+    :try_end_2b9
+    .catchall {:try_start_b6 .. :try_end_2b9} :catchall_35f
+    .catch Ljava/lang/Exception; {:try_start_b6 .. :try_end_2b9} :catch_363
+
+    :try_start_2b9
+    const-string v6, "allowed_contacts"
+
+    const/4 v1, 0x1
+
+    new-array v7, v1, [Ljava/lang/String;
+
+    const/4 v1, 0x0
+
+    const-string v4, "contact_id"
+
+    aput-object v4, v7, v1
+
+    const-string/jumbo v8, "settings_id=?"
+
+    const/4 v1, 0x1
+
+    new-array v9, v1, [Ljava/lang/String;
+
+    const/4 v1, 0x0
+
+    invoke-virtual {v3}, Landroid/privacy/PrivacySettings;->get_id()Ljava/lang/Integer;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I
+
+    move-result v4
+
+    invoke-static {v4}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;
+
+    move-result-object v4
+
+    aput-object v4, v9, v1
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    move-object/from16 v4, p0
+
+    move-object v5, v2
+
+    invoke-direct/range {v4 .. v13}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v54
+
+    if-eqz v54, :cond_87
+
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    if-lez v1, :cond_87
+
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    new-array v0, v1, [I
+
+    move-object/from16 v52, v0
+
+    :goto_2f3
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_337
+
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v1
+
+    const/4 v4, 0x0
+
+    move-object/from16 v0, v54
+
+    invoke-interface {v0, v4}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v4
+
+    aput v4, v52, v1
+    :try_end_306
+    .catchall {:try_start_2b9 .. :try_end_306} :catchall_33e
+    .catch Ljava/lang/Exception; {:try_start_2b9 .. :try_end_306} :catch_307
+
+    goto :goto_2f3
+
+    :catch_307
+    move-exception v55
+
+    :goto_308
+    :try_start_308
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "getSettings - failed to get settings for package: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    move-object/from16 v0, v55
+
+    invoke-static {v1, v4, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_324
+    .catchall {:try_start_308 .. :try_end_324} :catchall_33e
+
+    if-eqz v54, :cond_329
+
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->close()V
+
+    :cond_329
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    goto/16 :goto_a1
+
+    :cond_337
+    :try_start_337
+    move-object/from16 v0, v52
+
+    invoke-virtual {v3, v0}, Landroid/privacy/PrivacySettings;->setAllowedContacts([I)V
+    :try_end_33c
+    .catchall {:try_start_337 .. :try_end_33c} :catchall_33e
+    .catch Ljava/lang/Exception; {:try_start_337 .. :try_end_33c} :catch_307
+
+    goto/16 :goto_87
+
+    :catchall_33e
+    move-exception v1
+
+    :goto_33f
+    if-eqz v54, :cond_344
+
+    invoke-interface/range {v54 .. v54}, Landroid/database/Cursor;->close()V
+
+    :cond_344
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v4
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    throw v1
+
+    :cond_351
+    :try_start_351
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->settingsCache:Landroid/util/LruCache;
+
+    new-instance v4, Landroid/privacy/PrivacySettingsStub;
+
+    invoke-direct {v4}, Landroid/privacy/PrivacySettingsStub;-><init>()V
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v1, v0, v4}, Landroid/util/LruCache;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+    :try_end_35d
+    .catchall {:try_start_351 .. :try_end_35d} :catchall_33e
+    .catch Ljava/lang/Exception; {:try_start_351 .. :try_end_35d} :catch_307
+
+    goto/16 :goto_90
+
+    :catchall_35f
+    move-exception v1
+
+    move-object/from16 v3, v56
+
+    goto :goto_33f
+
+    :catch_363
+    move-exception v55
+
+    move-object/from16 v3, v56
+
+    goto :goto_308
+
+    :cond_367
+    move-object/from16 v3, v56
+
+    goto/16 :goto_87
+.end method
+
+.method public getValue(Ljava/lang/String;)Ljava/lang/String;
+    .registers 15
+
+    const/4 v0, 0x0
+
+    const/4 v12, 0x0
+
+    :try_start_2
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-enter v2
+    :try_end_5
+    .catchall {:try_start_2 .. :try_end_5} :catchall_41
+
+    :try_start_5
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I
+
+    move-result v3
+
+    add-int/lit8 v3, v3, 0x1
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v3
+
+    sput-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-exit v2
+    :try_end_16
+    .catchall {:try_start_5 .. :try_end_16} :catchall_3e
+
+    :try_start_16
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_22
+
+    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-nez v2, :cond_46
+
+    :cond_22
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "PrivacyPersistenceAdapter:getValue: Database not obtained while getting value for name: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_3a
+    .catchall {:try_start_16 .. :try_end_3a} :catchall_41
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    :goto_3d
+    return-object v0
+
+    :catchall_3e
+    move-exception v0
+
+    :try_start_3f
+    monitor-exit v2
+    :try_end_40
+    .catchall {:try_start_3f .. :try_end_40} :catchall_3e
+
+    :try_start_40
+    throw v0
+    :try_end_41
+    .catchall {:try_start_40 .. :try_end_41} :catchall_41
+
+    :catchall_41
+    move-exception v0
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    throw v0
+
+    :cond_46
+    :try_start_46
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v0
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->lock()V
+    :try_end_4f
+    .catchall {:try_start_46 .. :try_end_4f} :catchall_41
+
+    :try_start_4f
+    const-string/jumbo v2, "map"
+
+    const/4 v0, 0x1
+
+    new-array v3, v0, [Ljava/lang/String;
+
+    const/4 v0, 0x0
+
+    const-string/jumbo v4, "value"
+
+    aput-object v4, v3, v0
+
+    const-string/jumbo v4, "name=?"
+
+    const/4 v0, 0x1
+
+    new-array v5, v0, [Ljava/lang/String;
+
+    const/4 v0, 0x0
+
+    aput-object p1, v5, v0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    move-object v0, p0
+
+    invoke-direct/range {v0 .. v9}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v10
+
+    if-eqz v10, :cond_97
+
+    invoke-interface {v10}, Landroid/database/Cursor;->getCount()I
+
+    move-result v0
+
+    if-lez v0, :cond_97
+
+    invoke-interface {v10}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_97
+
+    const-string/jumbo v0, "value"
+
+    invoke-interface {v10, v0}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I
+
+    move-result v0
+
+    invoke-interface {v10, v0}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-interface {v10}, Landroid/database/Cursor;->close()V
+    :try_end_89
+    .catchall {:try_start_4f .. :try_end_89} :catchall_d3
+    .catch Ljava/lang/Exception; {:try_start_4f .. :try_end_89} :catch_b0
+
+    :goto_89
+    :try_start_89
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v0
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->unlock()V
+    :try_end_92
+    .catchall {:try_start_89 .. :try_end_92} :catchall_41
+
+    :goto_92
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    move-object v0, v12
+
+    goto :goto_3d
+
+    :cond_97
+    :try_start_97
+    const-string v0, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "PrivacyPersistenceAdapter:getValue: Could not get value for name: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v0, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_af
+    .catchall {:try_start_97 .. :try_end_af} :catchall_d3
+    .catch Ljava/lang/Exception; {:try_start_97 .. :try_end_af} :catch_b0
+
+    goto :goto_89
+
+    :catch_b0
+    move-exception v11
+
+    :try_start_b1
+    const-string v0, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "PrivacyPersistenceAdapter:getValue: Exception occurred while getting value for name: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v0, v2, v11}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_c9
+    .catchall {:try_start_b1 .. :try_end_c9} :catchall_d3
+
+    :try_start_c9
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v0
+
+    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    goto :goto_92
+
+    :catchall_d3
+    move-exception v0
+
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v2}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    throw v0
+    :try_end_de
+    .catchall {:try_start_c9 .. :try_end_de} :catchall_41
+.end method
+
+.method public purgeSettings()Z
+    .registers 26
+
+    const/16 v23, 0x1
+
+    new-instance v13, Ljava/util/HashSet;
+
+    invoke-direct {v13}, Ljava/util/HashSet;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Landroid/privacy/PrivacyPersistenceAdapter;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v20
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, v20
+
+    invoke-virtual {v0, v2}, Landroid/content/pm/PackageManager;->getInstalledApplications(I)Ljava/util/List;
+
+    move-result-object v18
+
+    invoke-interface/range {v18 .. v18}, Ljava/util/List;->iterator()Ljava/util/Iterator;
+
+    move-result-object v17
+
+    :goto_1a
+    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_2c
+
+    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v12, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-interface {v13, v2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z
+
+    goto :goto_1a
+
+    :cond_2c
+    const/4 v3, 0x0
+
+    :try_start_2d
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-enter v4
+    :try_end_30
+    .catchall {:try_start_2d .. :try_end_30} :catchall_11b
+    .catch Ljava/lang/Exception; {:try_start_2d .. :try_end_30} :catch_56
+
+    :try_start_30
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I
+
+    move-result v2
+
+    add-int/lit8 v2, v2, 0x1
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v2
+
+    sput-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-exit v4
+    :try_end_41
+    .catchall {:try_start_30 .. :try_end_41} :catchall_53
+
+    :try_start_41
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v3
+
+    if-nez v3, :cond_68
+
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v4, "PrivacyPersistenceAdapter:purgeSettings: db could not be obtained"
+
+    invoke-static {v2, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_4e
+    .catchall {:try_start_41 .. :try_end_4e} :catchall_11b
+    .catch Ljava/lang/Exception; {:try_start_41 .. :try_end_4e} :catch_56
+
+    const/4 v2, 0x0
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    :goto_52
+    return v2
+
+    :catchall_53
+    move-exception v2
+
+    :try_start_54
+    monitor-exit v4
+    :try_end_55
+    .catchall {:try_start_54 .. :try_end_55} :catchall_53
+
+    :try_start_55
+    throw v2
+    :try_end_56
+    .catchall {:try_start_55 .. :try_end_56} :catchall_11b
+    .catch Ljava/lang/Exception; {:try_start_55 .. :try_end_56} :catch_56
+
+    :catch_56
+    move-exception v16
+
+    :try_start_57
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v4, "PrivacyPersistenceAdapter:purgeSettings - purging DB failed"
+
+    move-object/from16 v0, v16
+
+    invoke-static {v2, v4, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_60
+    .catchall {:try_start_57 .. :try_end_60} :catchall_11b
+
+    const/16 v23, 0x0
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    :goto_65
+    move/from16 v2, v23
+
+    goto :goto_52
+
+    :cond_68
+    :try_start_68
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v2}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/concurrent/locks/Lock;->lock()V
+    :try_end_71
+    .catchall {:try_start_68 .. :try_end_71} :catchall_11b
+    .catch Ljava/lang/Exception; {:try_start_68 .. :try_end_71} :catch_56
+
+    const/4 v15, 0x0
+
+    :try_start_72
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+    :try_end_75
+    .catchall {:try_start_72 .. :try_end_75} :catchall_110
+
+    :try_start_75
+    const-string/jumbo v4, "settings"
+
+    const/4 v2, 0x1
+
+    new-array v5, v2, [Ljava/lang/String;
+
+    const/4 v2, 0x0
+
+    const-string/jumbo v6, "packageName"
+
+    aput-object v6, v5, v2
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    move-object/from16 v2, p0
+
+    invoke-direct/range {v2 .. v11}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v15
+
+    if-eqz v15, :cond_bd
+
+    invoke-interface {v15}, Landroid/database/Cursor;->getCount()I
+
+    move-result v2
+
+    if-lez v2, :cond_bd
+
+    invoke-interface {v15}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_bd
+
+    :cond_9b
+    const/4 v2, 0x0
+
+    invoke-interface {v15, v2}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v22
+
+    move-object/from16 v0, v22
+
+    invoke-interface {v13, v0}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_b7
+
+    const-string/jumbo v2, "settings"
+
+    const-string/jumbo v4, "packageName = ?"
+
+    const/4 v5, 0x1
+
+    new-array v5, v5, [Ljava/lang/String;
+
+    const/4 v6, 0x0
+
+    aput-object v22, v5, v6
+
+    invoke-virtual {v3, v2, v4, v5}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    :cond_b7
+    invoke-interface {v15}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v2
+
+    if-nez v2, :cond_9b
+
+    :cond_bd
+    new-instance v24, Ljava/io/File;
+
+    const-string v2, "/data/system/privacy"
+
+    move-object/from16 v0, v24
+
+    invoke-direct {v0, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual/range {v24 .. v24}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v14
+
+    array-length v0, v14
+
+    move/from16 v19, v0
+
+    const/16 v17, 0x0
+
+    :goto_cf
+    move/from16 v0, v17
+
+    move/from16 v1, v19
+
+    if-ge v0, v1, :cond_ed
+
+    aget-object v21, v14, v17
+
+    invoke-virtual/range {v21 .. v21}, Ljava/io/File;->getName()Ljava/lang/String;
+
+    move-result-object v22
+
+    move-object/from16 v0, v22
+
+    invoke-interface {v13, v0}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_ea
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v21
+
+    invoke-direct {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteRecursive(Ljava/io/File;)V
+
+    :cond_ea
+    add-int/lit8 v17, v17, 0x1
+
+    goto :goto_cf
+
+    :cond_ed
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+    :try_end_f0
+    .catchall {:try_start_75 .. :try_end_f0} :catchall_106
+
+    if-eqz v15, :cond_f5
+
+    :try_start_f2
+    invoke-interface {v15}, Landroid/database/Cursor;->close()V
+
+    :cond_f5
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+    :try_end_f8
+    .catchall {:try_start_f2 .. :try_end_f8} :catchall_110
+
+    :try_start_f8
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v2}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/concurrent/locks/Lock;->unlock()V
+    :try_end_101
+    .catchall {:try_start_f8 .. :try_end_101} :catchall_11b
+    .catch Ljava/lang/Exception; {:try_start_f8 .. :try_end_101} :catch_56
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    goto/16 :goto_65
+
+    :catchall_106
+    move-exception v2
+
+    if-eqz v15, :cond_10c
+
+    :try_start_109
+    invoke-interface {v15}, Landroid/database/Cursor;->close()V
+
+    :cond_10c
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    throw v2
+    :try_end_110
+    .catchall {:try_start_109 .. :try_end_110} :catchall_110
+
+    :catchall_110
+    move-exception v2
+
+    :try_start_111
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v4
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    throw v2
+    :try_end_11b
+    .catchall {:try_start_111 .. :try_end_11b} :catchall_11b
+    .catch Ljava/lang/Exception; {:try_start_111 .. :try_end_11b} :catch_56
+
+    :catchall_11b
+    move-exception v2
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    throw v2
+.end method
+
+.method public saveSettings(Landroid/privacy/PrivacySettings;)Z
+    .registers 25
+
+    const/16 v19, 0x0
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v18
+
+    if-eqz v18, :cond_e
+
+    invoke-virtual/range {v18 .. v18}, Ljava/lang/String;->isEmpty()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_18
+
+    :cond_e
+    const-string v4, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v5, "saveSettings - either package name is missing"
+
+    invoke-static {v4, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v4, 0x0
+
+    :goto_17
+    return v4
+
+    :cond_18
+    new-instance v22, Landroid/content/ContentValues;
+
+    invoke-direct/range {v22 .. v22}, Landroid/content/ContentValues;-><init>()V
+
+    const-string/jumbo v4, "packageName"
+
+    move-object/from16 v0, v22
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v4, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v4, "uid"
+
+    const/4 v5, -0x1
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "deviceIdSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getDeviceIdSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "deviceId"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getDeviceId()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "line1NumberSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLine1NumberSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "line1Number"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLine1Number()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "locationGpsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "locationGpsLat"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationGpsLat()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "locationGpsLon"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationGpsLon()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "locationNetworkSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "locationNetworkLat"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationNetworkLat()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "locationNetworkLon"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationNetworkLon()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v4, "networkInfoSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "simInfoSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSimInfoSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "simSerialNumberSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSimSerialNumberSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "simSerialNumber"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSimSerialNumber()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v4, "subscriberIdSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSubscriberIdSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "subscriberId"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSubscriberId()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "accountsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAccountsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "accountsAuthTokensSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAccountsAuthTokensSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "outgoingCallsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getOutgoingCallsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "incomingCallsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIncomingCallsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "contactsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getContactsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "calendarSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getCalendarSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "mmsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getMmsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "smsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSmsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "callLogSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getCallLogSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "bookmarksSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getBookmarksSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "systemLogsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSystemLogsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "notificationSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getNotificationSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "intentBootCompletedSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIntentBootCompletedSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "cameraSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getCameraSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "recordAudioSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getRecordAudioSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "smsSendSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSmsSendSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "phoneCallSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "ipTableProtectSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIpTableProtectSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "iccAccessSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIccAccessSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "addOnManagementSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAddOnManagementSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "androidIdSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAndroidIdSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "androidId"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAndroidID()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v4, "wifiInfoSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "switchConnectivitySetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSwitchConnectivitySetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "sendMmsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSendMmsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "forceOnlineState"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "switchWifiStateSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSwitchWifiStateSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const/4 v3, 0x0
+
+    const/4 v13, 0x0
+
+    :try_start_2a9
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-enter v5
+    :try_end_2ac
+    .catchall {:try_start_2a9 .. :try_end_2ac} :catchall_33c
+    .catch Ljava/lang/Exception; {:try_start_2a9 .. :try_end_2ac} :catch_311
+
+    :try_start_2ac
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I
+
+    move-result v4
+
+    add-int/lit8 v4, v4, 0x1
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    sput-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-exit v5
+    :try_end_2bd
+    .catchall {:try_start_2ac .. :try_end_2bd} :catchall_339
+
+    :try_start_2bd
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_4f9
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_4f9
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v4
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/Lock;->lock()V
+    :try_end_2d2
+    .catchall {:try_start_2bd .. :try_end_2d2} :catchall_33c
+    .catch Ljava/lang/Exception; {:try_start_2bd .. :try_end_2d2} :catch_311
+
+    :try_start_2d2
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+    :try_end_2d5
+    .catchall {:try_start_2d2 .. :try_end_2d5} :catchall_306
+
+    :try_start_2d5
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->get_id()Ljava/lang/Integer;
+
+    move-result-object v16
+
+    if-eqz v16, :cond_38d
+
+    const-string/jumbo v4, "settings"
+
+    const-string v5, "_id=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/Integer;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v3, v4, v0, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
+
+    move-result v4
+
+    const/4 v5, 0x1
+
+    if-ge v4, v5, :cond_341
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - failed to update database entry"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+    :try_end_2fc
+    .catchall {:try_start_2d5 .. :try_end_2fc} :catchall_2fc
+
+    :catchall_2fc
+    move-exception v4
+
+    :try_start_2fd
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v13, :cond_305
+
+    invoke-interface {v13}, Landroid/database/Cursor;->close()V
+
+    :cond_305
+    throw v4
+    :try_end_306
+    .catchall {:try_start_2fd .. :try_end_306} :catchall_306
+
+    :catchall_306
+    move-exception v4
+
+    :try_start_307
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v5}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v5
+
+    invoke-interface {v5}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    throw v4
+    :try_end_311
+    .catchall {:try_start_307 .. :try_end_311} :catchall_33c
+    .catch Ljava/lang/Exception; {:try_start_307 .. :try_end_311} :catch_311
+
+    :catch_311
+    move-exception v14
+
+    :try_start_312
+    const-string v4, "PrivacyPersistenceAdapter"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PrivacyPersistenceAdapter:saveSettings: saving for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " failed"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5, v14}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_332
+    .catchall {:try_start_312 .. :try_end_332} :catchall_33c
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    :goto_335
+    move/from16 v4, v19
+
+    goto/16 :goto_17
+
+    :catchall_339
+    move-exception v4
+
+    :try_start_33a
+    monitor-exit v5
+    :try_end_33b
+    .catchall {:try_start_33a .. :try_end_33b} :catchall_339
+
+    :try_start_33b
+    throw v4
+    :try_end_33c
+    .catchall {:try_start_33b .. :try_end_33c} :catchall_33c
+    .catch Ljava/lang/Exception; {:try_start_33b .. :try_end_33c} :catch_311
+
+    :catchall_33c
+    move-exception v4
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    throw v4
+
+    :cond_341
+    :try_start_341
+    const-string v4, "allowed_contacts"
+
+    const-string/jumbo v5, "settings_id=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/Integer;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    invoke-virtual {v3, v4, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v11
+
+    if-eqz v11, :cond_4af
+
+    new-instance v12, Landroid/content/ContentValues;
+
+    invoke-direct {v12}, Landroid/content/ContentValues;-><init>()V
+
+    const/4 v15, 0x0
+
+    :goto_35f
+    array-length v4, v11
+
+    if-ge v15, v4, :cond_4af
+
+    const-string/jumbo v4, "settings_id"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v12, v4, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "contact_id"
+
+    aget v5, v11, v15
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    invoke-virtual {v12, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "allowed_contacts"
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v3, v4, v5, v12}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v4
+
+    const-wide/16 v6, -0x1
+
+    cmp-long v4, v4, v6
+
+    if-nez v4, :cond_38a
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string v5, "PrivacyPersistenceAdapter:saveSettings: failed to update database entry (contacts)"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_38a
+    add-int/lit8 v15, v15, 0x1
+
+    goto :goto_35f
+
+    :cond_38d
+    const-string/jumbo v4, "settings"
+
+    const/4 v5, 0x1
+
+    new-array v5, v5, [Ljava/lang/String;
+
+    const/4 v6, 0x0
+
+    const-string v7, "_id"
+
+    aput-object v7, v5, v6
+
+    const-string/jumbo v6, "packageName=?"
+
+    const/4 v7, 0x1
+
+    new-array v7, v7, [Ljava/lang/String;
+
+    const/4 v8, 0x0
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v9
+
+    aput-object v9, v7, v8
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    invoke-virtual/range {v3 .. v10}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v13
+
+    if-eqz v13, :cond_4a7
+
+    invoke-interface {v13}, Landroid/database/Cursor;->getCount()I
+
+    move-result v4
+
+    const/4 v5, 0x1
+
+    if-ne v4, v5, :cond_433
+
+    const-string/jumbo v4, "settings"
+
+    const-string/jumbo v5, "packageName=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v3, v4, v0, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
+
+    move-result v4
+
+    const/4 v5, 0x1
+
+    if-ge v4, v5, :cond_3d7
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - failed to update database entry"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_3d7
+    invoke-interface {v13}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_4af
+
+    const/4 v4, 0x0
+
+    invoke-interface {v13, v4}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v4
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v17
+
+    const-string v4, "allowed_contacts"
+
+    const-string/jumbo v5, "settings_id=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {v17 .. v17}, Ljava/lang/Integer;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    invoke-virtual {v3, v4, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v11
+
+    if-eqz v11, :cond_4af
+
+    new-instance v12, Landroid/content/ContentValues;
+
+    invoke-direct {v12}, Landroid/content/ContentValues;-><init>()V
+
+    const/4 v15, 0x0
+
+    :goto_404
+    array-length v4, v11
+
+    if-ge v15, v4, :cond_4af
+
+    const-string/jumbo v4, "settings_id"
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v12, v4, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "contact_id"
+
+    aget v5, v11, v15
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    invoke-virtual {v12, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "allowed_contacts"
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v3, v4, v5, v12}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v4
+
+    const-wide/16 v6, -0x1
+
+    cmp-long v4, v4, v6
+
+    if-nez v4, :cond_430
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - failed to update database entry (contacts)"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_430
+    add-int/lit8 v15, v15, 0x1
+
+    goto :goto_404
+
+    :cond_433
+    invoke-interface {v13}, Landroid/database/Cursor;->getCount()I
+
+    move-result v4
+
+    if-nez v4, :cond_49f
+
+    const-string/jumbo v4, "settings"
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v3, v4, v5, v0}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v20
+
+    const-wide/16 v4, -0x1
+
+    cmp-long v4, v20, v4
+
+    if-nez v4, :cond_451
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string v5, "PrivacyPersistenceAdapter:saveSettings - failed to insert new record into DB"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_451
+    const-string v4, "allowed_contacts"
+
+    const-string/jumbo v5, "settings_id=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-static/range {v20 .. v21}, Ljava/lang/Long;->toString(J)Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    invoke-virtual {v3, v4, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v11
+
+    if-eqz v11, :cond_4af
+
+    new-instance v12, Landroid/content/ContentValues;
+
+    invoke-direct {v12}, Landroid/content/ContentValues;-><init>()V
+
+    const/4 v15, 0x0
+
+    :goto_46f
+    array-length v4, v11
+
+    if-ge v15, v4, :cond_4af
+
+    const-string/jumbo v4, "settings_id"
+
+    invoke-static/range {v20 .. v21}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;
+
+    move-result-object v5
+
+    invoke-virtual {v12, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V
+
+    const-string v4, "contact_id"
+
+    aget v5, v11, v15
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    invoke-virtual {v12, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "allowed_contacts"
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v3, v4, v5, v12}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v4
+
+    const-wide/16 v6, -0x1
+
+    cmp-long v4, v4, v6
+
+    if-nez v4, :cond_49c
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string v5, "PrivacyPersistenceAdapter:saveSettings:failed to update database entry (contacts)"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_49c
+    add-int/lit8 v15, v15, 0x1
+
+    goto :goto_46f
+
+    :cond_49f
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string v5, "PrivacyPersistenceAdapter:saveSettings:duplicate entries in the privacy.db"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_4a7
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string v5, "PrivacyPersistenceAdapter:saveSettings:cursor is null, database access failed"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_4af
+    const-string/jumbo v4, "systemLogsSetting"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v18
+
+    move-object/from16 v2, p1
+
+    invoke-direct {v0, v4, v1, v2}, Landroid/privacy/PrivacyPersistenceAdapter;->writeExternalSettings(Ljava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)Z
+
+    move-result v4
+
+    if-nez v4, :cond_4c6
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string v5, "PrivacyPersistenceAdapter:saveSettings:failed to write systemLogsSettings file"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_4c6
+    const-string v4, "ipTableProtectSetting"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v18
+
+    move-object/from16 v2, p1
+
+    invoke-direct {v0, v4, v1, v2}, Landroid/privacy/PrivacyPersistenceAdapter;->writeExternalSettings(Ljava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)Z
+
+    move-result v4
+
+    if-nez v4, :cond_4dc
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string v5, "PrivacyPersistenceAdapter:saveSettings:failed to write ipTableProtectSetting file"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_4dc
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->settingsCache:Landroid/util/LruCache;
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v4, v0}, Landroid/util/LruCache;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+    :try_end_4e6
+    .catchall {:try_start_341 .. :try_end_4e6} :catchall_2fc
+
+    :try_start_4e6
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v13, :cond_4ee
+
+    invoke-interface {v13}, Landroid/database/Cursor;->close()V
+    :try_end_4ee
+    .catchall {:try_start_4e6 .. :try_end_4ee} :catchall_306
+
+    :cond_4ee
+    :try_start_4ee
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v4
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/Lock;->unlock()V
+    :try_end_4f7
+    .catchall {:try_start_4ee .. :try_end_4f7} :catchall_33c
+    .catch Ljava/lang/Exception; {:try_start_4ee .. :try_end_4f7} :catch_311
+
+    const/16 v19, 0x1
+
+    :cond_4f9
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    goto/16 :goto_335
+.end method
+
+.method public setValue(Ljava/lang/String;Ljava/lang/String;)Z
+    .registers 11
+
+    const/4 v3, 0x0
+
+    const-string v4, "PrivacyPersistenceAdapter"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v6, "setValue - name "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " value "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v2, Landroid/content/ContentValues;
+
+    invoke-direct {v2}, Landroid/content/ContentValues;-><init>()V
+
+    const-string/jumbo v4, "name"
+
+    invoke-virtual {v2, v4, p1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v4, "value"
+
+    invoke-virtual {v2, v4, p2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const/4 v1, 0x0
+
+    :try_start_36
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-enter v4
+    :try_end_39
+    .catchall {:try_start_36 .. :try_end_39} :catchall_75
+
+    :try_start_39
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I
+
+    move-result v5
+
+    add-int/lit8 v5, v5, 0x1
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    sput-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->sDbAccessThreads:Ljava/lang/Integer;
+
+    monitor-exit v4
+    :try_end_4a
+    .catchall {:try_start_39 .. :try_end_4a} :catchall_72
+
+    :try_start_4a
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_56
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-nez v4, :cond_7a
+
+    :cond_56
+    const-string v4, "PrivacyPersistenceAdapter"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "PrivacyPersistenceAdapter:setValue: Database not obtained while setting value for name: "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_6e
+    .catchall {:try_start_4a .. :try_end_6e} :catchall_75
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    :goto_71
+    return v3
+
+    :catchall_72
+    move-exception v3
+
+    :try_start_73
+    monitor-exit v4
+    :try_end_74
+    .catchall {:try_start_73 .. :try_end_74} :catchall_72
+
+    :try_start_74
+    throw v3
+    :try_end_75
+    .catchall {:try_start_74 .. :try_end_75} :catchall_75
+
+    :catchall_75
+    move-exception v3
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    throw v3
+
+    :cond_7a
+    :try_start_7a
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v4
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/Lock;->lock()V
+    :try_end_83
+    .catchall {:try_start_7a .. :try_end_83} :catchall_75
+
+    :try_start_83
+    const-string/jumbo v4, "map"
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v0, v4, v5, v2}, Landroid/database/sqlite/SQLiteDatabase;->replace(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+    :try_end_8a
+    .catchall {:try_start_83 .. :try_end_8a} :catchall_a2
+
+    move-result-wide v4
+
+    const-wide/16 v6, -0x1
+
+    cmp-long v4, v4, v6
+
+    if-eqz v4, :cond_a0
+
+    const/4 v1, 0x1
+
+    :goto_92
+    :try_start_92
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v3}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v3
+
+    invoke-interface {v3}, Ljava/util/concurrent/locks/Lock;->unlock()V
+    :try_end_9b
+    .catchall {:try_start_92 .. :try_end_9b} :catchall_75
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->closeIdleDatabase()V
+
+    move v3, v1
+
+    goto :goto_71
+
+    :cond_a0
+    move v1, v3
+
+    goto :goto_92
+
+    :catchall_a2
+    move-exception v3
+
+    :try_start_a3
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->sDbLock:Ljava/util/concurrent/locks/ReadWriteLock;
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;
+
+    move-result-object v4
+
+    invoke-interface {v4}, Ljava/util/concurrent/locks/Lock;->unlock()V
+
+    throw v3
+    :try_end_ad
+    .catchall {:try_start_a3 .. :try_end_ad} :catchall_75
+.end method
diff -Npruw stock-framework/smali/android/privacy/PrivacySettings$1.smali pdroid-framework/smali/android/privacy/PrivacySettings$1.smali
--- stock-framework/smali/android/privacy/PrivacySettings$1.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/PrivacySettings$1.smali	2014-01-02 21:10:35.188310862 -0600
@@ -0,0 +1,77 @@
+.class final Landroid/privacy/PrivacySettings$1;
+.super Ljava/lang/Object;
+.source "PrivacySettings.java"
+
+# interfaces
+.implements Landroid/os/Parcelable$Creator;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/privacy/PrivacySettings;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x8
+    name = null
+.end annotation
+
+.annotation system Ldalvik/annotation/Signature;
+    value = {
+        "Ljava/lang/Object;",
+        "Landroid/os/Parcelable$Creator",
+        "<",
+        "Landroid/privacy/PrivacySettings;",
+        ">;"
+    }
+.end annotation
+
+
+# direct methods
+.method constructor <init>()V
+    .registers 1
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public createFromParcel(Landroid/os/Parcel;)Landroid/privacy/PrivacySettings;
+    .registers 3
+
+    new-instance v0, Landroid/privacy/PrivacySettings;
+
+    invoke-direct {v0, p1}, Landroid/privacy/PrivacySettings;-><init>(Landroid/os/Parcel;)V
+
+    return-object v0
+.end method
+
+.method public bridge synthetic createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
+    .registers 3
+
+    invoke-virtual {p0, p1}, Landroid/privacy/PrivacySettings$1;->createFromParcel(Landroid/os/Parcel;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public newArray(I)[Landroid/privacy/PrivacySettings;
+    .registers 3
+
+    new-array v0, p1, [Landroid/privacy/PrivacySettings;
+
+    return-object v0
+.end method
+
+.method public bridge synthetic newArray(I)[Ljava/lang/Object;
+    .registers 3
+
+    invoke-virtual {p0, p1}, Landroid/privacy/PrivacySettings$1;->newArray(I)[Landroid/privacy/PrivacySettings;
+
+    move-result-object v0
+
+    return-object v0
+.end method
diff -Npruw stock-framework/smali/android/privacy/PrivacySettingsManagerService.smali pdroid-framework/smali/android/privacy/PrivacySettingsManagerService.smali
--- stock-framework/smali/android/privacy/PrivacySettingsManagerService.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/PrivacySettingsManagerService.smali	2014-01-02 21:10:35.192310862 -0600
@@ -0,0 +1,677 @@
+.class public final Landroid/privacy/PrivacySettingsManagerService;
+.super Landroid/privacy/IPrivacySettingsManager$Stub;
+.source "PrivacySettingsManagerService.java"
+
+
+# static fields
+.field static final API_VERSION:D = 1.51
+
+.field static final MOD_DETAILS:Ljava/lang/String; = "OpenPDroid 1.0 by FFU5y, Mateor, wbedard; forked from PDroid 2.0\nPDroid 2.0 by CollegeDev; forked from PDroid\nPDroid by Syvat\'s\nAdditional contributions by Pastime1971"
+
+.field static final MOD_VERSION:D = 1.0
+
+.field private static final READ_PRIVACY_SETTINGS:Ljava/lang/String; = "android.privacy.READ_PRIVACY_SETTINGS"
+
+.field private static final TAG:Ljava/lang/String; = "PrivacySettingsManagerService"
+
+.field private static final WRITE_PRIVACY_SETTINGS:Ljava/lang/String; = "android.privacy.WRITE_PRIVACY_SETTINGS"
+
+.field public static obs:Landroid/privacy/PrivacyFileObserver;
+
+.field private static sendNotifications:Z
+
+
+# instance fields
+.field private bootCompleted:Z
+
+.field private context:Landroid/content/Context;
+
+.field private enabled:Z
+
+.field private notificationsEnabled:Z
+
+.field private persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 1
+
+    const/4 v0, 0x1
+
+    sput-boolean v0, Landroid/privacy/PrivacySettingsManagerService;->sendNotifications:Z
+
+    return-void
+.end method
+
+.method public constructor <init>(Landroid/content/Context;)V
+    .registers 5
+
+    invoke-direct {p0}, Landroid/privacy/IPrivacySettingsManager$Stub;-><init>()V
+
+    const-string v0, "PrivacySettingsManagerService"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "PrivacySettingsManagerService - initializing for package: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {p1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " UID: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettingsManagerService;->context:Landroid/content/Context;
+
+    new-instance v0, Landroid/privacy/PrivacyPersistenceAdapter;
+
+    invoke-direct {v0, p1}, Landroid/privacy/PrivacyPersistenceAdapter;-><init>(Landroid/content/Context;)V
+
+    iput-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+    new-instance v0, Landroid/privacy/PrivacyFileObserver;
+
+    const-string v1, "/data/system/privacy"
+
+    invoke-direct {v0, v1, p0}, Landroid/privacy/PrivacyFileObserver;-><init>(Ljava/lang/String;Landroid/privacy/PrivacySettingsManagerService;)V
+
+    sput-object v0, Landroid/privacy/PrivacySettingsManagerService;->obs:Landroid/privacy/PrivacyFileObserver;
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+    const-string v1, "enabled"
+
+    invoke-virtual {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->getValue(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v0
+
+    const-string v1, "1"
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    iput-boolean v0, p0, Landroid/privacy/PrivacySettingsManagerService;->enabled:Z
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+    const-string/jumbo v1, "notifications_enabled"
+
+    invoke-virtual {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->getValue(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v0
+
+    const-string v1, "1"
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    iput-boolean v0, p0, Landroid/privacy/PrivacySettingsManagerService;->notificationsEnabled:Z
+
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Landroid/privacy/PrivacySettingsManagerService;->bootCompleted:Z
+
+    return-void
+.end method
+
+.method private checkCallerCanReadOrThrow()V
+    .registers 4
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v0
+
+    const/16 v1, 0x3e8
+
+    if-ne v0, v1, :cond_9
+
+    :goto_8
+    return-void
+
+    :cond_9
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->context:Landroid/content/Context;
+
+    const-string v1, "android.privacy.READ_PRIVACY_SETTINGS"
+
+    const-string v2, "Requires READ_PRIVACY_SETTINGS"
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    goto :goto_8
+.end method
+
+.method private checkCallerCanReadSettings()Z
+    .registers 3
+
+    :try_start_0
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsManagerService;->checkCallerCanReadOrThrow()V
+    :try_end_3
+    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_3} :catch_5
+
+    const/4 v1, 0x1
+
+    :goto_4
+    return v1
+
+    :catch_5
+    move-exception v0
+
+    const/4 v1, 0x0
+
+    goto :goto_4
+.end method
+
+.method private checkCallerCanWriteOrThrow()V
+    .registers 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->context:Landroid/content/Context;
+
+    const-string v1, "android.privacy.WRITE_PRIVACY_SETTINGS"
+
+    const-string v2, "Requires WRITE_PRIVACY_SETTINGS"
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    return-void
+.end method
+
+.method private checkCallerCanWriteSettings()Z
+    .registers 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    :try_start_0
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsManagerService;->checkCallerCanWriteOrThrow()V
+    :try_end_3
+    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_3} :catch_5
+
+    const/4 v1, 0x1
+
+    :goto_4
+    return v1
+
+    :catch_5
+    move-exception v0
+
+    const/4 v1, 0x0
+
+    goto :goto_4
+.end method
+
+
+# virtual methods
+.method public addObserver(Ljava/lang/String;)V
+    .registers 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsManagerService;->checkCallerCanWriteOrThrow()V
+
+    sget-object v0, Landroid/privacy/PrivacySettingsManagerService;->obs:Landroid/privacy/PrivacyFileObserver;
+
+    invoke-virtual {v0, p1}, Landroid/privacy/PrivacyFileObserver;->addObserver(Ljava/lang/String;)V
+
+    return-void
+.end method
+
+.method public deleteSettings(Ljava/lang/String;)Z
+    .registers 7
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v4, 0x1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    const/16 v3, 0x3e8
+
+    if-eq v2, v3, :cond_c
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsManagerService;->checkCallerCanWriteOrThrow()V
+
+    :cond_c
+    iget-object v2, p0, Landroid/privacy/PrivacySettingsManagerService;->persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+    invoke-virtual {v2, p1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteSettings(Ljava/lang/String;)Z
+
+    move-result v1
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "/data/system/privacy/"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v0
+
+    new-instance v2, Ljava/io/File;
+
+    invoke-direct {v2, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Ljava/io/File;->exists()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_38
+
+    if-ne v1, v4, :cond_38
+
+    sget-object v2, Landroid/privacy/PrivacySettingsManagerService;->obs:Landroid/privacy/PrivacyFileObserver;
+
+    invoke-virtual {v2, v0}, Landroid/privacy/PrivacyFileObserver;->addObserver(Ljava/lang/String;)V
+
+    :cond_37
+    :goto_37
+    return v1
+
+    :cond_38
+    if-ne v1, v4, :cond_37
+
+    sget-object v2, Landroid/privacy/PrivacySettingsManagerService;->obs:Landroid/privacy/PrivacyFileObserver;
+
+    iget-object v2, v2, Landroid/privacy/PrivacyFileObserver;->children:Ljava/util/HashMap;
+
+    invoke-virtual {v2, v0}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    goto :goto_37
+.end method
+
+.method public getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+    .registers 4
+
+    iget-boolean v0, p0, Landroid/privacy/PrivacySettingsManagerService;->enabled:Z
+
+    if-nez v0, :cond_2e
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v0
+
+    const-string v1, "com.privacy.pdroid"
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_2e
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v0
+
+    const-string v1, "com.privacy.pdroid.Addon"
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_2e
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v0
+
+    const-string v1, "com.android.privacy.pdroid.extension"
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_35
+
+    :cond_2e
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+    invoke-virtual {v0, p1}, Landroid/privacy/PrivacyPersistenceAdapter;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v0
+
+    :goto_34
+    return-object v0
+
+    :cond_35
+    const/4 v0, 0x0
+
+    goto :goto_34
+.end method
+
+.method public notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    .registers 8
+
+    iget-boolean v1, p0, Landroid/privacy/PrivacySettingsManagerService;->bootCompleted:Z
+
+    if-eqz v1, :cond_38
+
+    iget-boolean v1, p0, Landroid/privacy/PrivacySettingsManagerService;->notificationsEnabled:Z
+
+    if-eqz v1, :cond_38
+
+    sget-boolean v1, Landroid/privacy/PrivacySettingsManagerService;->sendNotifications:Z
+
+    if-eqz v1, :cond_38
+
+    new-instance v0, Landroid/content/Intent;
+
+    invoke-direct {v0}, Landroid/content/Intent;-><init>()V
+
+    const-string v1, "com.privacy.pdroid.PRIVACY_NOTIFICATION"
+
+    invoke-virtual {v0, v1}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;
+
+    const-string/jumbo v1, "packageName"
+
+    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    const-string/jumbo v1, "uid"
+
+    const/4 v2, -0x1
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;
+
+    const-string v1, "accessMode"
+
+    invoke-virtual {v0, v1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;B)Landroid/content/Intent;
+
+    const-string v1, "dataType"
+
+    invoke-virtual {v0, v1, p3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    const-string/jumbo v1, "output"
+
+    invoke-virtual {v0, v1, p4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManagerService;->context:Landroid/content/Context;
+
+    invoke-virtual {v1, v0}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V
+
+    :cond_38
+    return-void
+.end method
+
+.method public purgeSettings()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManagerService;->persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+    invoke-virtual {v0}, Landroid/privacy/PrivacyPersistenceAdapter;->purgeSettings()Z
+
+    move-result v0
+
+    return v0
+.end method
+
+.method public registerObservers()V
+    .registers 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsManagerService;->checkCallerCanWriteOrThrow()V
+
+    new-instance v0, Landroid/privacy/PrivacyFileObserver;
+
+    const-string v1, "/data/system/privacy"
+
+    invoke-direct {v0, v1, p0}, Landroid/privacy/PrivacyFileObserver;-><init>(Ljava/lang/String;Landroid/privacy/PrivacySettingsManagerService;)V
+
+    sput-object v0, Landroid/privacy/PrivacySettingsManagerService;->obs:Landroid/privacy/PrivacyFileObserver;
+
+    return-void
+.end method
+
+.method public saveSettings(Landroid/privacy/PrivacySettings;)Z
+    .registers 6
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const-string v1, "PrivacySettingsManagerService"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v3, "saveSettings - checking if caller (UID: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, ") has sufficient permissions"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v1
+
+    const/16 v2, 0x3e8
+
+    if-eq v1, v2, :cond_2e
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsManagerService;->checkCallerCanWriteOrThrow()V
+
+    :cond_2e
+    const-string v1, "PrivacySettingsManagerService"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v3, "saveSettings - "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManagerService;->persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+    invoke-virtual {v1, p1}, Landroid/privacy/PrivacyPersistenceAdapter;->saveSettings(Landroid/privacy/PrivacySettings;)Z
+
+    move-result v0
+
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_59
+
+    sget-object v1, Landroid/privacy/PrivacySettingsManagerService;->obs:Landroid/privacy/PrivacyFileObserver;
+
+    invoke-virtual {p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Landroid/privacy/PrivacyFileObserver;->addObserver(Ljava/lang/String;)V
+
+    :cond_59
+    return v0
+.end method
+
+.method public setBootCompleted()V
+    .registers 2
+
+    const/4 v0, 0x1
+
+    iput-boolean v0, p0, Landroid/privacy/PrivacySettingsManagerService;->bootCompleted:Z
+
+    return-void
+.end method
+
+.method public setEnabled(Z)Z
+    .registers 6
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v1, 0x1
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsManagerService;->checkCallerCanWriteOrThrow()V
+
+    if-eqz p1, :cond_15
+
+    const-string v0, "1"
+
+    :goto_8
+    iget-object v2, p0, Landroid/privacy/PrivacySettingsManagerService;->persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+    const-string v3, "enabled"
+
+    invoke-virtual {v2, v3, v0}, Landroid/privacy/PrivacyPersistenceAdapter;->setValue(Ljava/lang/String;Ljava/lang/String;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_18
+
+    iput-boolean v1, p0, Landroid/privacy/PrivacySettingsManagerService;->enabled:Z
+
+    :goto_14
+    return v1
+
+    :cond_15
+    const-string v0, "0"
+
+    goto :goto_8
+
+    :cond_18
+    const/4 v1, 0x0
+
+    goto :goto_14
+.end method
+
+.method public setNotificationsEnabled(Z)Z
+    .registers 6
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v1, 0x1
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsManagerService;->checkCallerCanWriteOrThrow()V
+
+    if-eqz p1, :cond_18
+
+    const-string v0, "1"
+
+    :goto_8
+    iget-object v2, p0, Landroid/privacy/PrivacySettingsManagerService;->persistenceAdapter:Landroid/privacy/PrivacyPersistenceAdapter;
+
+    const-string/jumbo v3, "notifications_enabled"
+
+    invoke-virtual {v2, v3, v0}, Landroid/privacy/PrivacyPersistenceAdapter;->setValue(Ljava/lang/String;Ljava/lang/String;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_1b
+
+    iput-boolean v1, p0, Landroid/privacy/PrivacySettingsManagerService;->notificationsEnabled:Z
+
+    iput-boolean v1, p0, Landroid/privacy/PrivacySettingsManagerService;->bootCompleted:Z
+
+    :goto_17
+    return v1
+
+    :cond_18
+    const-string v0, "0"
+
+    goto :goto_8
+
+    :cond_1b
+    const/4 v1, 0x0
+
+    goto :goto_17
+.end method
diff -Npruw stock-framework/smali/android/privacy/PrivacySettingsManager.smali pdroid-framework/smali/android/privacy/PrivacySettingsManager.smali
--- stock-framework/smali/android/privacy/PrivacySettingsManager.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/PrivacySettingsManager.smali	2014-01-02 21:10:35.192310862 -0600
@@ -0,0 +1,528 @@
+.class public final Landroid/privacy/PrivacySettingsManager;
+.super Ljava/lang/Object;
+.source "PrivacySettingsManager.java"
+
+
+# static fields
+.field public static final ACTION_PRIVACY_NOTIFICATION:Ljava/lang/String; = "com.privacy.pdroid.PRIVACY_NOTIFICATION"
+
+.field public static final ACTION_PRIVACY_NOTIFICATION_ADDON:Ljava/lang/String; = "com.privacy.pdroid.PRIVACY_NOTIFICATION_ADDON"
+
+.field private static final TAG:Ljava/lang/String; = "PrivacySettingsManager"
+
+
+# instance fields
+.field private service:Landroid/privacy/IPrivacySettingsManager;
+
+
+# direct methods
+.method public constructor <init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+    .registers 3
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    iput-object p2, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public addObserver(Ljava/lang/String;)V
+    .registers 5
+
+    :try_start_0
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v1, :cond_a
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v1, p1}, Landroid/privacy/IPrivacySettingsManager;->addObserver(Ljava/lang/String;)V
+
+    :goto_9
+    return-void
+
+    :cond_a
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "PrivacySettingsManager:addObserver: PrivacySettingsManagerService is null"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_11
+    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_11} :catch_12
+
+    goto :goto_9
+
+    :catch_12
+    move-exception v0
+
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "RemoteException in addObserver: "
+
+    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_9
+.end method
+
+.method public deleteSettings(Ljava/lang/String;)Z
+    .registers 6
+
+    const/4 v1, 0x0
+
+    :try_start_1
+    iget-object v2, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v2, :cond_c
+
+    iget-object v2, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v2, p1}, Landroid/privacy/IPrivacySettingsManager;->deleteSettings(Ljava/lang/String;)Z
+
+    move-result v1
+
+    :goto_b
+    return v1
+
+    :cond_c
+    const-string v2, "PrivacySettingsManager"
+
+    const-string v3, "PrivacySettingsManager:deleteSettings: PrivacySettingsManagerService is null"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_13
+    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_13} :catch_14
+
+    goto :goto_b
+
+    :catch_14
+    move-exception v0
+
+    const-string v2, "PrivacySettingsManager"
+
+    const-string v3, "RemoteException in deleteSettings: "
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_b
+.end method
+
+.method public deleteSettings(Ljava/lang/String;I)Z
+    .registers 4
+    .annotation runtime Ljava/lang/Deprecated;
+    .end annotation
+
+    invoke-virtual {p0, p1}, Landroid/privacy/PrivacySettingsManager;->deleteSettings(Ljava/lang/String;)Z
+
+    move-result v0
+
+    return v0
+.end method
+
+.method public getApiVersion()D
+    .registers 3
+
+    const-wide v0, 0x3ff828f5c28f5c29L
+
+    return-wide v0
+.end method
+
+.method public getModDetails()Ljava/lang/String;
+    .registers 2
+
+    const-string v0, "OpenPDroid 1.0 by FFU5y, Mateor, wbedard; forked from PDroid 2.0\nPDroid 2.0 by CollegeDev; forked from PDroid\nPDroid by Syvat\'s\nAdditional contributions by Pastime1971"
+
+    return-object v0
+.end method
+
+.method public getModVersion()D
+    .registers 3
+
+    const-wide/high16 v0, 0x3ff0
+
+    return-wide v0
+.end method
+
+.method public getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+    .registers 6
+
+    const/4 v1, 0x0
+
+    :try_start_1
+    iget-object v2, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v2, :cond_c
+
+    iget-object v2, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v2, p1}, Landroid/privacy/IPrivacySettingsManager;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v1
+
+    :goto_b
+    return-object v1
+
+    :cond_c
+    const-string v2, "PrivacySettingsManager"
+
+    const-string v3, "getSettings - PrivacySettingsManagerService is null"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_13
+    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_13} :catch_14
+
+    goto :goto_b
+
+    :catch_14
+    move-exception v0
+
+    invoke-virtual {v0}, Landroid/os/RemoteException;->printStackTrace()V
+
+    goto :goto_b
+.end method
+
+.method public getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+    .registers 4
+    .annotation runtime Ljava/lang/Deprecated;
+    .end annotation
+
+    invoke-virtual {p0, p1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public getVersion()D
+    .registers 3
+    .annotation runtime Ljava/lang/Deprecated;
+    .end annotation
+
+    const-wide v0, 0x3ff828f5c28f5c29L
+
+    return-wide v0
+.end method
+
+.method public isServiceAvailable()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v0, :cond_6
+
+    const/4 v0, 0x1
+
+    :goto_5
+    return v0
+
+    :cond_6
+    const/4 v0, 0x0
+
+    goto :goto_5
+.end method
+
+.method public notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+    .registers 8
+
+    :try_start_0
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v1, :cond_a
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v1, p1, p2, p3, p4}, Landroid/privacy/IPrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    :goto_9
+    return-void
+
+    :cond_a
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "PrivacySettingsManager:notification: PrivacySettingsManagerService is null"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_11
+    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_11} :catch_12
+
+    goto :goto_9
+
+    :catch_12
+    move-exception v0
+
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "RemoteException in notification: "
+
+    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_9
+.end method
+
+.method public notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    .registers 6
+    .annotation runtime Ljava/lang/Deprecated;
+    .end annotation
+
+    invoke-virtual {p0, p1, p2, p3, p4}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    return-void
+.end method
+
+.method public notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    .registers 7
+    .annotation runtime Ljava/lang/Deprecated;
+    .end annotation
+
+    invoke-virtual {p0, p1, p3, p4, p5}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;)V
+
+    return-void
+.end method
+
+.method public purgeSettings()Z
+    .registers 4
+
+    :try_start_0
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v1, :cond_b
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v1}, Landroid/privacy/IPrivacySettingsManager;->purgeSettings()Z
+
+    move-result v1
+
+    :goto_a
+    return v1
+
+    :cond_b
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "PrivacySettingsManager:purgeSettings: PrivacySettingsManagerService is null"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_12
+    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_12} :catch_14
+
+    :goto_12
+    const/4 v1, 0x0
+
+    goto :goto_a
+
+    :catch_14
+    move-exception v0
+
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "RemoteException in purgeSettings: "
+
+    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_12
+.end method
+
+.method public registerObservers()V
+    .registers 4
+
+    :try_start_0
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v1, :cond_a
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v1}, Landroid/privacy/IPrivacySettingsManager;->registerObservers()V
+
+    :goto_9
+    return-void
+
+    :cond_a
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "PrivacySettingsManager:registerObservers: PrivacySettingsManagerService is null"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_11
+    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_11} :catch_12
+
+    goto :goto_9
+
+    :catch_12
+    move-exception v0
+
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "RemoteException in registerObservers: "
+
+    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_9
+.end method
+
+.method public saveSettings(Landroid/privacy/PrivacySettings;)Z
+    .registers 6
+
+    const/4 v1, 0x0
+
+    :try_start_1
+    iget-object v2, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v2, :cond_c
+
+    iget-object v2, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v2, p1}, Landroid/privacy/IPrivacySettingsManager;->saveSettings(Landroid/privacy/PrivacySettings;)Z
+
+    move-result v1
+
+    :goto_b
+    return v1
+
+    :cond_c
+    const-string v2, "PrivacySettingsManager"
+
+    const-string/jumbo v3, "saveSettings - PrivacySettingsManagerService is null"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_14
+    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_14} :catch_15
+
+    goto :goto_b
+
+    :catch_15
+    move-exception v0
+
+    const-string v2, "PrivacySettingsManager"
+
+    const-string v3, "RemoteException in saveSettings: "
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_b
+.end method
+
+.method public setBootCompleted()V
+    .registers 4
+
+    :try_start_0
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v1, :cond_a
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v1}, Landroid/privacy/IPrivacySettingsManager;->setBootCompleted()V
+
+    :goto_9
+    return-void
+
+    :cond_a
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "PrivacySettingsManager:setBootCompleted: PrivacySettingsManagerService is null"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_11
+    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_11} :catch_12
+
+    goto :goto_9
+
+    :catch_12
+    move-exception v0
+
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "RemoteException in setBootCompleted: "
+
+    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_9
+.end method
+
+.method public setEnabled(Z)Z
+    .registers 5
+
+    :try_start_0
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v1, :cond_b
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v1, p1}, Landroid/privacy/IPrivacySettingsManager;->setEnabled(Z)Z
+
+    move-result v1
+
+    :goto_a
+    return v1
+
+    :cond_b
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "PrivacySettingsManager:setEnabled: PrivacySettingsManagerService is null"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_12
+    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_12} :catch_14
+
+    :goto_12
+    const/4 v1, 0x0
+
+    goto :goto_a
+
+    :catch_14
+    move-exception v0
+
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "RemoteException in setEnabled: "
+
+    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_12
+.end method
+
+.method public setNotificationsEnabled(Z)Z
+    .registers 5
+
+    :try_start_0
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    if-eqz v1, :cond_b
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettingsManager;->service:Landroid/privacy/IPrivacySettingsManager;
+
+    invoke-interface {v1, p1}, Landroid/privacy/IPrivacySettingsManager;->setNotificationsEnabled(Z)Z
+
+    move-result v1
+
+    :goto_a
+    return v1
+
+    :cond_b
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "PrivacySettingsManager:setNotificationsEnabled: PrivacySettingsManagerService is null"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_12
+    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_12} :catch_14
+
+    :goto_12
+    const/4 v1, 0x0
+
+    goto :goto_a
+
+    :catch_14
+    move-exception v0
+
+    const-string v1, "PrivacySettingsManager"
+
+    const-string v2, "RemoteException in setNotificationsEnabled: "
+
+    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_12
+.end method
diff -Npruw stock-framework/smali/android/privacy/PrivacySettings.smali pdroid-framework/smali/android/privacy/PrivacySettings.smali
--- stock-framework/smali/android/privacy/PrivacySettings.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/PrivacySettings.smali	2014-01-02 21:10:35.192310862 -0600
@@ -0,0 +1,3295 @@
+.class public final Landroid/privacy/PrivacySettings;
+.super Landroid/privacy/PrivacySettingsStub;
+.source "PrivacySettings.java"
+
+# interfaces
+.implements Landroid/os/Parcelable;
+
+
+# static fields
+.field public static final CREATOR:Landroid/os/Parcelable$Creator; = null
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/os/Parcelable$Creator",
+            "<",
+            "Landroid/privacy/PrivacySettings;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field public static final CUSTOM:B = 0x2t
+
+.field public static final DATA_ACCOUNTS_LIST:Ljava/lang/String; = "accountsList"
+
+.field public static final DATA_ANDROID_ID:Ljava/lang/String; = "android_id"
+
+.field public static final DATA_AUTH_TOKENS:Ljava/lang/String; = "authTokens"
+
+.field public static final DATA_BOOKMARKS:Ljava/lang/String; = "bookmarks"
+
+.field public static final DATA_CALENDAR:Ljava/lang/String; = "calendar"
+
+.field public static final DATA_CALL_LOG:Ljava/lang/String; = "callLog"
+
+.field public static final DATA_CAMERA:Ljava/lang/String; = "camera"
+
+.field public static final DATA_CONTACTS:Ljava/lang/String; = "contacts"
+
+.field public static final DATA_DEVICE_ID:Ljava/lang/String; = "deviceID"
+
+.field public static final DATA_ICC_ACCESS:Ljava/lang/String; = "iccAccess"
+
+.field public static final DATA_INCOMING_CALL:Ljava/lang/String; = "incomingCall"
+
+.field public static final DATA_INTENT_BOOT_COMPLETED:Ljava/lang/String; = "intentBootCompleted"
+
+.field public static final DATA_IP_TABLES:Ljava/lang/String; = "iptables"
+
+.field public static final DATA_LINE_1_NUMBER:Ljava/lang/String; = "line1Number"
+
+.field public static final DATA_LOCATION_GPS:Ljava/lang/String; = "locationGPS"
+
+.field public static final DATA_LOCATION_NETWORK:Ljava/lang/String; = "locationNetwork"
+
+.field public static final DATA_MMS:Ljava/lang/String; = "mms"
+
+.field public static final DATA_MMS_SMS:Ljava/lang/String; = "mmsSms"
+
+.field public static final DATA_NETWORK_INFO_CURRENT:Ljava/lang/String; = "networkInfoCurrent"
+
+.field public static final DATA_NETWORK_INFO_SIM:Ljava/lang/String; = "networkInfoSIM"
+
+.field public static final DATA_OUTGOING_CALL:Ljava/lang/String; = "outgoingCall"
+
+.field public static final DATA_PHONE_CALL:Ljava/lang/String; = "phoneCall"
+
+.field public static final DATA_RECORD_AUDIO:Ljava/lang/String; = "recordAudio"
+
+.field public static final DATA_SEND_MMS:Ljava/lang/String; = "sendMms"
+
+.field public static final DATA_SIM_SERIAL:Ljava/lang/String; = "simSerial"
+
+.field public static final DATA_SMS:Ljava/lang/String; = "sms"
+
+.field public static final DATA_SMS_SEND:Ljava/lang/String; = "SmsSend"
+
+.field public static final DATA_SUBSCRIBER_ID:Ljava/lang/String; = "subscriberID"
+
+.field public static final DATA_SWITCH_CONNECTIVITY:Ljava/lang/String; = "switchconnectivity"
+
+.field public static final DATA_SWITCH_WIFI_STATE:Ljava/lang/String; = "switchWifiState"
+
+.field public static final DATA_SYSTEM_LOGS:Ljava/lang/String; = "systemLogs"
+
+.field public static final DATA_WIFI_INFO:Ljava/lang/String; = "wifiInfo"
+
+.field public static final EMPTY:B = 0x1t
+
+.field public static final ID_PATTERN:[Ljava/lang/String; = null
+
+.field public static final RANDOM:B = 0x3t
+
+.field public static final REAL:B = 0x0t
+
+.field public static final SETTING_NOTIFY_OFF:B = 0x0t
+
+.field public static final SETTING_NOTIFY_ON:B = 0x1t
+
+
+# instance fields
+.field private final _id:Ljava/lang/Integer;
+
+.field private accountsAuthTokensSetting:B
+
+.field private accountsSetting:B
+
+.field private addOnManagementSetting:B
+
+.field private allowedContacts:[I
+
+.field private androidID:Ljava/lang/String;
+
+.field private androidIdSetting:B
+
+.field private bookmarksSetting:B
+
+.field private calendarSetting:B
+
+.field private callLogSetting:B
+
+.field private cameraSetting:B
+
+.field private contactsSetting:B
+
+.field private deviceId:Ljava/lang/String;
+
+.field private deviceIdSetting:B
+
+.field private forceOnlineState:B
+
+.field private iccAccessSetting:B
+
+.field private incomingCallsSetting:B
+
+.field private intentBootCompletedSetting:B
+
+.field private ipTableProtectSetting:B
+
+.field private line1Number:Ljava/lang/String;
+
+.field private line1NumberSetting:B
+
+.field private locationGpsLat:Ljava/lang/String;
+
+.field private locationGpsLon:Ljava/lang/String;
+
+.field private locationGpsSetting:B
+
+.field private locationNetworkLat:Ljava/lang/String;
+
+.field private locationNetworkLon:Ljava/lang/String;
+
+.field private locationNetworkSetting:B
+
+.field private mmsSetting:B
+
+.field private networkInfoSetting:B
+
+.field private notificationSetting:B
+
+.field private outgoingCallsSetting:B
+
+.field private packageName:Ljava/lang/String;
+
+.field private phoneCallSetting:B
+
+.field private recordAudioSetting:B
+
+.field private sendMmsSetting:B
+
+.field private simInfoSetting:B
+
+.field private simSerialNumber:Ljava/lang/String;
+
+.field private simSerialNumberSetting:B
+
+.field private smsSendSetting:B
+
+.field private smsSetting:B
+
+.field private subscriberId:Ljava/lang/String;
+
+.field private subscriberIdSetting:B
+
+.field private switchConnectivitySetting:B
+
+.field private switchWifiStateSetting:B
+
+.field private systemLogsSetting:B
+
+.field private uid:I
+
+.field private wifiInfoSetting:B
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 3
+
+    const/16 v0, 0x10
+
+    new-array v0, v0, [Ljava/lang/String;
+
+    const/4 v1, 0x0
+
+    const-string v2, "0"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x1
+
+    const-string v2, "1"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x2
+
+    const-string v2, "2"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x3
+
+    const-string v2, "3"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x4
+
+    const-string v2, "4"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x5
+
+    const-string v2, "5"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x6
+
+    const-string v2, "6"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x7
+
+    const-string v2, "7"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x8
+
+    const-string v2, "8"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x9
+
+    const-string v2, "9"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xa
+
+    const-string v2, "a"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xb
+
+    const-string v2, "b"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xc
+
+    const-string v2, "c"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xd
+
+    const-string v2, "d"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xe
+
+    const-string v2, "e"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xf
+
+    const-string v2, "f"
+
+    aput-object v2, v0, v1
+
+    sput-object v0, Landroid/privacy/PrivacySettings;->ID_PATTERN:[Ljava/lang/String;
+
+    new-instance v0, Landroid/privacy/PrivacySettings$1;
+
+    invoke-direct {v0}, Landroid/privacy/PrivacySettings$1;-><init>()V
+
+    sput-object v0, Landroid/privacy/PrivacySettings;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    return-void
+.end method
+
+.method public constructor <init>(Landroid/os/Parcel;)V
+    .registers 4
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsStub;-><init>()V
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v0
+
+    const/4 v1, -0x1
+
+    if-ne v0, v1, :cond_122
+
+    const/4 v1, 0x0
+
+    :goto_b
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->_id:Ljava/lang/Integer;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->packageName:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v1
+
+    iput v1, p0, Landroid/privacy/PrivacySettings;->uid:I
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->deviceId:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->line1Number:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLat:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLon:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLat:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLon:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->networkInfoSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->simInfoSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumber:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->subscriberId:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->accountsSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->accountsAuthTokensSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->outgoingCallsSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->incomingCallsSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->contactsSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->calendarSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->mmsSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->smsSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->callLogSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->bookmarksSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->systemLogsSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->notificationSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->intentBootCompletedSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->cameraSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->recordAudioSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->createIntArray()[I
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->allowedContacts:[I
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->smsSendSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->phoneCallSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->ipTableProtectSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->iccAccessSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->addOnManagementSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->androidID:Ljava/lang/String;
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->wifiInfoSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->switchConnectivitySetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->sendMmsSetting:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->forceOnlineState:B
+
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v1
+
+    iput-byte v1, p0, Landroid/privacy/PrivacySettings;->switchWifiStateSetting:B
+
+    return-void
+
+    :cond_122
+    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v1
+
+    goto/16 :goto_b
+.end method
+
+.method public constructor <init>(Ljava/lang/Integer;Ljava/lang/String;I)V
+    .registers 7
+
+    const/4 v2, 0x1
+
+    const/4 v1, 0x0
+
+    const/4 v0, 0x0
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsStub;-><init>()V
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->_id:Ljava/lang/Integer;
+
+    iput-object p2, p0, Landroid/privacy/PrivacySettings;->packageName:Ljava/lang/String;
+
+    iput p3, p0, Landroid/privacy/PrivacySettings;->uid:I
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->deviceId:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->line1Number:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLat:Ljava/lang/String;
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLon:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLat:Ljava/lang/String;
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLon:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->networkInfoSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->simInfoSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumber:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->subscriberId:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsAuthTokensSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->outgoingCallsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->incomingCallsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->contactsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->calendarSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->mmsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->callLogSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->bookmarksSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->systemLogsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->notificationSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->intentBootCompletedSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->cameraSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->recordAudioSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->allowedContacts:[I
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSendSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->phoneCallSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->ipTableProtectSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->iccAccessSetting:B
+
+    iput-byte v2, p0, Landroid/privacy/PrivacySettings;->addOnManagementSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->androidID:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->wifiInfoSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->switchConnectivitySetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->sendMmsSetting:B
+
+    iput-byte v2, p0, Landroid/privacy/PrivacySettings;->forceOnlineState:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->switchWifiStateSetting:B
+
+    return-void
+.end method
+
+.method public constructor <init>(Ljava/lang/Integer;Ljava/lang/String;IBLjava/lang/String;BLjava/lang/String;BLjava/lang/String;Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;BBBLjava/lang/String;BLjava/lang/String;BBBBBBBBBBBBBBBB[IBBBBBBLjava/lang/String;BBBBB)V
+    .registers 50
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsStub;-><init>()V
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->_id:Ljava/lang/Integer;
+
+    iput-object p2, p0, Landroid/privacy/PrivacySettings;->packageName:Ljava/lang/String;
+
+    iput p3, p0, Landroid/privacy/PrivacySettings;->uid:I
+
+    iput-byte p4, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    iput-object p5, p0, Landroid/privacy/PrivacySettings;->deviceId:Ljava/lang/String;
+
+    iput-byte p6, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    iput-object p7, p0, Landroid/privacy/PrivacySettings;->line1Number:Ljava/lang/String;
+
+    iput-byte p8, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    iput-object p9, p0, Landroid/privacy/PrivacySettings;->locationGpsLat:Ljava/lang/String;
+
+    iput-object p10, p0, Landroid/privacy/PrivacySettings;->locationGpsLon:Ljava/lang/String;
+
+    iput-byte p11, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    iput-object p12, p0, Landroid/privacy/PrivacySettings;->locationNetworkLat:Ljava/lang/String;
+
+    iput-object p13, p0, Landroid/privacy/PrivacySettings;->locationNetworkLon:Ljava/lang/String;
+
+    iput-byte p14, p0, Landroid/privacy/PrivacySettings;->networkInfoSetting:B
+
+    move/from16 v0, p15
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->simInfoSetting:B
+
+    move/from16 v0, p16
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    move-object/from16 v0, p17
+
+    iput-object v0, p0, Landroid/privacy/PrivacySettings;->simSerialNumber:Ljava/lang/String;
+
+    move/from16 v0, p18
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    move-object/from16 v0, p19
+
+    iput-object v0, p0, Landroid/privacy/PrivacySettings;->subscriberId:Ljava/lang/String;
+
+    move/from16 v0, p20
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsSetting:B
+
+    move/from16 v0, p21
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsAuthTokensSetting:B
+
+    move/from16 v0, p22
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->outgoingCallsSetting:B
+
+    move/from16 v0, p23
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->incomingCallsSetting:B
+
+    move/from16 v0, p24
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->contactsSetting:B
+
+    move/from16 v0, p25
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->calendarSetting:B
+
+    move/from16 v0, p26
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->mmsSetting:B
+
+    move/from16 v0, p27
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSetting:B
+
+    move/from16 v0, p28
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->callLogSetting:B
+
+    move/from16 v0, p29
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->bookmarksSetting:B
+
+    move/from16 v0, p30
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->systemLogsSetting:B
+
+    move/from16 v0, p34
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->notificationSetting:B
+
+    move/from16 v0, p35
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->intentBootCompletedSetting:B
+
+    move/from16 v0, p32
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->cameraSetting:B
+
+    move/from16 v0, p33
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->recordAudioSetting:B
+
+    move-object/from16 v0, p36
+
+    iput-object v0, p0, Landroid/privacy/PrivacySettings;->allowedContacts:[I
+
+    move/from16 v0, p37
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSendSetting:B
+
+    move/from16 v0, p38
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->phoneCallSetting:B
+
+    move/from16 v0, p39
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->ipTableProtectSetting:B
+
+    move/from16 v0, p40
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->iccAccessSetting:B
+
+    move/from16 v0, p41
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->addOnManagementSetting:B
+
+    move/from16 v0, p42
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    move-object/from16 v0, p43
+
+    iput-object v0, p0, Landroid/privacy/PrivacySettings;->androidID:Ljava/lang/String;
+
+    move/from16 v0, p44
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->wifiInfoSetting:B
+
+    move/from16 v0, p45
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->switchConnectivitySetting:B
+
+    move/from16 v0, p46
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->sendMmsSetting:B
+
+    move/from16 v0, p47
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->forceOnlineState:B
+
+    move/from16 v0, p48
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->switchWifiStateSetting:B
+
+    return-void
+.end method
+
+.method public constructor <init>(Ljava/lang/Integer;Ljava/lang/String;IZ)V
+    .registers 9
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x3
+
+    const/4 v1, 0x0
+
+    const/4 v0, 0x1
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettingsStub;-><init>()V
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->_id:Ljava/lang/Integer;
+
+    iput-object p2, p0, Landroid/privacy/PrivacySettings;->packageName:Ljava/lang/String;
+
+    iput p3, p0, Landroid/privacy/PrivacySettings;->uid:I
+
+    if-eqz p4, :cond_68
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->deviceId:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->line1Number:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLat:Ljava/lang/String;
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLon:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLat:Ljava/lang/String;
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLon:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->networkInfoSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->simInfoSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumber:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->subscriberId:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsAuthTokensSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->outgoingCallsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->incomingCallsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->contactsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->calendarSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->mmsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->callLogSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->bookmarksSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->systemLogsSetting:B
+
+    iput-byte v3, p0, Landroid/privacy/PrivacySettings;->notificationSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->intentBootCompletedSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->cameraSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->recordAudioSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->allowedContacts:[I
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSendSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->phoneCallSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->ipTableProtectSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->iccAccessSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->addOnManagementSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->androidID:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->wifiInfoSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->switchConnectivitySetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->sendMmsSetting:B
+
+    iput-byte v3, p0, Landroid/privacy/PrivacySettings;->forceOnlineState:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->switchWifiStateSetting:B
+
+    :goto_67
+    return-void
+
+    :cond_68
+    iput-byte v2, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->deviceId:Ljava/lang/String;
+
+    iput-byte v2, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->line1Number:Ljava/lang/String;
+
+    iput-byte v2, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLat:Ljava/lang/String;
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLon:Ljava/lang/String;
+
+    iput-byte v2, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLat:Ljava/lang/String;
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLon:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->networkInfoSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->simInfoSetting:B
+
+    iput-byte v2, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumber:Ljava/lang/String;
+
+    iput-byte v2, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->subscriberId:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsAuthTokensSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->outgoingCallsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->incomingCallsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->contactsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->calendarSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->mmsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->callLogSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->bookmarksSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->systemLogsSetting:B
+
+    iput-byte v3, p0, Landroid/privacy/PrivacySettings;->notificationSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->intentBootCompletedSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->cameraSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->recordAudioSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->allowedContacts:[I
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSendSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->phoneCallSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->ipTableProtectSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->iccAccessSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->addOnManagementSetting:B
+
+    iput-byte v2, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    iput-object v1, p0, Landroid/privacy/PrivacySettings;->androidID:Ljava/lang/String;
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->wifiInfoSetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->switchConnectivitySetting:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->sendMmsSetting:B
+
+    iput-byte v3, p0, Landroid/privacy/PrivacySettings;->forceOnlineState:B
+
+    iput-byte v0, p0, Landroid/privacy/PrivacySettings;->switchWifiStateSetting:B
+
+    goto :goto_67
+.end method
+
+.method private getRandomLat()Ljava/lang/String;
+    .registers 10
+
+    const-wide v7, 0x4056800000000000L
+
+    invoke-static {}, Ljava/lang/Math;->random()D
+
+    move-result-wide v3
+
+    const-wide v5, 0x4066800000000000L
+
+    mul-double v0, v3, v5
+
+    cmpl-double v3, v0, v7
+
+    if-lez v3, :cond_35
+
+    new-instance v2, Ljava/math/BigDecimal;
+
+    sub-double v3, v0, v7
+
+    invoke-direct {v2, v3, v4}, Ljava/math/BigDecimal;-><init>(D)V
+
+    :goto_1b
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const/4 v4, 0x6
+
+    const/4 v5, 0x4
+
+    invoke-virtual {v2, v4, v5}, Ljava/math/BigDecimal;->setScale(II)Ljava/math/BigDecimal;
+
+    move-result-object v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ""
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    return-object v3
+
+    :cond_35
+    new-instance v2, Ljava/math/BigDecimal;
+
+    neg-double v3, v0
+
+    invoke-direct {v2, v3, v4}, Ljava/math/BigDecimal;-><init>(D)V
+
+    goto :goto_1b
+.end method
+
+.method private getRandomLon()Ljava/lang/String;
+    .registers 10
+
+    const-wide v7, 0x4066800000000000L
+
+    invoke-static {}, Ljava/lang/Math;->random()D
+
+    move-result-wide v3
+
+    const-wide v5, 0x4076800000000000L
+
+    mul-double v0, v3, v5
+
+    cmpl-double v3, v0, v7
+
+    if-lez v3, :cond_35
+
+    new-instance v2, Ljava/math/BigDecimal;
+
+    sub-double v3, v0, v7
+
+    invoke-direct {v2, v3, v4}, Ljava/math/BigDecimal;-><init>(D)V
+
+    :goto_1b
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const/4 v4, 0x6
+
+    const/4 v5, 0x4
+
+    invoke-virtual {v2, v4, v5}, Ljava/math/BigDecimal;->setScale(II)Ljava/math/BigDecimal;
+
+    move-result-object v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ""
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    return-object v3
+
+    :cond_35
+    new-instance v2, Ljava/math/BigDecimal;
+
+    neg-double v3, v0
+
+    invoke-direct {v2, v3, v4}, Ljava/math/BigDecimal;-><init>(D)V
+
+    goto :goto_1b
+.end method
+
+
+# virtual methods
+.method public describeContents()I
+    .registers 2
+
+    const/4 v0, 0x0
+
+    return v0
+.end method
+
+.method public getAccountsAuthTokensSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsAuthTokensSetting:B
+
+    return v0
+.end method
+
+.method public getAccountsSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsSetting:B
+
+    return v0
+.end method
+
+.method public getAddOnManagementSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->addOnManagementSetting:B
+
+    return v0
+.end method
+
+.method public getAllowedContacts()[I
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->allowedContacts:[I
+
+    return-object v0
+.end method
+
+.method public getAndroidID()Ljava/lang/String;
+    .registers 6
+
+    iget-byte v3, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    const/4 v4, 0x1
+
+    if-ne v3, v4, :cond_9
+
+    const-string/jumbo v3, "q4a5w896ay21dr46"
+
+    :goto_8
+    return-object v3
+
+    :cond_9
+    iget-byte v3, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    const/4 v4, 0x3
+
+    if-ne v3, v4, :cond_36
+
+    new-instance v2, Ljava/util/Random;
+
+    invoke-direct {v2}, Ljava/util/Random;-><init>()V
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const/4 v0, 0x0
+
+    :goto_19
+    sget-object v3, Landroid/privacy/PrivacySettings;->ID_PATTERN:[Ljava/lang/String;
+
+    array-length v3, v3
+
+    if-ge v0, v3, :cond_31
+
+    sget-object v3, Landroid/privacy/PrivacySettings;->ID_PATTERN:[Ljava/lang/String;
+
+    sget-object v4, Landroid/privacy/PrivacySettings;->ID_PATTERN:[Ljava/lang/String;
+
+    array-length v4, v4
+
+    add-int/lit8 v4, v4, -0x1
+
+    invoke-virtual {v2, v4}, Ljava/util/Random;->nextInt(I)I
+
+    move-result v4
+
+    aget-object v3, v3, v4
+
+    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_19
+
+    :cond_31
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    goto :goto_8
+
+    :cond_36
+    iget-object v3, p0, Landroid/privacy/PrivacySettings;->androidID:Ljava/lang/String;
+
+    goto :goto_8
+.end method
+
+.method public getAndroidIdSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    return v0
+.end method
+
+.method public getBookmarksSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->bookmarksSetting:B
+
+    return v0
+.end method
+
+.method public getCalendarSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->calendarSetting:B
+
+    return v0
+.end method
+
+.method public getCallLogSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->callLogSetting:B
+
+    return v0
+.end method
+
+.method public getCameraSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->cameraSetting:B
+
+    return v0
+.end method
+
+.method public getContactsSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->contactsSetting:B
+
+    return v0
+.end method
+
+.method public getDeviceId()Ljava/lang/String;
+    .registers 9
+
+    const/4 v7, 0x0
+
+    const/16 v6, 0xf
+
+    iget-byte v3, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    const/4 v4, 0x1
+
+    if-ne v3, v4, :cond_b
+
+    const-string v3, ""
+
+    :goto_a
+    return-object v3
+
+    :cond_b
+    iget-byte v3, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    const/4 v4, 0x3
+
+    if-ne v3, v4, :cond_62
+
+    new-instance v1, Ljava/util/Random;
+
+    invoke-direct {v1}, Ljava/util/Random;-><init>()V
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v1}, Ljava/util/Random;->nextLong()J
+
+    move-result-wide v4
+
+    invoke-static {v4, v5}, Ljava/lang/Math;->abs(J)J
+
+    move-result-wide v4
+
+    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ""
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/String;->length()I
+
+    move-result v3
+
+    if-le v3, v6, :cond_3b
+
+    invoke-virtual {v2, v7, v6}, Ljava/lang/String;->substring(II)Ljava/lang/String;
+
+    move-result-object v3
+
+    goto :goto_a
+
+    :cond_3b
+    invoke-virtual {v2}, Ljava/lang/String;->length()I
+
+    move-result v0
+
+    :goto_3f
+    const/16 v3, 0x10
+
+    if-gt v0, v3, :cond_5d
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const/16 v4, 0x9
+
+    invoke-virtual {v1, v4}, Ljava/util/Random;->nextInt(I)I
+
+    move-result v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_3f
+
+    :cond_5d
+    invoke-virtual {v2, v7, v6}, Ljava/lang/String;->substring(II)Ljava/lang/String;
+
+    move-result-object v3
+
+    goto :goto_a
+
+    :cond_62
+    iget-object v3, p0, Landroid/privacy/PrivacySettings;->deviceId:Ljava/lang/String;
+
+    goto :goto_a
+.end method
+
+.method public getDeviceIdSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    return v0
+.end method
+
+.method public getForceOnlineState()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->forceOnlineState:B
+
+    return v0
+.end method
+
+.method public getIccAccessSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->iccAccessSetting:B
+
+    return v0
+.end method
+
+.method public getIncomingCallsSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->incomingCallsSetting:B
+
+    return v0
+.end method
+
+.method public getIntentBootCompletedSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->intentBootCompletedSetting:B
+
+    return v0
+.end method
+
+.method public getIpTableProtectSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->ipTableProtectSetting:B
+
+    return v0
+.end method
+
+.method public getLine1Number()Ljava/lang/String;
+    .registers 9
+
+    const/4 v7, 0x0
+
+    const/16 v6, 0xd
+
+    iget-byte v3, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    const/4 v4, 0x1
+
+    if-ne v3, v4, :cond_b
+
+    const-string v3, ""
+
+    :goto_a
+    return-object v3
+
+    :cond_b
+    iget-byte v3, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    const/4 v4, 0x3
+
+    if-ne v3, v4, :cond_68
+
+    new-instance v1, Ljava/util/Random;
+
+    invoke-direct {v1}, Ljava/util/Random;-><init>()V
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "+"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v1}, Ljava/util/Random;->nextLong()J
+
+    move-result-wide v4
+
+    invoke-static {v4, v5}, Ljava/lang/Math;->abs(J)J
+
+    move-result-wide v4
+
+    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ""
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/String;->length()I
+
+    move-result v3
+
+    if-le v3, v6, :cond_41
+
+    invoke-virtual {v2, v7, v6}, Ljava/lang/String;->substring(II)Ljava/lang/String;
+
+    move-result-object v3
+
+    goto :goto_a
+
+    :cond_41
+    invoke-virtual {v2}, Ljava/lang/String;->length()I
+
+    move-result v0
+
+    :goto_45
+    const/16 v3, 0xe
+
+    if-gt v0, v3, :cond_63
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const/16 v4, 0x9
+
+    invoke-virtual {v1, v4}, Ljava/util/Random;->nextInt(I)I
+
+    move-result v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_45
+
+    :cond_63
+    invoke-virtual {v2, v7, v6}, Ljava/lang/String;->substring(II)Ljava/lang/String;
+
+    move-result-object v3
+
+    goto :goto_a
+
+    :cond_68
+    iget-object v3, p0, Landroid/privacy/PrivacySettings;->line1Number:Ljava/lang/String;
+
+    goto :goto_a
+.end method
+
+.method public getLine1NumberSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    return v0
+.end method
+
+.method public getLocationGpsLat()Ljava/lang/String;
+    .registers 3
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_8
+
+    const-string v0, ""
+
+    :goto_7
+    return-object v0
+
+    :cond_8
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    const/4 v1, 0x3
+
+    if-ne v0, v1, :cond_12
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettings;->getRandomLat()Ljava/lang/String;
+
+    move-result-object v0
+
+    goto :goto_7
+
+    :cond_12
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->locationGpsLat:Ljava/lang/String;
+
+    goto :goto_7
+.end method
+
+.method public getLocationGpsLon()Ljava/lang/String;
+    .registers 3
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_8
+
+    const-string v0, ""
+
+    :goto_7
+    return-object v0
+
+    :cond_8
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    const/4 v1, 0x3
+
+    if-ne v0, v1, :cond_12
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettings;->getRandomLon()Ljava/lang/String;
+
+    move-result-object v0
+
+    goto :goto_7
+
+    :cond_12
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->locationGpsLon:Ljava/lang/String;
+
+    goto :goto_7
+.end method
+
+.method public getLocationGpsSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    return v0
+.end method
+
+.method public getLocationNetworkLat()Ljava/lang/String;
+    .registers 3
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_8
+
+    const-string v0, ""
+
+    :goto_7
+    return-object v0
+
+    :cond_8
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    const/4 v1, 0x3
+
+    if-ne v0, v1, :cond_12
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettings;->getRandomLat()Ljava/lang/String;
+
+    move-result-object v0
+
+    goto :goto_7
+
+    :cond_12
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkLat:Ljava/lang/String;
+
+    goto :goto_7
+.end method
+
+.method public getLocationNetworkLon()Ljava/lang/String;
+    .registers 3
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_8
+
+    const-string v0, ""
+
+    :goto_7
+    return-object v0
+
+    :cond_8
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    const/4 v1, 0x3
+
+    if-ne v0, v1, :cond_12
+
+    invoke-direct {p0}, Landroid/privacy/PrivacySettings;->getRandomLon()Ljava/lang/String;
+
+    move-result-object v0
+
+    goto :goto_7
+
+    :cond_12
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkLon:Ljava/lang/String;
+
+    goto :goto_7
+.end method
+
+.method public getLocationNetworkSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    return v0
+.end method
+
+.method public getMmsSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->mmsSetting:B
+
+    return v0
+.end method
+
+.method public getNetworkInfoSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->networkInfoSetting:B
+
+    return v0
+.end method
+
+.method public getNotificationSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->notificationSetting:B
+
+    return v0
+.end method
+
+.method public getOutgoingCallsSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->outgoingCallsSetting:B
+
+    return v0
+.end method
+
+.method public getPackageName()Ljava/lang/String;
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->packageName:Ljava/lang/String;
+
+    return-object v0
+.end method
+
+.method public getPhoneCallSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->phoneCallSetting:B
+
+    return v0
+.end method
+
+.method public getRecordAudioSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->recordAudioSetting:B
+
+    return v0
+.end method
+
+.method public getSendMmsSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->sendMmsSetting:B
+
+    return v0
+.end method
+
+.method public getSimInfoSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->simInfoSetting:B
+
+    return v0
+.end method
+
+.method public getSimSerialNumber()Ljava/lang/String;
+    .registers 5
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    const/4 v2, 0x1
+
+    if-ne v1, v2, :cond_8
+
+    const-string v1, ""
+
+    :goto_7
+    return-object v1
+
+    :cond_8
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    const/4 v2, 0x3
+
+    if-ne v1, v2, :cond_2e
+
+    new-instance v0, Ljava/util/Random;
+
+    invoke-direct {v0}, Ljava/util/Random;-><init>()V
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v0}, Ljava/util/Random;->nextLong()J
+
+    move-result-wide v2
+
+    invoke-static {v2, v3}, Ljava/lang/Math;->abs(J)J
+
+    move-result-wide v2
+
+    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ""
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    goto :goto_7
+
+    :cond_2e
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumber:Ljava/lang/String;
+
+    goto :goto_7
+.end method
+
+.method public getSimSerialNumberSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    return v0
+.end method
+
+.method public getSmsSendSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSendSetting:B
+
+    return v0
+.end method
+
+.method public getSmsSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSetting:B
+
+    return v0
+.end method
+
+.method public getSubscriberId()Ljava/lang/String;
+    .registers 9
+
+    const/4 v7, 0x0
+
+    const/16 v6, 0xf
+
+    iget-byte v3, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    const/4 v4, 0x1
+
+    if-ne v3, v4, :cond_b
+
+    const-string v3, ""
+
+    :goto_a
+    return-object v3
+
+    :cond_b
+    iget-byte v3, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    const/4 v4, 0x3
+
+    if-ne v3, v4, :cond_62
+
+    new-instance v1, Ljava/util/Random;
+
+    invoke-direct {v1}, Ljava/util/Random;-><init>()V
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v1}, Ljava/util/Random;->nextLong()J
+
+    move-result-wide v4
+
+    invoke-static {v4, v5}, Ljava/lang/Math;->abs(J)J
+
+    move-result-wide v4
+
+    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ""
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/String;->length()I
+
+    move-result v3
+
+    if-le v3, v6, :cond_3b
+
+    invoke-virtual {v2, v7, v6}, Ljava/lang/String;->substring(II)Ljava/lang/String;
+
+    move-result-object v3
+
+    goto :goto_a
+
+    :cond_3b
+    invoke-virtual {v2}, Ljava/lang/String;->length()I
+
+    move-result v0
+
+    :goto_3f
+    const/16 v3, 0x10
+
+    if-gt v0, v3, :cond_5d
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const/16 v4, 0x9
+
+    invoke-virtual {v1, v4}, Ljava/util/Random;->nextInt(I)I
+
+    move-result v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_3f
+
+    :cond_5d
+    invoke-virtual {v2, v7, v6}, Ljava/lang/String;->substring(II)Ljava/lang/String;
+
+    move-result-object v3
+
+    goto :goto_a
+
+    :cond_62
+    iget-object v3, p0, Landroid/privacy/PrivacySettings;->subscriberId:Ljava/lang/String;
+
+    goto :goto_a
+.end method
+
+.method public getSubscriberIdSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    return v0
+.end method
+
+.method public getSwitchConnectivitySetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->switchConnectivitySetting:B
+
+    return v0
+.end method
+
+.method public getSwitchWifiStateSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->switchWifiStateSetting:B
+
+    return v0
+.end method
+
+.method public getSystemLogsSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->systemLogsSetting:B
+
+    return v0
+.end method
+
+.method public getUid()I
+    .registers 2
+
+    iget v0, p0, Landroid/privacy/PrivacySettings;->uid:I
+
+    return v0
+.end method
+
+.method public getWifiInfoSetting()B
+    .registers 2
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->wifiInfoSetting:B
+
+    return v0
+.end method
+
+.method public get_id()Ljava/lang/Integer;
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->_id:Ljava/lang/Integer;
+
+    return-object v0
+.end method
+
+.method public setAccountsAuthTokensSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->accountsAuthTokensSetting:B
+
+    return-void
+.end method
+
+.method public setAccountsSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->accountsSetting:B
+
+    return-void
+.end method
+
+.method public setAddOnManagementSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->addOnManagementSetting:B
+
+    return-void
+.end method
+
+.method public setAllowedContacts([I)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->allowedContacts:[I
+
+    return-void
+.end method
+
+.method public setAndroidID(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->androidID:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setAndroidIdSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    return-void
+.end method
+
+.method public setBookmarksSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->bookmarksSetting:B
+
+    return-void
+.end method
+
+.method public setCalendarSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->calendarSetting:B
+
+    return-void
+.end method
+
+.method public setCallLogSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->callLogSetting:B
+
+    return-void
+.end method
+
+.method public setCameraSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->cameraSetting:B
+
+    return-void
+.end method
+
+.method public setContactsSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->contactsSetting:B
+
+    return-void
+.end method
+
+.method public setDeviceId(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->deviceId:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setDeviceIdSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    return-void
+.end method
+
+.method public setForceOnlineState(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->forceOnlineState:B
+
+    return-void
+.end method
+
+.method public setIccAccessSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->iccAccessSetting:B
+
+    return-void
+.end method
+
+.method public setIncomingCallsSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->incomingCallsSetting:B
+
+    return-void
+.end method
+
+.method public setIntentBootCompletedSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->intentBootCompletedSetting:B
+
+    return-void
+.end method
+
+.method public setIpTableProtectSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->ipTableProtectSetting:B
+
+    return-void
+.end method
+
+.method public setLine1Number(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->line1Number:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setLine1NumberSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    return-void
+.end method
+
+.method public setLocationGpsLat(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->locationGpsLat:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setLocationGpsLon(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->locationGpsLon:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setLocationGpsSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    return-void
+.end method
+
+.method public setLocationNetworkLat(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLat:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setLocationNetworkLon(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLon:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setLocationNetworkSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    return-void
+.end method
+
+.method public setMmsSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->mmsSetting:B
+
+    return-void
+.end method
+
+.method public setNetworkInfoSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->networkInfoSetting:B
+
+    return-void
+.end method
+
+.method public setNotificationSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->notificationSetting:B
+
+    return-void
+.end method
+
+.method public setOutgoingCallsSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->outgoingCallsSetting:B
+
+    return-void
+.end method
+
+.method public setPackageName(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->packageName:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setPhoneCallSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->phoneCallSetting:B
+
+    return-void
+.end method
+
+.method public setRecordAudioSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->recordAudioSetting:B
+
+    return-void
+.end method
+
+.method public setSendMmsSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->sendMmsSetting:B
+
+    return-void
+.end method
+
+.method public setSimInfoSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->simInfoSetting:B
+
+    return-void
+.end method
+
+.method public setSimSerialNumber(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->simSerialNumber:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setSimSerialNumberSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    return-void
+.end method
+
+.method public setSmsSendSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->smsSendSetting:B
+
+    return-void
+.end method
+
+.method public setSmsSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->smsSetting:B
+
+    return-void
+.end method
+
+.method public setSubscriberId(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/privacy/PrivacySettings;->subscriberId:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setSubscriberIdSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    return-void
+.end method
+
+.method public setSwitchConnectivitySetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->switchConnectivitySetting:B
+
+    return-void
+.end method
+
+.method public setSwitchWifiStateSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->switchWifiStateSetting:B
+
+    return-void
+.end method
+
+.method public setSystemLogsSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->systemLogsSetting:B
+
+    return-void
+.end method
+
+.method public setUid(I)V
+    .registers 2
+
+    iput p1, p0, Landroid/privacy/PrivacySettings;->uid:I
+
+    return-void
+.end method
+
+.method public setWifiInfoSetting(B)V
+    .registers 2
+
+    iput-byte p1, p0, Landroid/privacy/PrivacySettings;->wifiInfoSetting:B
+
+    return-void
+.end method
+
+.method public toString()Ljava/lang/String;
+    .registers 3
+
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v1, "PrivacySettings [_id="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->_id:Ljava/lang/Integer;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", accountsAuthTokensSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->accountsAuthTokensSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", accountsSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->accountsSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", bookmarksSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->bookmarksSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", calendarSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->calendarSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", callLogSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->callLogSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", contactsSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->contactsSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", deviceId="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->deviceId:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", deviceIdSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", incomingCallsSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->incomingCallsSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", intentBootCompletedSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->intentBootCompletedSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", line1Number="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->line1Number:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", line1NumberSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", locationGpsLat="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLat:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", locationGpsLon="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->locationGpsLon:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", locationGpsSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", locationNetworkLat="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLat:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", locationNetworkLon="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkLon:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", locationNetworkSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", mmsSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->mmsSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", networkInfoSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->networkInfoSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", notificationSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->notificationSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", outgoingCallsSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->outgoingCallsSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", packageName="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", simInfoSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->simInfoSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", simSerialNumber="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumber:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", simSerialNumberSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", smsSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->smsSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", subscriberId="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->subscriberId:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", subscriberIdSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", systemLogsSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->systemLogsSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", uid="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget v1, p0, Landroid/privacy/PrivacySettings;->uid:I
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", phoneCallSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->phoneCallSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", smsSendSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->smsSendSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", recordAudioSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->recordAudioSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", cameraSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->cameraSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", ipTableProtectSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->ipTableProtectSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", iccAccessSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->iccAccessSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", addOnManagementSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->addOnManagementSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", android ID="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Landroid/privacy/PrivacySettings;->androidID:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", androidIdSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", wifiInfoSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->wifiInfoSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", switchConnectivitySetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->switchConnectivitySetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", sendMmsSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->sendMmsSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", forceOnlineState="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->forceOnlineState:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", switchWifiStateSetting="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-byte v1, p0, Landroid/privacy/PrivacySettings;->switchWifiStateSetting:B
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, "]"
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public writeToParcel(Landroid/os/Parcel;I)V
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->_id:Ljava/lang/Integer;
+
+    if-nez v0, :cond_ef
+
+    const/4 v0, -0x1
+
+    :goto_5
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->packageName:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget v0, p0, Landroid/privacy/PrivacySettings;->uid:I
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->deviceIdSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->deviceId:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->line1NumberSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->line1Number:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationGpsSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->locationGpsLat:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->locationGpsLon:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkLat:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->locationNetworkLon:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->networkInfoSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->simInfoSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->simSerialNumberSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->simSerialNumber:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->subscriberIdSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->subscriberId:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->accountsAuthTokensSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->outgoingCallsSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->incomingCallsSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->contactsSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->calendarSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->mmsSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->callLogSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->bookmarksSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->systemLogsSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->notificationSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->intentBootCompletedSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->cameraSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->recordAudioSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->allowedContacts:[I
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeIntArray([I)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->smsSendSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->phoneCallSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->ipTableProtectSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->iccAccessSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->addOnManagementSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->androidIdSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->androidID:Ljava/lang/String;
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->wifiInfoSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->switchConnectivitySetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->sendMmsSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->forceOnlineState:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    iget-byte v0, p0, Landroid/privacy/PrivacySettings;->switchWifiStateSetting:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    return-void
+
+    :cond_ef
+    iget-object v0, p0, Landroid/privacy/PrivacySettings;->_id:Ljava/lang/Integer;
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v0
+
+    goto/16 :goto_5
+.end method
diff -Npruw stock-framework/smali/android/privacy/PrivacySettingsStub.smali pdroid-framework/smali/android/privacy/PrivacySettingsStub.smali
--- stock-framework/smali/android/privacy/PrivacySettingsStub.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/PrivacySettingsStub.smali	2014-01-02 21:10:35.188310862 -0600
@@ -0,0 +1,27 @@
+.class Landroid/privacy/PrivacySettingsStub;
+.super Ljava/lang/Object;
+.source "PrivacySettingsStub.java"
+
+
+# static fields
+.field private static final isStub:Z = true
+
+
+# direct methods
+.method constructor <init>()V
+    .registers 1
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method isStub()Z
+    .registers 2
+
+    const/4 v0, 0x1
+
+    return v0
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture.smali	2014-01-02 21:10:35.192310862 -0600
@@ -0,0 +1,129 @@
+.class Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;
+.super Ljava/lang/Object;
+.source "PrivacyAccountManager.java"
+
+# interfaces
+.implements Landroid/accounts/AccountManagerFuture;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/privacy/surrogate/PrivacyAccountManager;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x2
+    name = "PrivacyAccountManagerFuture"
+.end annotation
+
+.annotation system Ldalvik/annotation/Signature;
+    value = {
+        "<V:",
+        "Ljava/lang/Object;",
+        ">",
+        "Ljava/lang/Object;",
+        "Landroid/accounts/AccountManagerFuture",
+        "<TV;>;"
+    }
+.end annotation
+
+
+# instance fields
+.field private result:Ljava/lang/Object;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "TV;"
+        }
+    .end annotation
+.end field
+
+.field final synthetic this$0:Landroid/privacy/surrogate/PrivacyAccountManager;
+
+
+# direct methods
+.method public constructor <init>(Landroid/privacy/surrogate/PrivacyAccountManager;Ljava/lang/Object;)V
+    .registers 3
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(TV;)V"
+        }
+    .end annotation
+
+    iput-object p1, p0, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;->this$0:Landroid/privacy/surrogate/PrivacyAccountManager;
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    iput-object p2, p0, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;->result:Ljava/lang/Object;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public cancel(Z)Z
+    .registers 3
+
+    const/4 v0, 0x0
+
+    return v0
+.end method
+
+.method public getResult()Ljava/lang/Object;
+    .registers 2
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()TV;"
+        }
+    .end annotation
+
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/accounts/OperationCanceledException;,
+            Ljava/io/IOException;,
+            Landroid/accounts/AuthenticatorException;
+        }
+    .end annotation
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;->result:Ljava/lang/Object;
+
+    return-object v0
+.end method
+
+.method public getResult(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+    .registers 5
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(J",
+            "Ljava/util/concurrent/TimeUnit;",
+            ")TV;"
+        }
+    .end annotation
+
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/accounts/OperationCanceledException;,
+            Ljava/io/IOException;,
+            Landroid/accounts/AuthenticatorException;
+        }
+    .end annotation
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;->result:Ljava/lang/Object;
+
+    return-object v0
+.end method
+
+.method public isCancelled()Z
+    .registers 2
+
+    const/4 v0, 0x0
+
+    return v0
+.end method
+
+.method public isDone()Z
+    .registers 2
+
+    const/4 v0, 0x1
+
+    return v0
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyAccountManager.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyAccountManager.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyAccountManager.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyAccountManager.smali	2014-01-02 21:10:35.192310862 -0600
@@ -0,0 +1,701 @@
+.class public final Landroid/privacy/surrogate/PrivacyAccountManager;
+.super Landroid/accounts/AccountManager;
+.source "PrivacyAccountManager.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;
+    }
+.end annotation
+
+
+# static fields
+.field private static final TAG:Ljava/lang/String; = "PrivacyAccountManager"
+
+
+# instance fields
+.field private context:Landroid/content/Context;
+
+.field private pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+
+# direct methods
+.method public constructor <init>(Landroid/content/Context;Landroid/accounts/IAccountManager;)V
+    .registers 5
+
+    invoke-direct {p0, p1, p2}, Landroid/accounts/AccountManager;-><init>(Landroid/content/Context;Landroid/accounts/IAccountManager;)V
+
+    iput-object p1, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    new-instance v0, Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "privacy"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v1
+
+    invoke-direct {v0, p1, v1}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    return-void
+.end method
+
+.method public constructor <init>(Landroid/content/Context;Landroid/accounts/IAccountManager;Landroid/os/Handler;)V
+    .registers 6
+
+    invoke-direct {p0, p1, p2, p3}, Landroid/accounts/AccountManager;-><init>(Landroid/content/Context;Landroid/accounts/IAccountManager;Landroid/os/Handler;)V
+
+    iput-object p1, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    new-instance v0, Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "privacy"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v1
+
+    invoke-direct {v0, p1, v1}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public blockingGetAuthToken(Landroid/accounts/Account;Ljava/lang/String;Z)Ljava/lang/String;
+    .registers 12
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/accounts/OperationCanceledException;,
+            Ljava/io/IOException;,
+            Landroid/accounts/AuthenticatorException;
+        }
+    .end annotation
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_23
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getAccountsAuthTokensSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_23
+
+    const/4 v7, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string v4, "authTokens"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_22
+    return-object v7
+
+    :cond_23
+    invoke-super {p0, p1, p2, p3}, Landroid/accounts/AccountManager;->blockingGetAuthToken(Landroid/accounts/Account;Ljava/lang/String;Z)Ljava/lang/String;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "authTokens"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_22
+.end method
+
+.method public getAccounts()[Landroid/accounts/Account;
+    .registers 10
+
+    const/4 v5, 0x0
+
+    const/4 v3, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_27
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getAccountsSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_27
+
+    const-string v8, "[empty accounts list]"
+
+    new-array v7, v3, [Landroid/accounts/Account;
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string v4, "accountsList"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_26
+    return-object v7
+
+    :cond_27
+    const-string v8, "[real value]"
+
+    invoke-super {p0}, Landroid/accounts/AccountManager;->getAccounts()[Landroid/accounts/Account;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "accountsList"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_26
+.end method
+
+.method public getAccountsByType(Ljava/lang/String;)[Landroid/accounts/Account;
+    .registers 11
+
+    const/4 v5, 0x0
+
+    const/4 v3, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_27
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getAccountsSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_27
+
+    const-string v8, "[empty accounts list]"
+
+    new-array v7, v3, [Landroid/accounts/Account;
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string v4, "accountsList"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_26
+    return-object v7
+
+    :cond_27
+    const-string v8, "[real value]"
+
+    invoke-super {p0, p1}, Landroid/accounts/AccountManager;->getAccountsByType(Ljava/lang/String;)[Landroid/accounts/Account;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "accountsList"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_26
+.end method
+
+.method public getAccountsByTypeAndFeatures(Ljava/lang/String;[Ljava/lang/String;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+    .registers 14
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/lang/String;",
+            "[",
+            "Ljava/lang/String;",
+            "Landroid/accounts/AccountManagerCallback",
+            "<[",
+            "Landroid/accounts/Account;",
+            ">;",
+            "Landroid/os/Handler;",
+            ")",
+            "Landroid/accounts/AccountManagerFuture",
+            "<[",
+            "Landroid/accounts/Account;",
+            ">;"
+        }
+    .end annotation
+
+    const/4 v5, 0x0
+
+    const/4 v3, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_2c
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getAccountsSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2c
+
+    const-string v8, "[false]"
+
+    new-instance v7, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;
+
+    new-array v0, v3, [Landroid/accounts/Account;
+
+    invoke-direct {v7, p0, v0}, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;-><init>(Landroid/privacy/surrogate/PrivacyAccountManager;Ljava/lang/Object;)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string v4, "accountsList"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2b
+    return-object v7
+
+    :cond_2c
+    const-string v8, "[real value]"
+
+    invoke-super {p0, p1, p2, p3, p4}, Landroid/accounts/AccountManager;->getAccountsByTypeAndFeatures(Ljava/lang/String;[Ljava/lang/String;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "accountsList"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_2b
+.end method
+
+.method public getAuthToken(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+    .registers 16
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Landroid/accounts/Account;",
+            "Ljava/lang/String;",
+            "Landroid/os/Bundle;",
+            "Landroid/app/Activity;",
+            "Landroid/accounts/AccountManagerCallback",
+            "<",
+            "Landroid/os/Bundle;",
+            ">;",
+            "Landroid/os/Handler;",
+            ")",
+            "Landroid/accounts/AccountManagerFuture",
+            "<",
+            "Landroid/os/Bundle;",
+            ">;"
+        }
+    .end annotation
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_2e
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getAccountsAuthTokensSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2e
+
+    const-string v8, "[empty]"
+
+    new-instance v7, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;
+
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    invoke-direct {v7, p0, v0}, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;-><init>(Landroid/privacy/surrogate/PrivacyAccountManager;Ljava/lang/Object;)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string v4, "authTokens"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2d
+    return-object v7
+
+    :cond_2e
+    const-string v8, "[real value]"
+
+    invoke-super/range {p0 .. p6}, Landroid/accounts/AccountManager;->getAuthToken(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "authTokens"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_2d
+.end method
+
+.method public getAuthToken(Landroid/accounts/Account;Ljava/lang/String;ZLandroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+    .registers 15
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Landroid/accounts/Account;",
+            "Ljava/lang/String;",
+            "Z",
+            "Landroid/accounts/AccountManagerCallback",
+            "<",
+            "Landroid/os/Bundle;",
+            ">;",
+            "Landroid/os/Handler;",
+            ")",
+            "Landroid/accounts/AccountManagerFuture",
+            "<",
+            "Landroid/os/Bundle;",
+            ">;"
+        }
+    .end annotation
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_2e
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getAccountsAuthTokensSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2e
+
+    const-string v8, "[empty]"
+
+    new-instance v7, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;
+
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    invoke-direct {v7, p0, v0}, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;-><init>(Landroid/privacy/surrogate/PrivacyAccountManager;Ljava/lang/Object;)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string v4, "authTokens"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2d
+    return-object v7
+
+    :cond_2e
+    const-string v8, "[real value]"
+
+    invoke-super/range {p0 .. p5}, Landroid/accounts/AccountManager;->getAuthToken(Landroid/accounts/Account;Ljava/lang/String;ZLandroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "authTokens"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_2d
+.end method
+
+.method public getAuthTokenByFeatures(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/Bundle;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+    .registers 18
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/lang/String;",
+            "Ljava/lang/String;",
+            "[",
+            "Ljava/lang/String;",
+            "Landroid/app/Activity;",
+            "Landroid/os/Bundle;",
+            "Landroid/os/Bundle;",
+            "Landroid/accounts/AccountManagerCallback",
+            "<",
+            "Landroid/os/Bundle;",
+            ">;",
+            "Landroid/os/Handler;",
+            ")",
+            "Landroid/accounts/AccountManagerFuture",
+            "<",
+            "Landroid/os/Bundle;",
+            ">;"
+        }
+    .end annotation
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_2e
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getAccountsAuthTokensSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2e
+
+    const-string v8, "[empty]"
+
+    new-instance v7, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;
+
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    invoke-direct {v7, p0, v0}, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;-><init>(Landroid/privacy/surrogate/PrivacyAccountManager;Ljava/lang/Object;)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string v4, "authTokens"
+
+    const/4 v5, 0x0
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2d
+    return-object v7
+
+    :cond_2e
+    const-string v8, "[real value]"
+
+    invoke-super/range {p0 .. p8}, Landroid/accounts/AccountManager;->getAuthTokenByFeatures(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/Bundle;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "authTokens"
+
+    const/4 v5, 0x0
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_2d
+.end method
+
+.method public hasFeatures(Landroid/accounts/Account;[Ljava/lang/String;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+    .registers 14
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Landroid/accounts/Account;",
+            "[",
+            "Ljava/lang/String;",
+            "Landroid/accounts/AccountManagerCallback",
+            "<",
+            "Ljava/lang/Boolean;",
+            ">;",
+            "Landroid/os/Handler;",
+            ")",
+            "Landroid/accounts/AccountManagerFuture",
+            "<",
+            "Ljava/lang/Boolean;",
+            ">;"
+        }
+    .end annotation
+
+    const/4 v5, 0x0
+
+    const/4 v3, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_2e
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getAccountsSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2e
+
+    const-string v8, "[false]"
+
+    new-instance v7, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;
+
+    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;
+
+    move-result-object v0
+
+    invoke-direct {v7, p0, v0}, Landroid/privacy/surrogate/PrivacyAccountManager$PrivacyAccountManagerFuture;-><init>(Landroid/privacy/surrogate/PrivacyAccountManager;Ljava/lang/Object;)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string v4, "accountsList"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2d
+    return-object v7
+
+    :cond_2e
+    const-string v8, "[real value]"
+
+    invoke-super {p0, p1, p2, p3, p4}, Landroid/accounts/AccountManager;->hasFeatures(Landroid/accounts/Account;[Ljava/lang/String;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyAccountManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "accountsList"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_2d
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyActivityManagerService.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyActivityManagerService.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyActivityManagerService.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyActivityManagerService.smali	2014-01-02 21:10:35.192310862 -0600
@@ -0,0 +1,1223 @@
+.class public final Landroid/privacy/surrogate/PrivacyActivityManagerService;
+.super Ljava/lang/Object;
+.source "PrivacyActivityManagerService.java"
+
+
+# static fields
+.field private static final DATA_SMS_RECEIVED_INTENT:Ljava/lang/String; = "android.intent.action.DATA_SMS_RECEIVED"
+
+.field private static final SMS_RECEIVED_ACTION_INTENT:Ljava/lang/String; = "android.provider.Telephony.SMS_RECEIVED"
+
+.field private static final TAG:Ljava/lang/String; = "PrivacyActivityManagerService"
+
+.field private static final WAP_PUSH_RECEIVED_INTENT:Ljava/lang/String; = "android.provider.Telephony.WAP_PUSH_RECEIVED"
+
+.field private static pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+.field private static tmpIn:Landroid/content/Intent;
+
+.field private static tmpInHash:J
+
+.field private static tmpInReceivers:I
+
+.field private static tmpMms:Landroid/content/Intent;
+
+.field private static tmpMmsHash:J
+
+.field private static tmpMmsReceivers:I
+
+.field private static tmpOut:Landroid/content/Intent;
+
+.field private static tmpOutHash:J
+
+.field private static tmpOutReceivers:I
+
+.field private static tmpPackageAddedHash:J
+
+.field private static tmpSms:Landroid/content/Intent;
+
+.field private static tmpSmsHash:J
+
+.field private static tmpSmsReceivers:I
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 3
+
+    const/4 v2, 0x0
+
+    const-wide/16 v0, 0x0
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInHash:J
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutHash:J
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsHash:J
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsHash:J
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpPackageAddedHash:J
+
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .registers 1
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+.method public static enforcePrivacyPermission(Ljava/lang/String;ILandroid/content/Intent;Landroid/content/Context;I)V
+    .registers 29
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v2, :cond_13
+
+    if-eqz p3, :cond_13
+
+    const-string/jumbo v2, "privacy"
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v0, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/privacy/PrivacySettingsManager;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_13
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v2, :cond_2c
+
+    if-nez p3, :cond_2c
+
+    new-instance v2, Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "privacy"
+
+    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v4
+
+    invoke-static {v4}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v4
+
+    invoke-direct {v2, v3, v4}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_2c
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v16
+
+    const-string v2, "android.intent.action.NEW_OUTGOING_CALL"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_cc
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, p1
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    const-string v2, "android.intent.extra.PHONE_NUMBER"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v23
+
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_66
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->clone()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOut:Landroid/content/Intent;
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutHash:J
+
+    sput p4, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    :cond_66
+    if-eqz v8, :cond_93
+
+    :try_start_68
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getOutgoingCallsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_93
+
+    const-string v23, ""
+
+    const-string v2, "android.intent.extra.PHONE_NUMBER"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x1
+
+    const-string/jumbo v6, "outgoingCall"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_87
+    .catch Ljava/lang/Exception; {:try_start_68 .. :try_end_87} :catch_bd
+
+    :cond_87
+    :goto_87
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    const/4 v3, 0x1
+
+    if-le v2, v3, :cond_c8
+
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    add-int/lit8 v2, v2, -0x1
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    :cond_92
+    :goto_92
+    return-void
+
+    :cond_93
+    :try_start_93
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-nez v2, :cond_87
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOut:Landroid/content/Intent;
+
+    const-string v3, "android.intent.extra.PHONE_NUMBER"
+
+    invoke-virtual {v2, v3}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v23
+
+    const-string v2, "android.intent.extra.PHONE_NUMBER"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x0
+
+    const-string/jumbo v6, "outgoingCall"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_bc
+    .catch Ljava/lang/Exception; {:try_start_93 .. :try_end_bc} :catch_bd
+
+    goto :goto_87
+
+    :catch_bd
+    move-exception v20
+
+    const-string v2, "PrivacyActivityManagerService"
+
+    const-string v3, "failed to enforce intent broadcast permission"
+
+    move-object/from16 v0, v20
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_87
+
+    :cond_c8
+    const/4 v2, 0x0
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOut:Landroid/content/Intent;
+
+    goto :goto_92
+
+    :cond_cc
+    const-string v2, "android.intent.action.PHONE_STATE"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_170
+
+    const-string v2, "incoming_number"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v23
+
+    if-eqz v23, :cond_92
+
+    invoke-virtual/range {v23 .. v23}, Ljava/lang/String;->isEmpty()Z
+
+    move-result v2
+
+    if-nez v2, :cond_92
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, p1
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_10a
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->clone()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpIn:Landroid/content/Intent;
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInHash:J
+
+    sput p4, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    :cond_10a
+    if-eqz v8, :cond_137
+
+    :try_start_10c
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getIncomingCallsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_137
+
+    const-string v23, ""
+
+    const-string v2, "incoming_number"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x1
+
+    const-string v6, "incomingCall"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_12a
+    .catch Ljava/lang/Exception; {:try_start_10c .. :try_end_12a} :catch_160
+
+    :cond_12a
+    :goto_12a
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    const/4 v3, 0x1
+
+    if-le v2, v3, :cond_16b
+
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    add-int/lit8 v2, v2, -0x1
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    goto/16 :goto_92
+
+    :cond_137
+    :try_start_137
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-nez v2, :cond_12a
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpIn:Landroid/content/Intent;
+
+    const-string v3, "incoming_number"
+
+    invoke-virtual {v2, v3}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v23
+
+    const-string v2, "incoming_number"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x0
+
+    const-string v6, "incomingCall"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_15f
+    .catch Ljava/lang/Exception; {:try_start_137 .. :try_end_15f} :catch_160
+
+    goto :goto_12a
+
+    :catch_160
+    move-exception v20
+
+    const-string v2, "PrivacyActivityManagerService"
+
+    const-string v3, "failed to enforce intent broadcast permission"
+
+    move-object/from16 v0, v20
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_12a
+
+    :cond_16b
+    const/4 v2, 0x0
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpIn:Landroid/content/Intent;
+
+    goto/16 :goto_92
+
+    :cond_170
+    const-string v2, "android.provider.Telephony.SMS_RECEIVED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_253
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, p1
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    const-string v23, "[real]"
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v2
+
+    check-cast v2, [Ljava/lang/Object;
+
+    move-object/from16 v22, v2
+
+    check-cast v22, [Ljava/lang/Object;
+
+    if-eqz v22, :cond_1f8
+
+    const/4 v2, 0x0
+
+    aget-object v2, v22, v2
+
+    check-cast v2, [B
+
+    check-cast v2, [B
+
+    move-object/from16 v19, v2
+
+    :goto_1a0
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_1ba
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->clone()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSms:Landroid/content/Intent;
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsHash:J
+
+    sput p4, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    :cond_1ba
+    if-eqz v8, :cond_1fb
+
+    :try_start_1bc
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getSmsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_1fb
+
+    const-string v23, "[empty]"
+
+    const/4 v2, 0x1
+
+    new-array v0, v2, [Ljava/lang/Object;
+
+    move-object/from16 v21, v0
+
+    const/4 v2, 0x0
+
+    const/16 v3, 0x10
+
+    new-array v3, v3, [B
+
+    fill-array-data v3, :array_3da
+
+    aput-object v3, v21, v2
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x1
+
+    const-string/jumbo v6, "sms"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_1eb
+    .catch Ljava/lang/Exception; {:try_start_1bc .. :try_end_1eb} :catch_240
+
+    :cond_1eb
+    :goto_1eb
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    const/4 v3, 0x1
+
+    if-le v2, v3, :cond_24e
+
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    add-int/lit8 v2, v2, -0x1
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    goto/16 :goto_92
+
+    :cond_1f8
+    const/16 v19, 0x0
+
+    goto :goto_1a0
+
+    :cond_1fb
+    :try_start_1fb
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-nez v2, :cond_1eb
+
+    const-string/jumbo v2, "pdus"
+
+    sget-object v3, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSms:Landroid/content/Intent;
+
+    const-string/jumbo v4, "pdus"
+
+    invoke-virtual {v3, v4}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v3
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v2
+
+    check-cast v2, [Ljava/lang/Object;
+
+    move-object v0, v2
+
+    check-cast v0, [Ljava/lang/Object;
+
+    move-object/from16 v22, v0
+
+    if-eqz v22, :cond_24b
+
+    const/4 v2, 0x0
+
+    aget-object v2, v22, v2
+
+    check-cast v2, [B
+
+    check-cast v2, [B
+
+    move-object/from16 v19, v2
+
+    :goto_231
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x0
+
+    const-string/jumbo v6, "sms"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_23f
+    .catch Ljava/lang/Exception; {:try_start_1fb .. :try_end_23f} :catch_240
+
+    goto :goto_1eb
+
+    :catch_240
+    move-exception v20
+
+    const-string v2, "PrivacyActivityManagerService"
+
+    const-string v3, "failed to enforce intent broadcast permission"
+
+    move-object/from16 v0, v20
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_1eb
+
+    :cond_24b
+    const/16 v19, 0x0
+
+    goto :goto_231
+
+    :cond_24e
+    const/4 v2, 0x0
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSms:Landroid/content/Intent;
+
+    goto/16 :goto_92
+
+    :cond_253
+    const-string v2, "android.provider.Telephony.WAP_PUSH_RECEIVED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_267
+
+    const-string v2, "android.intent.action.DATA_SMS_RECEIVED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_340
+
+    :cond_267
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, p1
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    const-string v23, "[real]"
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v2
+
+    check-cast v2, [Ljava/lang/Object;
+
+    move-object/from16 v22, v2
+
+    check-cast v22, [Ljava/lang/Object;
+
+    if-eqz v22, :cond_2e5
+
+    const/4 v2, 0x0
+
+    aget-object v2, v22, v2
+
+    check-cast v2, [B
+
+    check-cast v2, [B
+
+    move-object/from16 v19, v2
+
+    :goto_28d
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_2a7
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->clone()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMms:Landroid/content/Intent;
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsHash:J
+
+    sput p4, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    :cond_2a7
+    if-eqz v8, :cond_2e8
+
+    :try_start_2a9
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getMmsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_2e8
+
+    const-string v23, "[empty]"
+
+    const/4 v2, 0x1
+
+    new-array v0, v2, [Ljava/lang/Object;
+
+    move-object/from16 v21, v0
+
+    const/4 v2, 0x0
+
+    const/16 v3, 0x10
+
+    new-array v3, v3, [B
+
+    fill-array-data v3, :array_3e6
+
+    aput-object v3, v21, v2
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x1
+
+    const-string/jumbo v6, "mms"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_2d8
+    .catch Ljava/lang/Exception; {:try_start_2a9 .. :try_end_2d8} :catch_32d
+
+    :cond_2d8
+    :goto_2d8
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    const/4 v3, 0x1
+
+    if-le v2, v3, :cond_33b
+
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    add-int/lit8 v2, v2, -0x1
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    goto/16 :goto_92
+
+    :cond_2e5
+    const/16 v19, 0x0
+
+    goto :goto_28d
+
+    :cond_2e8
+    :try_start_2e8
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-nez v2, :cond_2d8
+
+    const-string/jumbo v2, "pdus"
+
+    sget-object v3, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMms:Landroid/content/Intent;
+
+    const-string/jumbo v4, "pdus"
+
+    invoke-virtual {v3, v4}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v3
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v2
+
+    check-cast v2, [Ljava/lang/Object;
+
+    move-object v0, v2
+
+    check-cast v0, [Ljava/lang/Object;
+
+    move-object/from16 v22, v0
+
+    if-eqz v22, :cond_338
+
+    const/4 v2, 0x0
+
+    aget-object v2, v22, v2
+
+    check-cast v2, [B
+
+    check-cast v2, [B
+
+    move-object/from16 v19, v2
+
+    :goto_31e
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x0
+
+    const-string/jumbo v6, "mms"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_32c
+    .catch Ljava/lang/Exception; {:try_start_2e8 .. :try_end_32c} :catch_32d
+
+    goto :goto_2d8
+
+    :catch_32d
+    move-exception v20
+
+    const-string v2, "PrivacyActivityManagerService"
+
+    const-string v3, "failed to enforce intent broadcast permission"
+
+    move-object/from16 v0, v20
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_2d8
+
+    :cond_338
+    const/16 v19, 0x0
+
+    goto :goto_31e
+
+    :cond_33b
+    const/4 v2, 0x0
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMms:Landroid/content/Intent;
+
+    goto/16 :goto_92
+
+    :cond_340
+    const-string v2, "android.intent.action.BOOT_COMPLETED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_38d
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettingsManager;->setBootCompleted()V
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v2, v0}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_376
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getIntentBootCompletedSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_376
+
+    const-string v2, "catchBootComplete"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v9, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v12, 0x1
+
+    const-string v13, "intentBootCompleted"
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    move-object/from16 v10, p0
+
+    move/from16 v11, p1
+
+    invoke-virtual/range {v9 .. v15}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_92
+
+    :cond_376
+    const-string v2, "android.intent.action.BOOT_COMPLETED"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v9, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v12, 0x0
+
+    const-string v13, "intentBootCompleted"
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    move-object/from16 v10, p0
+
+    move/from16 v11, p1
+
+    invoke-virtual/range {v9 .. v15}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_92
+
+    :cond_38d
+    const-string v2, "android.intent.action.PACKAGE_ADDED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_92
+
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpPackageAddedHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_92
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpPackageAddedHash:J
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getData()Landroid/net/Uri;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;
+
+    move-result-object v17
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;
+
+    move-result-object v2
+
+    const-string v3, "android.intent.extra.UID"
+
+    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getInt(Ljava/lang/String;)I
+
+    move-result v18
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, v17
+
+    move/from16 v1, v18
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_92
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getUid()I
+
+    move-result v2
+
+    move/from16 v0, v18
+
+    if-eq v2, v0, :cond_92
+
+    move/from16 v0, v18
+
+    invoke-virtual {v8, v0}, Landroid/privacy/PrivacySettings;->setUid(I)V
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v2, v8}, Landroid/privacy/PrivacySettingsManager;->saveSettings(Landroid/privacy/PrivacySettings;)Z
+
+    goto/16 :goto_92
+
+    nop
+
+    :array_3da
+    .array-data 0x1
+        0x0t
+        0x20t
+        0x1t
+        0x81t
+        0xf0t
+        0x0t
+        0x0t
+        0x11t
+        0x90t
+        0x1t
+        0x30t
+        0x22t
+        0x22t
+        0x80t
+        0x1t
+        0x20t
+    .end array-data
+
+    :array_3e6
+    .array-data 0x1
+        0x0t
+        0x20t
+        0x1t
+        0x81t
+        0xf0t
+        0x0t
+        0x0t
+        0x11t
+        0x90t
+        0x1t
+        0x30t
+        0x22t
+        0x22t
+        0x80t
+        0x1t
+        0x20t
+    .end array-data
+.end method
+
+.method private static hashCode(Landroid/content/Intent;)J
+    .registers 7
+
+    const-wide/16 v3, 0x0
+
+    const-string/jumbo v2, "privacy_hash"
+
+    invoke-virtual {p0, v2, v3, v4}, Landroid/content/Intent;->getLongExtra(Ljava/lang/String;J)J
+
+    move-result-wide v0
+
+    cmp-long v2, v0, v3
+
+    if-nez v2, :cond_1e
+
+    invoke-virtual {p0}, Landroid/content/Intent;->filterHashCode()I
+
+    move-result v2
+
+    int-to-long v2, v2
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v4
+
+    add-long v0, v2, v4
+
+    const-string/jumbo v2, "privacy_hash"
+
+    invoke-virtual {p0, v2, v0, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;J)Landroid/content/Intent;
+
+    :cond_1e
+    return-wide v0
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyConnectivityManager.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyConnectivityManager.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyConnectivityManager.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyConnectivityManager.smali	2014-01-02 21:10:35.196310862 -0600
@@ -0,0 +1,1045 @@
+.class public Landroid/privacy/surrogate/PrivacyConnectivityManager;
+.super Landroid/net/ConnectivityManager;
+.source "PrivacyConnectivityManager.java"
+
+
+# static fields
+.field private static final P_TAG:Ljava/lang/String; = "PrivacyConnectivityManager"
+
+
+# instance fields
+.field private context:Landroid/content/Context;
+
+.field private pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+
+# direct methods
+.method public constructor <init>(Landroid/net/IConnectivityManager;Landroid/content/Context;)V
+    .registers 6
+
+    invoke-direct {p0, p1}, Landroid/net/ConnectivityManager;-><init>(Landroid/net/IConnectivityManager;)V
+
+    iput-object p2, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    new-instance v0, Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "privacy"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v1
+
+    invoke-direct {v0, p2, v1}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v0, "PrivacyConnectivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v2, "now in constructor for package: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {p2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public getActiveLinkProperties()Landroid/net/LinkProperties;
+    .registers 10
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    new-instance v7, Landroid/net/LinkProperties;
+
+    invoke-direct {v7}, Landroid/net/LinkProperties;-><init>()V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_34
+
+    if-eqz v8, :cond_34
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_34
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_33
+    return-object v7
+
+    :cond_34
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/ConnectivityManager;->getActiveLinkProperties()Landroid/net/LinkProperties;
+
+    move-result-object v7
+
+    goto :goto_33
+.end method
+
+.method public getActiveNetworkInfo()Landroid/net/NetworkInfo;
+    .registers 10
+
+    const/4 v3, 0x1
+
+    const/4 v2, -0x1
+
+    const/4 v6, 0x0
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    new-instance v7, Landroid/net/NetworkInfo;
+
+    const-string v0, "MOBILE"
+
+    const-string v1, "UNKNOWN"
+
+    invoke-direct {v7, v6, v6, v0, v1}, Landroid/net/NetworkInfo;-><init>(IILjava/lang/String;Ljava/lang/String;)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_31
+
+    if-eqz v8, :cond_31
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v0
+
+    if-nez v0, :cond_31
+
+    invoke-virtual {v7, v3}, Landroid/net/NetworkInfo;->setIsAvailable(Z)V
+
+    sget-object v0, Landroid/net/NetworkInfo$State;->CONNECTED:Landroid/net/NetworkInfo$State;
+
+    invoke-virtual {v7, v0}, Landroid/net/NetworkInfo;->setState(Landroid/net/NetworkInfo$State;)V
+
+    :cond_31
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_4d
+
+    if-eqz v8, :cond_4d
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_4d
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_4c
+    return-object v7
+
+    :cond_4d
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move v3, v6
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;
+
+    move-result-object v7
+
+    goto :goto_4c
+.end method
+
+.method public getActiveNetworkInfoForUid(I)Landroid/net/NetworkInfo;
+    .registers 11
+
+    const/4 v3, 0x1
+
+    const/4 v2, -0x1
+
+    const/4 v6, 0x0
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    new-instance v7, Landroid/net/NetworkInfo;
+
+    const-string v0, "MOBILE"
+
+    const-string v1, "UNKNOWN"
+
+    invoke-direct {v7, v6, v6, v0, v1}, Landroid/net/NetworkInfo;-><init>(IILjava/lang/String;Ljava/lang/String;)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_31
+
+    if-eqz v8, :cond_31
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v0
+
+    if-nez v0, :cond_31
+
+    invoke-virtual {v7, v3}, Landroid/net/NetworkInfo;->setIsAvailable(Z)V
+
+    sget-object v0, Landroid/net/NetworkInfo$State;->CONNECTED:Landroid/net/NetworkInfo$State;
+
+    invoke-virtual {v7, v0}, Landroid/net/NetworkInfo;->setState(Landroid/net/NetworkInfo$State;)V
+
+    :cond_31
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_4d
+
+    if-eqz v8, :cond_4d
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_4d
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_4c
+    return-object v7
+
+    :cond_4d
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move v3, v6
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0, p1}, Landroid/net/ConnectivityManager;->getActiveNetworkInfoForUid(I)Landroid/net/NetworkInfo;
+
+    move-result-object v7
+
+    goto :goto_4c
+.end method
+
+.method public getAllNetworkInfo()[Landroid/net/NetworkInfo;
+    .registers 10
+
+    const/4 v2, -0x1
+
+    const/4 v3, 0x1
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    new-array v7, v3, [Landroid/net/NetworkInfo;
+
+    new-instance v0, Landroid/net/NetworkInfo;
+
+    const-string v1, "MOBILE"
+
+    const-string v4, "CONNECTED"
+
+    invoke-direct {v0, v6, v6, v1, v4}, Landroid/net/NetworkInfo;-><init>(IILjava/lang/String;Ljava/lang/String;)V
+
+    aput-object v0, v7, v6
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_39
+
+    if-eqz v8, :cond_39
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v0
+
+    if-nez v0, :cond_39
+
+    aget-object v0, v7, v6
+
+    invoke-virtual {v0, v3}, Landroid/net/NetworkInfo;->setIsAvailable(Z)V
+
+    aget-object v0, v7, v6
+
+    sget-object v1, Landroid/net/NetworkInfo$State;->CONNECTED:Landroid/net/NetworkInfo$State;
+
+    invoke-virtual {v0, v1}, Landroid/net/NetworkInfo;->setState(Landroid/net/NetworkInfo$State;)V
+
+    :cond_39
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_55
+
+    if-eqz v8, :cond_55
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_55
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_54
+    return-object v7
+
+    :cond_55
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move v3, v6
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;
+
+    move-result-object v7
+
+    goto :goto_54
+.end method
+
+.method public getLinkProperties(I)Landroid/net/LinkProperties;
+    .registers 11
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    new-instance v7, Landroid/net/LinkProperties;
+
+    invoke-direct {v7}, Landroid/net/LinkProperties;-><init>()V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_34
+
+    if-eqz v8, :cond_34
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_34
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_33
+    return-object v7
+
+    :cond_34
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0, p1}, Landroid/net/ConnectivityManager;->getLinkProperties(I)Landroid/net/LinkProperties;
+
+    move-result-object v7
+
+    goto :goto_33
+.end method
+
+.method public getMobileDataEnabled()Z
+    .registers 9
+
+    const/4 v3, 0x1
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_2f
+
+    if-eqz v7, :cond_2f
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v0
+
+    if-nez v0, :cond_2f
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2e
+    return v3
+
+    :cond_2f
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/ConnectivityManager;->getMobileDataEnabled()Z
+
+    move-result v3
+
+    goto :goto_2e
+.end method
+
+.method public getNetworkInfo(I)Landroid/net/NetworkInfo;
+    .registers 11
+
+    const/4 v3, 0x1
+
+    const/4 v2, -0x1
+
+    const/4 v6, 0x0
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    new-instance v7, Landroid/net/NetworkInfo;
+
+    const-string v0, "MOBILE"
+
+    const-string v1, "CONNECTED"
+
+    invoke-direct {v7, v6, v6, v0, v1}, Landroid/net/NetworkInfo;-><init>(IILjava/lang/String;Ljava/lang/String;)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_31
+
+    if-eqz v8, :cond_31
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v0
+
+    if-nez v0, :cond_31
+
+    invoke-virtual {v7, v3}, Landroid/net/NetworkInfo;->setIsAvailable(Z)V
+
+    sget-object v0, Landroid/net/NetworkInfo$State;->CONNECTED:Landroid/net/NetworkInfo$State;
+
+    invoke-virtual {v7, v0}, Landroid/net/NetworkInfo;->setState(Landroid/net/NetworkInfo$State;)V
+
+    :cond_31
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_4d
+
+    if-eqz v8, :cond_4d
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_4d
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_4c
+    return-object v7
+
+    :cond_4d
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move v3, v6
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0, p1}, Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;
+
+    move-result-object v7
+
+    goto :goto_4c
+.end method
+
+.method public requestRouteToHost(II)Z
+    .registers 12
+
+    const/4 v8, 0x0
+
+    const/4 v3, 0x1
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_30
+
+    if-eqz v7, :cond_30
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v0
+
+    if-nez v0, :cond_30
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2f
+    return v3
+
+    :cond_30
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_4d
+
+    if-eqz v7, :cond_4d
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_4d
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    move v3, v8
+
+    goto :goto_2f
+
+    :cond_4d
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move v3, v8
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0, p1, p2}, Landroid/net/ConnectivityManager;->requestRouteToHost(II)Z
+
+    move-result v3
+
+    goto :goto_2f
+.end method
+
+.method public requestRouteToHostAddress(ILjava/net/InetAddress;)Z
+    .registers 12
+
+    const/4 v8, 0x0
+
+    const/4 v3, 0x1
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_30
+
+    if-eqz v7, :cond_30
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v0
+
+    if-nez v0, :cond_30
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2f
+    return v3
+
+    :cond_30
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_4d
+
+    if-eqz v7, :cond_4d
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_4d
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    move v3, v8
+
+    goto :goto_2f
+
+    :cond_4d
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    move v3, v8
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0, p1, p2}, Landroid/net/ConnectivityManager;->requestRouteToHostAddress(ILjava/net/InetAddress;)Z
+
+    move-result v3
+
+    goto :goto_2f
+.end method
+
+.method public setMobileDataEnabled(Z)V
+    .registers 10
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_2f
+
+    if-eqz v7, :cond_2f
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getSwitchConnectivitySetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2f
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "switchconnectivity"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2e
+    return-void
+
+    :cond_2f
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyConnectivityManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "switchconnectivity"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0, p1}, Landroid/net/ConnectivityManager;->setMobileDataEnabled(Z)V
+
+    goto :goto_2e
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyContentResolver.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyContentResolver.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyContentResolver.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyContentResolver.smali	2014-01-02 21:10:35.196310862 -0600
@@ -0,0 +1,868 @@
+.class public final Landroid/privacy/surrogate/PrivacyContentResolver;
+.super Ljava/lang/Object;
+.source "PrivacyContentResolver.java"
+
+
+# static fields
+.field private static final MMS_CONTENT_URI_AUTHORITY:Ljava/lang/String; = "mms"
+
+.field private static final MMS_SMS_CONTENT_URI_AUTHORITY:Ljava/lang/String; = "mms-sms"
+
+.field private static final SMS_CONTENT_URI_AUTHORITY:Ljava/lang/String; = "sms"
+
+.field private static final TAG:Ljava/lang/String; = "PrivacyContentResolver"
+
+.field private static pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+
+# direct methods
+.method public constructor <init>()V
+    .registers 1
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+.method private static arrayToString([Ljava/lang/String;)Ljava/lang/String;
+    .registers 8
+
+    new-instance v4, Ljava/lang/StringBuffer;
+
+    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V
+
+    if-eqz p0, :cond_2d
+
+    move-object v0, p0
+
+    array-length v3, v0
+
+    const/4 v2, 0x0
+
+    :goto_a
+    if-ge v2, v3, :cond_30
+
+    aget-object v1, v0, v2
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "["
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "]"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_a
+
+    :cond_2d
+    const-string v5, ""
+
+    :goto_2f
+    return-object v5
+
+    :cond_30
+    invoke-virtual {v4}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    goto :goto_2f
+.end method
+
+.method public static enforcePrivacyPermission(Landroid/net/Uri;[Ljava/lang/String;Landroid/content/Context;Landroid/database/Cursor;)Landroid/database/Cursor;
+    .registers 21
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    if-eqz p0, :cond_1db
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v1, :cond_13
+
+    const-string/jumbo v1, "privacy"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/privacy/PrivacySettingsManager;
+
+    sput-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_13
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    invoke-virtual/range {p0 .. p0}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v9
+
+    const-string v15, "[real]"
+
+    move-object/from16 v13, p3
+
+    if-eqz v9, :cond_54
+
+    const-string v1, "contacts"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_3b
+
+    const-string v1, "com.android.contacts"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_ab
+
+    :cond_3b
+    if-eqz v7, :cond_54
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getContactsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_55
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "contacts"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_54
+    :goto_54
+    return-object v13
+
+    :cond_55
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getContactsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x2
+
+    if-ne v1, v4, :cond_a1
+
+    invoke-virtual/range {p0 .. p0}, Landroid/net/Uri;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    sget-object v4, Landroid/provider/ContactsContract$Contacts;->CONTENT_URI:Landroid/net/Uri;
+
+    invoke-virtual {v4}, Landroid/net/Uri;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v1, v4}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_a1
+
+    const/4 v11, 0x0
+
+    if-eqz p1, :cond_82
+
+    move-object/from16 v8, p1
+
+    array-length v12, v8
+
+    const/4 v10, 0x0
+
+    :goto_73
+    if-ge v10, v12, :cond_82
+
+    aget-object v16, v8, v10
+
+    const-string v1, "_id"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_93
+
+    const/4 v11, 0x1
+
+    :cond_82
+    if-nez v11, :cond_96
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    :goto_89
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x2
+
+    const-string v5, "contacts"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_54
+
+    :cond_93
+    add-int/lit8 v10, v10, 0x1
+
+    goto :goto_73
+
+    :cond_96
+    new-instance v14, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v1
+
+    invoke-direct {v14, v13, v1}, Landroid/privacy/surrogate/PrivacyCursor;-><init>(Landroid/database/Cursor;[I)V
+
+    move-object v13, v14
+
+    goto :goto_89
+
+    :cond_a1
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "contacts"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_54
+
+    :cond_ab
+    const-string v1, "com.android.calendar"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_d8
+
+    if-eqz v7, :cond_cd
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getCalendarSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_cd
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "calendar"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_54
+
+    :cond_cd
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "calendar"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_d8
+    const-string/jumbo v1, "mms"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_109
+
+    if-eqz v7, :cond_fd
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getMmsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_fd
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string/jumbo v5, "mms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_fd
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string/jumbo v5, "mms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_109
+    const-string/jumbo v1, "sms"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_13a
+
+    if-eqz v7, :cond_12e
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getSmsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_12e
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string/jumbo v5, "sms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_12e
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string/jumbo v5, "sms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_13a
+    const-string/jumbo v1, "mms-sms"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_14c
+
+    const-string/jumbo v1, "mms-sms-v2"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_17b
+
+    :cond_14c
+    if-eqz v7, :cond_16f
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getMmsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-eq v1, v4, :cond_15c
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getSmsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_16f
+
+    :cond_15c
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string/jumbo v5, "mmsSms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_16f
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string/jumbo v5, "mmsSms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_17b
+    const-string v1, "call_log"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_1a9
+
+    if-eqz v7, :cond_19e
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getCallLogSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_19e
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "callLog"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_19e
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "callLog"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_1a9
+    sget-object v1, Landroid/provider/Browser;->BOOKMARKS_URI:Landroid/net/Uri;
+
+    invoke-virtual {v1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_54
+
+    if-eqz v7, :cond_1d0
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getBookmarksSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_1d0
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "bookmarks"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_1d0
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "bookmarks"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_1db
+    move-object/from16 v13, p3
+
+    goto/16 :goto_54
+.end method
+
+.method public static enforcePrivacyPermission(Landroid/net/Uri;[Ljava/lang/String;Landroid/content/Context;Landroid/database/Cursor;Z)Landroid/database/Cursor;
+    .registers 20
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    if-eqz p0, :cond_dd
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v1, :cond_13
+
+    const-string/jumbo v1, "privacy"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/privacy/PrivacySettingsManager;
+
+    sput-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_13
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    invoke-virtual {p0}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v9
+
+    const-string v14, "[real]"
+
+    move-object/from16 v13, p3
+
+    if-eqz v9, :cond_6d
+
+    const-string v1, "com.google.android.gsf.gservices"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_6d
+
+    if-eqz v7, :cond_cb
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getSimInfoSetting()B
+
+    move-result v1
+
+    if-eqz v1, :cond_cb
+
+    invoke-interface/range {p3 .. p3}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v8
+
+    const/4 v11, -0x1
+
+    const/4 v12, 0x0
+
+    :goto_41
+    :try_start_41
+    invoke-interface/range {p3 .. p3}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    if-ge v12, v1, :cond_5d
+
+    invoke-interface/range {p3 .. p3}, Landroid/database/Cursor;->moveToNext()Z
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string v4, "android_id"
+
+    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_6e
+
+    invoke-interface/range {p3 .. p3}, Landroid/database/Cursor;->getPosition()I
+    :try_end_5c
+    .catchall {:try_start_41 .. :try_end_5c} :catchall_8b
+    .catch Ljava/lang/Exception; {:try_start_41 .. :try_end_5c} :catch_71
+
+    move-result v11
+
+    :cond_5d
+    move-object/from16 v0, p3
+
+    invoke-interface {v0, v8}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    const/4 v1, -0x1
+
+    if-ne v11, v1, :cond_9e
+
+    const-string v1, "PrivacyContentResolver"
+
+    const-string/jumbo v4, "now we return real cursor, because forbidden_pos is -1"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_6d
+    :goto_6d
+    return-object v13
+
+    :cond_6e
+    add-int/lit8 v12, v12, 0x1
+
+    goto :goto_41
+
+    :catch_71
+    move-exception v10
+
+    :try_start_72
+    const-string v1, "PrivacyContentResolver"
+
+    const-string/jumbo v4, "something went wrong while getting blocked permission for android id"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_7a
+    .catchall {:try_start_72 .. :try_end_7a} :catchall_8b
+
+    move-object/from16 v0, p3
+
+    invoke-interface {v0, v8}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    const/4 v1, -0x1
+
+    if-ne v11, v1, :cond_9e
+
+    const-string v1, "PrivacyContentResolver"
+
+    const-string/jumbo v4, "now we return real cursor, because forbidden_pos is -1"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_6d
+
+    :catchall_8b
+    move-exception v1
+
+    move-object/from16 v0, p3
+
+    invoke-interface {v0, v8}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    const/4 v4, -0x1
+
+    if-ne v11, v4, :cond_9d
+
+    const-string v1, "PrivacyContentResolver"
+
+    const-string/jumbo v4, "now we return real cursor, because forbidden_pos is -1"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_6d
+
+    :cond_9d
+    throw v1
+
+    :cond_9e
+    const-string v1, "PrivacyContentResolver"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v5, "now blocking google access to android id and give fake cursor. forbidden_position: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const-string v14, "[fake]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    move-object/from16 v0, p3
+
+    invoke-direct {v13, v0, v11}, Landroid/privacy/surrogate/PrivacyCursor;-><init>(Landroid/database/Cursor;I)V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string/jumbo v5, "networkInfoSIM"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_6d
+
+    :cond_cb
+    const-string v1, "PrivacyContentResolver"
+
+    const-string v4, "google is allowed to get real cursor"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string/jumbo v5, "networkInfoSIM"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_6d
+
+    :cond_dd
+    move-object/from16 v13, p3
+
+    goto :goto_6d
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyCursor.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyCursor.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyCursor.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyCursor.smali	2014-01-02 21:10:35.196310862 -0600
@@ -0,0 +1,1765 @@
+.class public Landroid/privacy/surrogate/PrivacyCursor;
+.super Ljava/lang/Object;
+.source "PrivacyCursor.java"
+
+# interfaces
+.implements Landroid/database/Cursor;
+
+
+# static fields
+.field private static final TAG:Ljava/lang/String; = "PrivacyCursor"
+
+.field private static final mask:[Ljava/lang/String;
+
+
+# instance fields
+.field private allowedIdMapping:[I
+
+.field private allowedIds:[I
+
+.field private blockedColumnAndroidID:I
+
+.field private googleCursor:Z
+
+.field private realCursor:Landroid/database/Cursor;
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 3
+
+    const/16 v0, 0x10
+
+    new-array v0, v0, [Ljava/lang/String;
+
+    const/4 v1, 0x0
+
+    const-string v2, "0"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x1
+
+    const-string v2, "1"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x2
+
+    const-string v2, "2"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x3
+
+    const-string v2, "3"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x4
+
+    const-string v2, "4"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x5
+
+    const-string v2, "5"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x6
+
+    const-string v2, "6"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x7
+
+    const-string v2, "7"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x8
+
+    const-string v2, "8"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x9
+
+    const-string v2, "9"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xa
+
+    const-string v2, "a"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xb
+
+    const-string v2, "b"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xc
+
+    const-string v2, "c"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xd
+
+    const-string v2, "d"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xe
+
+    const-string v2, "e"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xf
+
+    const-string v2, "f"
+
+    aput-object v2, v0, v1
+
+    sput-object v0, Landroid/privacy/surrogate/PrivacyCursor;->mask:[Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .registers 1
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+.method public constructor <init>(Landroid/database/Cursor;I)V
+    .registers 6
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const/16 v0, -0xb
+
+    if-ne p2, v0, :cond_28
+
+    const/4 v0, 0x0
+
+    iput-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    :goto_a
+    iput p2, p0, Landroid/privacy/surrogate/PrivacyCursor;->blockedColumnAndroidID:I
+
+    const/4 v0, 0x1
+
+    iput-boolean v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    const-string v0, "PrivacyCursor"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "constructor is ready for google cursor! forbidden_position: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    return-void
+
+    :cond_28
+    iput-object p1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    goto :goto_a
+.end method
+
+.method public constructor <init>(Landroid/database/Cursor;[I)V
+    .registers 7
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    if-eqz p2, :cond_8
+
+    array-length v2, p2
+
+    if-nez v2, :cond_9
+
+    :cond_8
+    const/4 p1, 0x0
+
+    :cond_9
+    iput-object p1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    iput-object p2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIds:[I
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v2, :cond_3f
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v2}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v0
+
+    array-length v2, p2
+
+    new-array v2, v2, [I
+
+    iput-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    const/4 v1, 0x0
+
+    :cond_1d
+    :goto_1d
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v2}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_3a
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-direct {p0, v2}, Landroid/privacy/surrogate/PrivacyCursor;->isAllowed(Landroid/database/Cursor;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_1d
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v3}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v3
+
+    aput v3, v2, v1
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_1d
+
+    :cond_3a
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v2, v0}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    :cond_3f
+    return-void
+.end method
+
+.method private getContactId(Landroid/database/Cursor;)I
+    .registers 5
+
+    const-string v2, "_id"
+
+    invoke-interface {p1, v2}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I
+
+    move-result v0
+
+    const/4 v1, -0x1
+
+    const/4 v2, -0x1
+
+    if-eq v0, v2, :cond_e
+
+    invoke-interface {p1, v0}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v1
+
+    :cond_e
+    return v1
+.end method
+
+.method private getFakeID()Ljava/lang/String;
+    .registers 8
+
+    :try_start_0
+    new-instance v3, Ljava/util/Random;
+
+    invoke-direct {v3}, Ljava/util/Random;-><init>()V
+
+    const-string v2, ""
+
+    const/4 v1, 0x0
+
+    :goto_8
+    const/16 v4, 0x10
+
+    if-ge v1, v4, :cond_34
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    sget-object v5, Landroid/privacy/surrogate/PrivacyCursor;->mask:[Ljava/lang/String;
+
+    const/16 v6, 0xf
+
+    invoke-virtual {v3, v6}, Ljava/util/Random;->nextInt(I)I
+
+    move-result v6
+
+    aget-object v5, v5, v6
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+    :try_end_26
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_26} :catch_2a
+
+    move-result-object v2
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_8
+
+    :catch_2a
+    move-exception v0
+
+    const-string v4, "PrivacyCursor"
+
+    const-string/jumbo v5, "something went wrong with creating fake ID"
+
+    invoke-static {v4, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v2, 0x0
+
+    :cond_34
+    return-object v2
+.end method
+
+.method private getMappedPos(I)I
+    .registers 4
+
+    const/4 v0, 0x0
+
+    :goto_1
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v1, v1
+
+    if-ge v0, v1, :cond_10
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    aget v1, v1, v0
+
+    if-ne v1, p1, :cond_d
+
+    :goto_c
+    return v0
+
+    :cond_d
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_1
+
+    :cond_10
+    const/4 v0, -0x1
+
+    goto :goto_c
+.end method
+
+.method private isAllowed(I)Z
+    .registers 7
+
+    const/4 v4, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIds:[I
+
+    array-length v3, v0
+
+    const/4 v2, 0x0
+
+    :goto_5
+    if-ge v2, v3, :cond_c
+
+    aget v1, v0, v2
+
+    if-ne p1, v1, :cond_d
+
+    const/4 v4, 0x1
+
+    :cond_c
+    return v4
+
+    :cond_d
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_5
+.end method
+
+.method private isAllowed(Landroid/database/Cursor;)Z
+    .registers 3
+
+    invoke-direct {p0, p1}, Landroid/privacy/surrogate/PrivacyCursor;->getContactId(Landroid/database/Cursor;)I
+
+    move-result v0
+
+    invoke-direct {p0, v0}, Landroid/privacy/surrogate/PrivacyCursor;->isAllowed(I)Z
+
+    move-result v0
+
+    return v0
+.end method
+
+
+# virtual methods
+.method public close()V
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    :cond_9
+    return-void
+.end method
+
+.method public copyStringToBuffer(ILandroid/database/CharArrayBuffer;)V
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2}, Landroid/database/Cursor;->copyStringToBuffer(ILandroid/database/CharArrayBuffer;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public deactivate()V
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->deactivate()V
+
+    :cond_9
+    return-void
+.end method
+
+.method public getBlob(I)[B
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getBlob(I)[B
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    new-array v0, v0, [B
+
+    goto :goto_a
+.end method
+
+.method public getColumnCount()I
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getColumnCount()I
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getColumnIndex(Ljava/lang/String;)I
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, -0x1
+
+    goto :goto_a
+.end method
+
+.method public getColumnIndexOrThrow(Ljava/lang/String;)I
+    .registers 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/IllegalArgumentException;
+        }
+    .end annotation
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getColumnIndexOrThrow(Ljava/lang/String;)I
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, -0x1
+
+    goto :goto_a
+.end method
+
+.method public getColumnName(I)Ljava/lang/String;
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getColumnName(I)Ljava/lang/String;
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    const-string v0, ""
+
+    goto :goto_a
+.end method
+
+.method public getColumnNames()[Ljava/lang/String;
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getColumnNames()[Ljava/lang/String;
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    const/4 v0, 0x1
+
+    new-array v0, v0, [Ljava/lang/String;
+
+    const/4 v1, 0x0
+
+    const-string v2, ""
+
+    aput-object v2, v0, v1
+
+    goto :goto_a
+.end method
+
+.method public getCount()I
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_2b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v0, :cond_2b
+
+    iget-boolean v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v0, :cond_2b
+
+    const-string v0, "PrivacyCursor"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "getCount: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v2, v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v0, v0
+
+    :goto_2a
+    return v0
+
+    :cond_2b
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_36
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getCount()I
+
+    move-result v0
+
+    goto :goto_2a
+
+    :cond_36
+    const/4 v0, 0x0
+
+    goto :goto_2a
+.end method
+
+.method public getDouble(I)D
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getDouble(I)D
+
+    move-result-wide v0
+
+    :goto_a
+    return-wide v0
+
+    :cond_b
+    const-wide/16 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getExtras()Landroid/os/Bundle;
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getExtras()Landroid/os/Bundle;
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    goto :goto_a
+.end method
+
+.method public getFloat(I)F
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getFloat(I)F
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getInt(I)I
+    .registers 4
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_b
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1, p1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getLong(I)J
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getLong(I)J
+
+    move-result-wide v0
+
+    :goto_a
+    return-wide v0
+
+    :cond_b
+    const-wide/16 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getPosition()I
+    .registers 5
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_3f
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v1, :cond_3f
+
+    iget-boolean v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v1, :cond_3f
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v1
+
+    invoke-direct {p0, v1}, Landroid/privacy/surrogate/PrivacyCursor;->getMappedPos(I)I
+
+    move-result v0
+
+    const-string v1, "PrivacyCursor"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "getPosition - mapped position: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " real position: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v3}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v3
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    :goto_3e
+    return v0
+
+    :cond_3f
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_4a
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v0
+
+    goto :goto_3e
+
+    :cond_4a
+    const/4 v0, -0x1
+
+    goto :goto_3e
+.end method
+
+.method public getShort(I)S
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getString(I)Ljava/lang/String;
+    .registers 9
+
+    iget-boolean v4, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-eqz v4, :cond_63
+
+    const/4 v4, 0x1
+
+    if-ne p1, v4, :cond_63
+
+    iget-object v4, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v4}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v4
+
+    iget v5, p0, Landroid/privacy/surrogate/PrivacyCursor;->blockedColumnAndroidID:I
+
+    if-ne v4, v5, :cond_63
+
+    const-string v4, "PrivacyCursor"
+
+    const-string v5, "google tries to get android_id with getString()"
+
+    invoke-static {v4, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-direct {p0}, Landroid/privacy/surrogate/PrivacyCursor;->getFakeID()Ljava/lang/String;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_58
+
+    :try_start_1e
+    new-instance v3, Ljava/math/BigInteger;
+
+    const/16 v4, 0x10
+
+    invoke-direct {v3, v2, v4}, Ljava/math/BigInteger;-><init>(Ljava/lang/String;I)V
+
+    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string v4, "PrivacyCursor"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v6, "returned : "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "(String) as fake android id"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_48
+    .catch Ljava/lang/Exception; {:try_start_1e .. :try_end_48} :catch_49
+
+    :goto_48
+    return-object v1
+
+    :catch_49
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v4, "PrivacyCursor"
+
+    const-string/jumbo v5, "returned \"\" as android_id"
+
+    invoke-static {v4, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const-string v1, ""
+
+    goto :goto_48
+
+    :cond_58
+    const-string v4, "PrivacyCursor"
+
+    const-string/jumbo v5, "returned \"\" as android_id"
+
+    invoke-static {v4, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const-string v1, ""
+
+    goto :goto_48
+
+    :cond_63
+    iget-object v4, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v4, :cond_6e
+
+    iget-object v4, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v4, p1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v1
+
+    goto :goto_48
+
+    :cond_6e
+    const-string v1, ""
+
+    goto :goto_48
+.end method
+
+.method public getType(I)I
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getType(I)I
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getWantsAllOnMoveCalls()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getWantsAllOnMoveCalls()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public isAfterLast()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->isAfterLast()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public isBeforeFirst()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->isBeforeFirst()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public isClosed()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->isClosed()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public isFirst()Z
+    .registers 4
+
+    const/4 v0, 0x0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_1b
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v1, :cond_1b
+
+    iget-boolean v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v1, :cond_1b
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v1
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    aget v2, v2, v0
+
+    if-ne v1, v2, :cond_1a
+
+    const/4 v0, 0x1
+
+    :cond_1a
+    :goto_1a
+    return v0
+
+    :cond_1b
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_1a
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->isFirst()Z
+
+    move-result v0
+
+    goto :goto_1a
+.end method
+
+.method public isLast()Z
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_1f
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v0, :cond_1f
+
+    iget-boolean v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v0, :cond_1f
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v2, v2
+
+    add-int/lit8 v2, v2, -0x1
+
+    aget v1, v1, v2
+
+    if-ne v0, v1, :cond_2a
+
+    const/4 v0, 0x1
+
+    :goto_1e
+    return v0
+
+    :cond_1f
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_2a
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->isLast()Z
+
+    move-result v0
+
+    goto :goto_1e
+
+    :cond_2a
+    const/4 v0, 0x0
+
+    goto :goto_1e
+.end method
+
+.method public isNull(I)Z
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->isNull(I)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public move(I)Z
+    .registers 8
+
+    const/4 v2, 0x0
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v3, :cond_3e
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v3, :cond_3e
+
+    iget-boolean v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v3, :cond_3e
+
+    const-string v3, "PrivacyCursor"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v5, "move - offset: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    :try_start_26
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    iget-object v4, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v4}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v4
+
+    invoke-direct {p0, v4}, Landroid/privacy/surrogate/PrivacyCursor;->getMappedPos(I)I
+
+    move-result v4
+
+    add-int/2addr v4, p1
+
+    aget v1, v3, v4
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v3, v1}, Landroid/database/Cursor;->moveToPosition(I)Z
+    :try_end_3a
+    .catch Ljava/lang/ArrayIndexOutOfBoundsException; {:try_start_26 .. :try_end_3a} :catch_3c
+
+    move-result v2
+
+    :cond_3b
+    :goto_3b
+    return v2
+
+    :catch_3c
+    move-exception v0
+
+    goto :goto_3b
+
+    :cond_3e
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v3, :cond_3b
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v3, p1}, Landroid/database/Cursor;->move(I)Z
+
+    goto :goto_3b
+.end method
+
+.method public moveToFirst()Z
+    .registers 4
+
+    const/4 v0, 0x0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_18
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v1, :cond_18
+
+    iget-boolean v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v1, :cond_18
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    aget v2, v2, v0
+
+    invoke-interface {v1, v2}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    move-result v0
+
+    :cond_17
+    :goto_17
+    return v0
+
+    :cond_18
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_17
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v0
+
+    goto :goto_17
+.end method
+
+.method public moveToLast()Z
+    .registers 5
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_1c
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v1, :cond_1c
+
+    iget-boolean v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v1, :cond_1c
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v3, v3
+
+    add-int/lit8 v3, v3, -0x1
+
+    aget v2, v2, v3
+
+    invoke-interface {v1, v2}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    move-result v0
+
+    :goto_1b
+    return v0
+
+    :cond_1c
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_27
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToLast()Z
+
+    move-result v0
+
+    goto :goto_1b
+
+    :cond_27
+    const/4 v0, 0x0
+
+    goto :goto_1b
+.end method
+
+.method public moveToNext()Z
+    .registers 3
+
+    const/4 v0, 0x0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_29
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v1, :cond_29
+
+    iget-boolean v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v1, :cond_29
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v1
+
+    if-nez v1, :cond_16
+
+    :cond_15
+    :goto_15
+    return v0
+
+    :cond_16
+    const/4 v0, 0x1
+
+    :goto_17
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_15
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-direct {p0, v1}, Landroid/privacy/surrogate/PrivacyCursor;->isAllowed(Landroid/database/Cursor;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_15
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v0
+
+    goto :goto_17
+
+    :cond_29
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_15
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v0
+
+    goto :goto_15
+.end method
+
+.method public moveToPosition(I)Z
+    .registers 6
+
+    const/4 v1, 0x0
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v2, :cond_1a
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v2, :cond_1a
+
+    iget-boolean v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v2, :cond_1a
+
+    :try_start_d
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    aget v3, v3, p1
+
+    invoke-interface {v2, v3}, Landroid/database/Cursor;->moveToPosition(I)Z
+    :try_end_16
+    .catch Ljava/lang/ArrayIndexOutOfBoundsException; {:try_start_d .. :try_end_16} :catch_18
+
+    move-result v1
+
+    :cond_17
+    :goto_17
+    return v1
+
+    :catch_18
+    move-exception v0
+
+    goto :goto_17
+
+    :cond_1a
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v2, :cond_17
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v2, p1}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    move-result v1
+
+    goto :goto_17
+.end method
+
+.method public moveToPrevious()Z
+    .registers 3
+
+    const/4 v0, 0x0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_29
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    if-eqz v1, :cond_29
+
+    iget-boolean v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->googleCursor:Z
+
+    if-nez v1, :cond_29
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToPrevious()Z
+
+    move-result v1
+
+    if-nez v1, :cond_16
+
+    :cond_15
+    :goto_15
+    return v0
+
+    :cond_16
+    const/4 v0, 0x1
+
+    :goto_17
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_15
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-direct {p0, v1}, Landroid/privacy/surrogate/PrivacyCursor;->isAllowed(Landroid/database/Cursor;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_15
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToPrevious()Z
+
+    move-result v0
+
+    goto :goto_17
+
+    :cond_29
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_15
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToPrevious()Z
+
+    move-result v0
+
+    goto :goto_15
+.end method
+
+.method public registerContentObserver(Landroid/database/ContentObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->registerContentObserver(Landroid/database/ContentObserver;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public registerDataSetObserver(Landroid/database/DataSetObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->registerDataSetObserver(Landroid/database/DataSetObserver;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public requery()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->requery()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public respond(Landroid/os/Bundle;)Landroid/os/Bundle;
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->respond(Landroid/os/Bundle;)Landroid/os/Bundle;
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    goto :goto_a
+.end method
+
+.method public setNotificationUri(Landroid/content/ContentResolver;Landroid/net/Uri;)V
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2}, Landroid/database/Cursor;->setNotificationUri(Landroid/content/ContentResolver;Landroid/net/Uri;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public unregisterContentObserver(Landroid/database/ContentObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->unregisterContentObserver(Landroid/database/ContentObserver;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public unregisterDataSetObserver(Landroid/database/DataSetObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->unregisterDataSetObserver(Landroid/database/DataSetObserver;)V
+
+    :cond_9
+    return-void
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater.smali	2014-01-02 21:10:35.196310862 -0600
@@ -0,0 +1,134 @@
+.class Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;
+.super Ljava/lang/Thread;
+.source "PrivacyLocationManager.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/privacy/surrogate/PrivacyLocationManager;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x2
+    name = "PrivacyLocationUpdater"
+.end annotation
+
+
+# instance fields
+.field private intent:Landroid/app/PendingIntent;
+
+.field private latitude:D
+
+.field private listener:Landroid/location/LocationListener;
+
+.field private longitude:D
+
+.field private provider:Ljava/lang/String;
+
+.field final synthetic this$0:Landroid/privacy/surrogate/PrivacyLocationManager;
+
+
+# direct methods
+.method public constructor <init>(Landroid/privacy/surrogate/PrivacyLocationManager;Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;DD)V
+    .registers 9
+
+    iput-object p1, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->this$0:Landroid/privacy/surrogate/PrivacyLocationManager;
+
+    invoke-direct {p0}, Ljava/lang/Thread;-><init>()V
+
+    iput-object p2, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->provider:Ljava/lang/String;
+
+    iput-object p3, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->listener:Landroid/location/LocationListener;
+
+    iput-object p4, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->intent:Landroid/app/PendingIntent;
+
+    iput-wide p5, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->latitude:D
+
+    iput-wide p7, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->longitude:D
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public run()V
+    .registers 8
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->provider:Ljava/lang/String;
+
+    if-eqz v3, :cond_43
+
+    new-instance v2, Landroid/location/Location;
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->provider:Ljava/lang/String;
+
+    invoke-direct {v2, v3}, Landroid/location/Location;-><init>(Ljava/lang/String;)V
+
+    iget-wide v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->latitude:D
+
+    invoke-virtual {v2, v3, v4}, Landroid/location/Location;->setLatitude(D)V
+
+    iget-wide v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->longitude:D
+
+    invoke-virtual {v2, v3, v4}, Landroid/location/Location;->setLongitude(D)V
+
+    const/4 v1, 0x0
+
+    :goto_16
+    const/4 v3, 0x5
+
+    if-ge v1, v3, :cond_43
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->listener:Landroid/location/LocationListener;
+
+    if-eqz v3, :cond_34
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->listener:Landroid/location/LocationListener;
+
+    invoke-interface {v3, v2}, Landroid/location/LocationListener;->onLocationChanged(Landroid/location/Location;)V
+
+    :cond_22
+    :goto_22
+    :try_start_22
+    invoke-static {}, Ljava/lang/Math;->random()D
+
+    move-result-wide v3
+
+    const-wide v5, 0x408f400000000000L
+
+    mul-double/2addr v3, v5
+
+    double-to-int v3, v3
+
+    int-to-long v3, v3
+
+    invoke-static {v3, v4}, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->sleep(J)V
+    :try_end_31
+    .catch Ljava/lang/InterruptedException; {:try_start_22 .. :try_end_31} :catch_3e
+
+    :goto_31
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_16
+
+    :cond_34
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->intent:Landroid/app/PendingIntent;
+
+    if-eqz v3, :cond_22
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->intent:Landroid/app/PendingIntent;
+
+    invoke-virtual {v3}, Landroid/app/PendingIntent;->cancel()V
+
+    goto :goto_22
+
+    :catch_3e
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/InterruptedException;->printStackTrace()V
+
+    goto :goto_31
+
+    :cond_43
+    return-void
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyLocationManager.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyLocationManager.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyLocationManager.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyLocationManager.smali	2014-01-02 21:10:35.196310862 -0600
@@ -0,0 +1,2091 @@
+.class public final Landroid/privacy/surrogate/PrivacyLocationManager;
+.super Landroid/location/LocationManager;
+.source "PrivacyLocationManager.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;
+    }
+.end annotation
+
+
+# static fields
+.field private static final CUSTOM_LOCATION_UPDATE_COUNT:I = 0x5
+
+.field private static final TAG:Ljava/lang/String; = "PrivacyLocationManager"
+
+
+# instance fields
+.field private context:Landroid/content/Context;
+
+.field private lock:Ljava/lang/Object;
+
+.field private pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+
+# direct methods
+.method public constructor <init>(Landroid/location/ILocationManager;Landroid/content/Context;)V
+    .registers 5
+
+    invoke-direct {p0, p2, p1}, Landroid/location/LocationManager;-><init>(Landroid/content/Context;Landroid/location/ILocationManager;)V
+
+    new-instance v0, Ljava/lang/Object;
+
+    invoke-direct {v0}, Ljava/lang/Object;-><init>()V
+
+    iput-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->lock:Ljava/lang/Object;
+
+    iput-object p2, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->context:Landroid/content/Context;
+
+    new-instance v0, Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "privacy"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v1
+
+    invoke-direct {v0, p2, v1}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    return-void
+.end method
+
+.method private requestLocationUpdates(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+    .registers 7
+
+    const/4 v2, 0x3
+
+    if-nez p1, :cond_5
+
+    const/4 v0, 0x0
+
+    :goto_4
+    return v0
+
+    :cond_5
+    invoke-virtual {p1}, Landroid/location/Criteria;->getAccuracy()I
+
+    move-result v0
+
+    const/4 v1, 0x1
+
+    if-eq v0, v1, :cond_24
+
+    invoke-virtual {p1}, Landroid/location/Criteria;->getBearingAccuracy()I
+
+    move-result v0
+
+    if-eq v0, v2, :cond_24
+
+    invoke-virtual {p1}, Landroid/location/Criteria;->getHorizontalAccuracy()I
+
+    move-result v0
+
+    if-eq v0, v2, :cond_24
+
+    invoke-virtual {p1}, Landroid/location/Criteria;->getVerticalAccuracy()I
+
+    move-result v0
+
+    if-eq v0, v2, :cond_24
+
+    invoke-virtual {p1}, Landroid/location/Criteria;->getSpeedAccuracy()I
+
+    move-result v0
+
+    if-ne v0, v2, :cond_2b
+
+    :cond_24
+    const-string v0, "gps"
+
+    invoke-direct {p0, v0, p2, p3}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    goto :goto_4
+
+    :cond_2b
+    const-string/jumbo v0, "network"
+
+    invoke-direct {p0, v0, p2, p3}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    goto :goto_4
+.end method
+
+.method private requestLocationUpdates(Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+    .registers 24
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->lock:Ljava/lang/Object;
+
+    move-object/from16 v19, v0
+
+    monitor-enter v19
+
+    :try_start_7
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    const/16 v18, 0x0
+
+    if-eqz v7, :cond_239
+
+    const-string v1, "gps"
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_111
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v1
+
+    packed-switch v1, :pswitch_data_25e
+
+    :cond_30
+    :goto_30
+    monitor-exit v19
+
+    return v18
+
+    :pswitch_32
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "locationGPS"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_30
+
+    :catchall_3e
+    move-exception v1
+
+    monitor-exit v19
+    :try_end_40
+    .catchall {:try_start_7 .. :try_end_40} :catchall_3e
+
+    throw v1
+
+    :pswitch_41
+    if-eqz p3, :cond_46
+
+    :try_start_43
+    invoke-virtual/range {p3 .. p3}, Landroid/app/PendingIntent;->cancel()V
+
+    :cond_46
+    const/16 v18, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "locationGPS"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_53
+    .catchall {:try_start_43 .. :try_end_53} :catchall_3e
+
+    goto :goto_30
+
+    :pswitch_54
+    :try_start_54
+    new-instance v8, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsLat()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v1}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v13
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsLon()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v1}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v15
+
+    move-object/from16 v9, p0
+
+    move-object/from16 v10, p1
+
+    move-object/from16 v11, p2
+
+    move-object/from16 v12, p3
+
+    invoke-direct/range {v8 .. v16}, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;-><init>(Landroid/privacy/surrogate/PrivacyLocationManager;Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;DD)V
+
+    invoke-virtual {v8}, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->start()V
+    :try_end_74
+    .catchall {:try_start_54 .. :try_end_74} :catchall_3e
+    .catch Ljava/lang/NumberFormatException; {:try_start_54 .. :try_end_74} :catch_a6
+
+    const/16 v18, 0x1
+
+    :goto_76
+    :try_start_76
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x2
+
+    const-string v5, "locationGPS"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Lat: "
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsLat()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v8, " Lon: "
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsLon()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_30
+
+    :catch_a6
+    move-exception v17
+
+    const-string v1, "PrivacyLocationManager"
+
+    const-string/jumbo v4, "requestLocationUpdates: invalid coordinates"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_af
+    .catchall {:try_start_76 .. :try_end_af} :catchall_3e
+
+    const/16 v18, 0x1
+
+    goto :goto_76
+
+    :pswitch_b2
+    :try_start_b2
+    new-instance v8, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsLat()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v1}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v13
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsLon()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v1}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v15
+
+    move-object/from16 v9, p0
+
+    move-object/from16 v10, p1
+
+    move-object/from16 v11, p2
+
+    move-object/from16 v12, p3
+
+    invoke-direct/range {v8 .. v16}, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;-><init>(Landroid/privacy/surrogate/PrivacyLocationManager;Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;DD)V
+
+    invoke-virtual {v8}, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->start()V
+    :try_end_d2
+    .catchall {:try_start_b2 .. :try_end_d2} :catchall_3e
+    .catch Ljava/lang/NumberFormatException; {:try_start_b2 .. :try_end_d2} :catch_105
+
+    const/16 v18, 0x1
+
+    :goto_d4
+    :try_start_d4
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x3
+
+    const-string v5, "locationGPS"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Lat: "
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsLat()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v8, " Lon: "
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsLon()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_30
+
+    :catch_105
+    move-exception v17
+
+    const-string v1, "PrivacyLocationManager"
+
+    const-string/jumbo v4, "requestLocationUpdates: invalid coordinates"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v18, 0x1
+
+    goto :goto_d4
+
+    :cond_111
+    const-string/jumbo v1, "network"
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_204
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v1
+
+    packed-switch v1, :pswitch_data_26a
+
+    goto/16 :goto_30
+
+    :pswitch_125
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "locationNetwork"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_30
+
+    :pswitch_132
+    if-eqz p3, :cond_137
+
+    invoke-virtual/range {p3 .. p3}, Landroid/app/PendingIntent;->cancel()V
+
+    :cond_137
+    const/16 v18, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "locationNetwork"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_144
+    .catchall {:try_start_d4 .. :try_end_144} :catchall_3e
+
+    goto/16 :goto_30
+
+    :pswitch_146
+    :try_start_146
+    new-instance v8, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkLat()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v1}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v13
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkLon()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v1}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v15
+
+    move-object/from16 v9, p0
+
+    move-object/from16 v10, p1
+
+    move-object/from16 v11, p2
+
+    move-object/from16 v12, p3
+
+    invoke-direct/range {v8 .. v16}, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;-><init>(Landroid/privacy/surrogate/PrivacyLocationManager;Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;DD)V
+
+    invoke-virtual {v8}, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->start()V
+    :try_end_166
+    .catchall {:try_start_146 .. :try_end_166} :catchall_3e
+    .catch Ljava/lang/NumberFormatException; {:try_start_146 .. :try_end_166} :catch_199
+
+    const/16 v18, 0x1
+
+    :goto_168
+    :try_start_168
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x2
+
+    const-string v5, "locationNetwork"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Lat: "
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkLat()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v8, " Lon: "
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkLon()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_30
+
+    :catch_199
+    move-exception v17
+
+    const-string v1, "PrivacyLocationManager"
+
+    const-string/jumbo v4, "requestLocationUpdates: invalid coordinates"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_1a2
+    .catchall {:try_start_168 .. :try_end_1a2} :catchall_3e
+
+    const/16 v18, 0x1
+
+    goto :goto_168
+
+    :pswitch_1a5
+    :try_start_1a5
+    new-instance v8, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkLat()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v1}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v13
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkLon()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v1}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v15
+
+    move-object/from16 v9, p0
+
+    move-object/from16 v10, p1
+
+    move-object/from16 v11, p2
+
+    move-object/from16 v12, p3
+
+    invoke-direct/range {v8 .. v16}, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;-><init>(Landroid/privacy/surrogate/PrivacyLocationManager;Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;DD)V
+
+    invoke-virtual {v8}, Landroid/privacy/surrogate/PrivacyLocationManager$PrivacyLocationUpdater;->start()V
+    :try_end_1c5
+    .catchall {:try_start_1a5 .. :try_end_1c5} :catchall_3e
+    .catch Ljava/lang/NumberFormatException; {:try_start_1a5 .. :try_end_1c5} :catch_1f8
+
+    const/16 v18, 0x1
+
+    :goto_1c7
+    :try_start_1c7
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x3
+
+    const-string v5, "locationNetwork"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Lat: "
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkLat()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v8, " Lon: "
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkLon()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_30
+
+    :catch_1f8
+    move-exception v17
+
+    const-string v1, "PrivacyLocationManager"
+
+    const-string/jumbo v4, "requestLocationUpdates: invalid coordinates"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v18, 0x1
+
+    goto :goto_1c7
+
+    :cond_204
+    const-string/jumbo v1, "passive"
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_30
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v1
+
+    if-nez v1, :cond_22a
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v1
+
+    if-nez v1, :cond_22a
+
+    const/16 v18, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "locationGPS"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_30
+
+    :cond_22a
+    const/16 v18, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "locationGPS"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_30
+
+    :cond_239
+    const-string/jumbo v1, "network"
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_251
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "locationNetwork"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_30
+
+    :cond_251
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "locationGPS"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_25c
+    .catchall {:try_start_1c7 .. :try_end_25c} :catchall_3e
+
+    goto/16 :goto_30
+
+    :pswitch_data_25e
+    .packed-switch 0x0
+        :pswitch_32
+        :pswitch_41
+        :pswitch_54
+        :pswitch_b2
+    .end packed-switch
+
+    :pswitch_data_26a
+    .packed-switch 0x0
+        :pswitch_125
+        :pswitch_132
+        :pswitch_146
+        :pswitch_1a5
+    .end packed-switch
+.end method
+
+
+# virtual methods
+.method public addNmeaListener(Landroid/location/GpsStatus$NmeaListener;)Z
+    .registers 10
+
+    const/4 v5, 0x0
+
+    const/4 v7, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_24
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_24
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string v4, "locationGPS"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    move v0, v7
+
+    :goto_23
+    return v0
+
+    :cond_24
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationGPS"
+
+    move v3, v7
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->addNmeaListener(Landroid/location/GpsStatus$NmeaListener;)Z
+
+    move-result v0
+
+    goto :goto_23
+.end method
+
+.method public getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;
+    .registers 14
+
+    const/4 v11, 0x3
+
+    const/4 v10, 0x2
+
+    const/4 v8, 0x1
+
+    const/4 v3, 0x0
+
+    const/4 v5, 0x0
+
+    if-nez p1, :cond_c
+
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;
+
+    move-result-object v7
+
+    :cond_b
+    :goto_b
+    return-object v7
+
+    :cond_c
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    const/4 v7, 0x0
+
+    if-eqz v6, :cond_22c
+
+    const-string v0, "gps"
+
+    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_ff
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v0
+
+    packed-switch v0, :pswitch_data_29a
+
+    goto :goto_b
+
+    :pswitch_2f
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationGPS"
+
+    if-eqz v7, :cond_5e
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Lat: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLatitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v8, " Lon: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLongitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    :cond_5e
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_b
+
+    :pswitch_62
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationGPS"
+
+    move v3, v8
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_b
+
+    :pswitch_6b
+    new-instance v7, Landroid/location/Location;
+
+    invoke-direct {v7, p1}, Landroid/location/Location;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationGpsLat()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-static {v0}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v3
+
+    invoke-virtual {v7, v3, v4}, Landroid/location/Location;->setLatitude(D)V
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationGpsLon()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-static {v0}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v3
+
+    invoke-virtual {v7, v3, v4}, Landroid/location/Location;->setLongitude(D)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationGPS"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Lat: "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLatitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v3, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, " Lon: "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLongitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v3, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move v3, v10
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_b
+
+    :pswitch_b5
+    new-instance v7, Landroid/location/Location;
+
+    invoke-direct {v7, p1}, Landroid/location/Location;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationGpsLat()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-static {v0}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v3
+
+    invoke-virtual {v7, v3, v4}, Landroid/location/Location;->setLatitude(D)V
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationGpsLon()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-static {v0}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v3
+
+    invoke-virtual {v7, v3, v4}, Landroid/location/Location;->setLongitude(D)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationGPS"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Lat: "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLatitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v3, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, " Lon: "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLongitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v3, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move v3, v11
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_b
+
+    :cond_ff
+    const-string/jumbo v0, "network"
+
+    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_1e3
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v0
+
+    packed-switch v0, :pswitch_data_2a6
+
+    goto/16 :goto_b
+
+    :pswitch_111
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationNetwork"
+
+    if-eqz v7, :cond_140
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Lat: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLatitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v8, " Lon: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLongitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    :cond_140
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_b
+
+    :pswitch_145
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationNetwork"
+
+    move v3, v8
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_b
+
+    :pswitch_14f
+    new-instance v7, Landroid/location/Location;
+
+    invoke-direct {v7, p1}, Landroid/location/Location;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkLat()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-static {v0}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v3
+
+    invoke-virtual {v7, v3, v4}, Landroid/location/Location;->setLatitude(D)V
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkLon()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-static {v0}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v3
+
+    invoke-virtual {v7, v3, v4}, Landroid/location/Location;->setLongitude(D)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationNetwork"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Lat: "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLatitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v3, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, " Lon: "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLongitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v3, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move v3, v10
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_b
+
+    :pswitch_199
+    new-instance v7, Landroid/location/Location;
+
+    invoke-direct {v7, p1}, Landroid/location/Location;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkLat()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-static {v0}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v3
+
+    invoke-virtual {v7, v3, v4}, Landroid/location/Location;->setLatitude(D)V
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkLon()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-static {v0}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D
+
+    move-result-wide v3
+
+    invoke-virtual {v7, v3, v4}, Landroid/location/Location;->setLongitude(D)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationNetwork"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Lat: "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLatitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v3, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, " Lon: "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLongitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v3, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move v3, v11
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_b
+
+    :cond_1e3
+    const-string/jumbo v0, "passive"
+
+    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_b
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v0
+
+    if-nez v0, :cond_b
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v0
+
+    if-nez v0, :cond_b
+
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationGPS"
+
+    if-eqz v7, :cond_227
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Lat: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLatitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v8, " Lon: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLongitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    :cond_227
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_b
+
+    :cond_22c
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;
+
+    move-result-object v7
+
+    const-string/jumbo v0, "network"
+
+    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_269
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationNetwork"
+
+    if-eqz v7, :cond_264
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Lat: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLatitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v8, " Lon: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLongitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    :cond_264
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_b
+
+    :cond_269
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "locationGPS"
+
+    if-eqz v7, :cond_294
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Lat: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLatitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v8, " Lon: "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v7}, Landroid/location/Location;->getLongitude()D
+
+    move-result-wide v8
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    :cond_294
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_b
+
+    nop
+
+    :pswitch_data_29a
+    .packed-switch 0x0
+        :pswitch_2f
+        :pswitch_62
+        :pswitch_6b
+        :pswitch_b5
+    .end packed-switch
+
+    :pswitch_data_2a6
+    .packed-switch 0x0
+        :pswitch_111
+        :pswitch_145
+        :pswitch_14f
+        :pswitch_199
+    .end packed-switch
+.end method
+
+.method public getProvider(Ljava/lang/String;)Landroid/location/LocationProvider;
+    .registers 7
+
+    if-nez p1, :cond_7
+
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getProvider(Ljava/lang/String;)Landroid/location/LocationProvider;
+
+    move-result-object v0
+
+    :cond_6
+    :goto_6
+    return-object v0
+
+    :cond_7
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v2, v3, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v1
+
+    const/4 v0, 0x0
+
+    if-eqz v1, :cond_5f
+
+    const-string v2, "gps"
+
+    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_2f
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v2
+
+    packed-switch v2, :pswitch_data_64
+
+    :pswitch_29
+    goto :goto_6
+
+    :pswitch_2a
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getProvider(Ljava/lang/String;)Landroid/location/LocationProvider;
+
+    move-result-object v0
+
+    goto :goto_6
+
+    :cond_2f
+    const-string/jumbo v2, "network"
+
+    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_45
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v2
+
+    packed-switch v2, :pswitch_data_70
+
+    :pswitch_3f
+    goto :goto_6
+
+    :pswitch_40
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getProvider(Ljava/lang/String;)Landroid/location/LocationProvider;
+
+    move-result-object v0
+
+    goto :goto_6
+
+    :cond_45
+    const-string/jumbo v2, "passive"
+
+    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_6
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_5a
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v2
+
+    if-nez v2, :cond_6
+
+    :cond_5a
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getProvider(Ljava/lang/String;)Landroid/location/LocationProvider;
+
+    move-result-object v0
+
+    goto :goto_6
+
+    :cond_5f
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->getProvider(Ljava/lang/String;)Landroid/location/LocationProvider;
+
+    move-result-object v0
+
+    goto :goto_6
+
+    :pswitch_data_64
+    .packed-switch 0x0
+        :pswitch_2a
+        :pswitch_29
+        :pswitch_2a
+        :pswitch_2a
+    .end packed-switch
+
+    :pswitch_data_70
+    .packed-switch 0x0
+        :pswitch_40
+        :pswitch_3f
+        :pswitch_40
+        :pswitch_40
+    .end packed-switch
+.end method
+
+.method public isProviderEnabled(Ljava/lang/String;)Z
+    .registers 7
+
+    if-nez p1, :cond_7
+
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->isProviderEnabled(Ljava/lang/String;)Z
+
+    move-result v0
+
+    :cond_6
+    :goto_6
+    :pswitch_6
+    return v0
+
+    :cond_7
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyLocationManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v2, v3, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v1
+
+    const/4 v0, 0x0
+
+    if-eqz v1, :cond_65
+
+    const-string v2, "gps"
+
+    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_31
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v2
+
+    packed-switch v2, :pswitch_data_6a
+
+    goto :goto_6
+
+    :pswitch_2a
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->isProviderEnabled(Ljava/lang/String;)Z
+
+    move-result v0
+
+    goto :goto_6
+
+    :pswitch_2f
+    const/4 v0, 0x1
+
+    goto :goto_6
+
+    :cond_31
+    const-string/jumbo v2, "network"
+
+    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_49
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v2
+
+    packed-switch v2, :pswitch_data_76
+
+    goto :goto_6
+
+    :pswitch_42
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->isProviderEnabled(Ljava/lang/String;)Z
+
+    move-result v0
+
+    goto :goto_6
+
+    :pswitch_47
+    const/4 v0, 0x1
+
+    goto :goto_6
+
+    :cond_49
+    const-string/jumbo v2, "passive"
+
+    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_6
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_5e
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v2
+
+    if-nez v2, :cond_63
+
+    :cond_5e
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->isProviderEnabled(Ljava/lang/String;)Z
+
+    move-result v0
+
+    goto :goto_6
+
+    :cond_63
+    const/4 v0, 0x0
+
+    goto :goto_6
+
+    :cond_65
+    invoke-super {p0, p1}, Landroid/location/LocationManager;->isProviderEnabled(Ljava/lang/String;)Z
+
+    move-result v0
+
+    goto :goto_6
+
+    :pswitch_data_6a
+    .packed-switch 0x0
+        :pswitch_2a
+        :pswitch_6
+        :pswitch_2f
+        :pswitch_2f
+    .end packed-switch
+
+    :pswitch_data_76
+    .packed-switch 0x0
+        :pswitch_42
+        :pswitch_6
+        :pswitch_47
+        :pswitch_47
+    .end packed-switch
+.end method
+
+.method public requestLocationUpdates(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V
+    .registers 7
+
+    if-eqz p4, :cond_4
+
+    if-nez p5, :cond_8
+
+    :cond_4
+    invoke-super/range {p0 .. p5}, Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V
+
+    :cond_7
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p4, v0, p5}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_7
+
+    invoke-super/range {p0 .. p5}, Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V
+
+    goto :goto_7
+.end method
+
+.method public requestLocationUpdates(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V
+    .registers 8
+
+    if-eqz p4, :cond_4
+
+    if-nez p5, :cond_8
+
+    :cond_4
+    invoke-super/range {p0 .. p6}, Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V
+
+    :cond_7
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p4, p5, v0}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_7
+
+    invoke-super/range {p0 .. p6}, Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V
+
+    goto :goto_7
+.end method
+
+.method public requestLocationUpdates(Ljava/lang/String;JFLandroid/app/PendingIntent;)V
+    .registers 7
+
+    if-eqz p1, :cond_4
+
+    if-nez p5, :cond_8
+
+    :cond_4
+    invoke-super/range {p0 .. p5}, Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/app/PendingIntent;)V
+
+    :cond_7
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p1, v0, p5}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_7
+
+    invoke-super/range {p0 .. p5}, Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/app/PendingIntent;)V
+
+    goto :goto_7
+.end method
+
+.method public requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;)V
+    .registers 7
+
+    if-eqz p1, :cond_4
+
+    if-nez p5, :cond_8
+
+    :cond_4
+    invoke-super/range {p0 .. p5}, Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;)V
+
+    :cond_7
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p1, p5, v0}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_7
+
+    invoke-super/range {p0 .. p5}, Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;)V
+
+    goto :goto_7
+.end method
+
+.method public requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V
+    .registers 8
+
+    if-eqz p1, :cond_4
+
+    if-nez p5, :cond_8
+
+    :cond_4
+    invoke-super/range {p0 .. p6}, Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V
+
+    :cond_7
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p1, p5, v0}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_7
+
+    invoke-super/range {p0 .. p6}, Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V
+
+    goto :goto_7
+.end method
+
+.method public requestSingleUpdate(Landroid/location/Criteria;Landroid/app/PendingIntent;)V
+    .registers 4
+
+    if-eqz p1, :cond_4
+
+    if-nez p2, :cond_8
+
+    :cond_4
+    invoke-super {p0, p1, p2}, Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/app/PendingIntent;)V
+
+    :cond_7
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p1, v0, p2}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_7
+
+    invoke-super {p0, p1, p2}, Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/app/PendingIntent;)V
+
+    goto :goto_7
+.end method
+
+.method public requestSingleUpdate(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V
+    .registers 5
+
+    if-eqz p1, :cond_4
+
+    if-nez p2, :cond_8
+
+    :cond_4
+    invoke-super {p0, p1, p2, p3}, Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V
+
+    :cond_7
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p1, p2, v0}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_7
+
+    invoke-super {p0, p1, p2, p3}, Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V
+
+    goto :goto_7
+.end method
+
+.method public requestSingleUpdate(Ljava/lang/String;Landroid/app/PendingIntent;)V
+    .registers 4
+
+    if-eqz p1, :cond_4
+
+    if-nez p2, :cond_8
+
+    :cond_4
+    invoke-super {p0, p1, p2}, Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/app/PendingIntent;)V
+
+    :cond_7
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p1, v0, p2}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_7
+
+    invoke-super {p0, p1, p2}, Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/app/PendingIntent;)V
+
+    goto :goto_7
+.end method
+
+.method public requestSingleUpdate(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V
+    .registers 5
+
+    if-eqz p1, :cond_4
+
+    if-nez p2, :cond_8
+
+    :cond_4
+    invoke-super {p0, p1, p2, p3}, Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V
+
+    :cond_7
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p1, p2, v0}, Landroid/privacy/surrogate/PrivacyLocationManager;->requestLocationUpdates(Ljava/lang/String;Landroid/location/LocationListener;Landroid/app/PendingIntent;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_7
+
+    invoke-super {p0, p1, p2, p3}, Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V
+
+    goto :goto_7
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyTelephonyManager.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyTelephonyManager.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyTelephonyManager.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyTelephonyManager.smali	2014-01-02 21:10:35.200310862 -0600
@@ -0,0 +1,1385 @@
+.class public final Landroid/privacy/surrogate/PrivacyTelephonyManager;
+.super Landroid/telephony/TelephonyManager;
+.source "PrivacyTelephonyManager.java"
+
+
+# static fields
+.field private static final NETWORK_TYPES:[I = null
+
+.field private static final PHONE_TYPES:[I = null
+
+.field private static final TAG:Ljava/lang/String; = "PrivacyTelephonyManager"
+
+
+# instance fields
+.field private context:Landroid/content/Context;
+
+.field private pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 1
+
+    const/4 v0, 0x4
+
+    new-array v0, v0, [I
+
+    fill-array-data v0, :array_12
+
+    sput-object v0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->PHONE_TYPES:[I
+
+    const/16 v0, 0x10
+
+    new-array v0, v0, [I
+
+    fill-array-data v0, :array_1e
+
+    sput-object v0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->NETWORK_TYPES:[I
+
+    return-void
+
+    :array_12
+    .array-data 0x4
+        0x0t 0x0t 0x0t 0x0t
+        0x1t 0x0t 0x0t 0x0t
+        0x2t 0x0t 0x0t 0x0t
+        0x3t 0x0t 0x0t 0x0t
+    .end array-data
+
+    :array_1e
+    .array-data 0x4
+        0x0t 0x0t 0x0t 0x0t
+        0x1t 0x0t 0x0t 0x0t
+        0x2t 0x0t 0x0t 0x0t
+        0x3t 0x0t 0x0t 0x0t
+        0x4t 0x0t 0x0t 0x0t
+        0x5t 0x0t 0x0t 0x0t
+        0x6t 0x0t 0x0t 0x0t
+        0x7t 0x0t 0x0t 0x0t
+        0x8t 0x0t 0x0t 0x0t
+        0x9t 0x0t 0x0t 0x0t
+        0xat 0x0t 0x0t 0x0t
+        0xbt 0x0t 0x0t 0x0t
+        0xct 0x0t 0x0t 0x0t
+        0xdt 0x0t 0x0t 0x0t
+        0xet 0x0t 0x0t 0x0t
+        0xft 0x0t 0x0t 0x0t
+    .end array-data
+.end method
+
+.method public constructor <init>(Landroid/content/Context;)V
+    .registers 4
+
+    invoke-direct {p0, p1}, Landroid/telephony/TelephonyManager;-><init>(Landroid/content/Context;)V
+
+    iput-object p1, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    new-instance v0, Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "privacy"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v1
+
+    invoke-direct {v0, p1, v1}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    return-void
+.end method
+
+.method private getNetworkInfo()Ljava/lang/String;
+    .registers 8
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_25
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_25
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    const-string v5, ""
+
+    :goto_24
+    return-object v5
+
+    :cond_25
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "networkInfoCurrent"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_24
+.end method
+
+.method private getSimInfo()Ljava/lang/String;
+    .registers 8
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_25
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSimInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_25
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "networkInfoSIM"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    const-string v5, ""
+
+    :goto_24
+    return-object v5
+
+    :cond_25
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "networkInfoSIM"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_24
+.end method
+
+
+# virtual methods
+.method public getAllCellInfo()Ljava/util/List;
+    .registers 6
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()",
+            "Ljava/util/List",
+            "<",
+            "Landroid/telephony/CellInfo;",
+            ">;"
+        }
+    .end annotation
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v2, v3, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v1
+
+    const/4 v0, 0x0
+
+    if-eqz v1, :cond_1f
+
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v2
+
+    const/4 v3, 0x1
+
+    if-ne v2, v3, :cond_20
+
+    new-instance v0, Ljava/util/ArrayList;
+
+    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V
+
+    :cond_1f
+    :goto_1f
+    return-object v0
+
+    :cond_20
+    invoke-virtual {v1}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_2c
+
+    new-instance v0, Ljava/util/ArrayList;
+
+    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V
+
+    goto :goto_1f
+
+    :cond_2c
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getAllCellInfo()Ljava/util/List;
+
+    move-result-object v0
+
+    goto :goto_1f
+.end method
+
+.method public getCellLocation()Landroid/telephony/CellLocation;
+    .registers 10
+
+    const/4 v7, 0x0
+
+    :try_start_1
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_2c
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v0
+
+    if-nez v0, :cond_1f
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2c
+
+    :cond_1f
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v3
+
+    const-string v4, "locationNetwork"
+
+    const/4 v5, 0x0
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2b
+    return-object v7
+
+    :cond_2c
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v3
+
+    const-string v4, "locationNetwork"
+
+    const/4 v5, 0x0
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getCellLocation()Landroid/telephony/CellLocation;
+    :try_end_3b
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_3b} :catch_3d
+
+    move-result-object v7
+
+    goto :goto_2b
+
+    :catch_3d
+    move-exception v8
+
+    goto :goto_2b
+.end method
+
+.method public getCompleteVoiceMailNumber()Ljava/lang/String;
+    .registers 9
+
+    :try_start_0
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    const-string v5, ""
+
+    if-eqz v6, :cond_2a
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLine1NumberSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2a
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLine1Number()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLine1NumberSetting()B
+
+    move-result v3
+
+    const-string v4, "line1Number"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_29
+    return-object v5
+
+    :cond_2a
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getCompleteVoiceMailNumber()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "line1Number"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_36
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_36} :catch_37
+
+    goto :goto_29
+
+    :catch_37
+    move-exception v7
+
+    const/4 v5, 0x0
+
+    goto :goto_29
+.end method
+
+.method public getDeviceId()Ljava/lang/String;
+    .registers 8
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_28
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getDeviceIdSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_28
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getDeviceId()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getDeviceIdSetting()B
+
+    move-result v3
+
+    const-string v4, "deviceID"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_27
+    return-object v5
+
+    :cond_28
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "deviceID"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_27
+.end method
+
+.method public getDeviceSoftwareVersion()Ljava/lang/String;
+    .registers 9
+
+    :try_start_0
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    const-string v5, ""
+
+    if-eqz v6, :cond_2a
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getDeviceIdSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2a
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getDeviceId()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getDeviceIdSetting()B
+
+    move-result v3
+
+    const-string v4, "deviceID"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_29
+    return-object v5
+
+    :cond_2a
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getDeviceSoftwareVersion()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "deviceID"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_36
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_36} :catch_37
+
+    goto :goto_29
+
+    :catch_37
+    move-exception v7
+
+    const/4 v5, 0x0
+
+    goto :goto_29
+.end method
+
+.method public getIsimDomain()Ljava/lang/String;
+    .registers 2
+
+    invoke-virtual {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getNetworkOperatorName()Ljava/lang/String;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public getIsimImpi()Ljava/lang/String;
+    .registers 4
+
+    const-string v0, "PrivacyTelephonyManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "getIsimImpi - "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getSubscriberId()Ljava/lang/String;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public getIsimImpu()[Ljava/lang/String;
+    .registers 10
+
+    const/4 v8, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    const-string v0, "PrivacyTelephonyManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "getIsimImpu() - "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v4}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v0, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v0, 0x1
+
+    new-array v7, v0, [Ljava/lang/String;
+
+    if-eqz v6, :cond_4f
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSubscriberIdSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_4f
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSubscriberId()Ljava/lang/String;
+
+    move-result-object v0
+
+    aput-object v0, v7, v8
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSubscriberIdSetting()B
+
+    move-result v3
+
+    const-string/jumbo v4, "subscriberID"
+
+    aget-object v5, v7, v8
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_4e
+    return-object v7
+
+    :cond_4f
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getIsimImpu()[Ljava/lang/String;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v4, "subscriberID"
+
+    aget-object v5, v7, v8
+
+    move v3, v8
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_4e
+.end method
+
+.method public getLine1AlphaTag()Ljava/lang/String;
+    .registers 2
+
+    invoke-virtual {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getLine1Number()Ljava/lang/String;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public getLine1Number()Ljava/lang/String;
+    .registers 8
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_28
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLine1NumberSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_28
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLine1Number()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLine1NumberSetting()B
+
+    move-result v3
+
+    const-string v4, "line1Number"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_27
+    return-object v5
+
+    :cond_28
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "line1Number"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_27
+.end method
+
+.method public getMsisdn()Ljava/lang/String;
+    .registers 4
+
+    const-string v0, "PrivacyTelephonyManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "getMsisdn() - "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getSubscriberId()Ljava/lang/String;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public getNeighboringCellInfo()Ljava/util/List;
+    .registers 10
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()",
+            "Ljava/util/List",
+            "<",
+            "Landroid/telephony/NeighboringCellInfo;",
+            ">;"
+        }
+    .end annotation
+
+    iget-object v6, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v7, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v7}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v8
+
+    invoke-virtual {v6, v7, v8}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v5
+
+    const/4 v3, 0x0
+
+    const-string v4, "[null]"
+
+    if-eqz v5, :cond_1c
+
+    invoke-virtual {v5}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    if-ne v6, v7, :cond_1d
+
+    :cond_1c
+    :goto_1c
+    return-object v3
+
+    :cond_1d
+    invoke-virtual {v5}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v6
+
+    if-eqz v6, :cond_2b
+
+    new-instance v3, Ljava/util/ArrayList;
+
+    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V
+
+    const-string v4, "[empty list of cells]"
+
+    goto :goto_1c
+
+    :cond_2b
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getNeighboringCellInfo()Ljava/util/List;
+
+    move-result-object v3
+
+    const-string v0, ""
+
+    invoke-interface {v3}, Ljava/util/List;->iterator()Ljava/util/Iterator;
+
+    move-result-object v2
+
+    :goto_35
+    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_5f
+
+    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/telephony/NeighboringCellInfo;
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, "\t"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, "\n"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v0
+
+    goto :goto_35
+
+    :cond_5f
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "[real value]:\n"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    goto :goto_1c
+.end method
+
+.method public getNetworkCountryIso()Ljava/lang/String;
+    .registers 2
+
+    invoke-direct {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getNetworkInfo()Ljava/lang/String;
+
+    move-result-object v0
+
+    if-nez v0, :cond_a
+
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getNetworkCountryIso()Ljava/lang/String;
+
+    move-result-object v0
+
+    :cond_a
+    return-object v0
+.end method
+
+.method public getNetworkOperator()Ljava/lang/String;
+    .registers 2
+
+    invoke-direct {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getNetworkInfo()Ljava/lang/String;
+
+    move-result-object v0
+
+    if-nez v0, :cond_a
+
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getNetworkOperator()Ljava/lang/String;
+
+    move-result-object v0
+
+    :cond_a
+    return-object v0
+.end method
+
+.method public getNetworkOperatorName()Ljava/lang/String;
+    .registers 2
+
+    invoke-direct {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getNetworkInfo()Ljava/lang/String;
+
+    move-result-object v0
+
+    if-nez v0, :cond_a
+
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getNetworkOperatorName()Ljava/lang/String;
+
+    move-result-object v0
+
+    :cond_a
+    return-object v0
+.end method
+
+.method public getNetworkType()I
+    .registers 7
+
+    const/4 v5, 0x0
+
+    :try_start_1
+    invoke-direct {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getNetworkInfo()Ljava/lang/String;
+
+    move-result-object v1
+
+    sget-object v3, Landroid/privacy/surrogate/PrivacyTelephonyManager;->NETWORK_TYPES:[I
+
+    const/4 v4, 0x0
+
+    aget v2, v3, v4
+
+    if-nez v1, :cond_10
+
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getNetworkType()I
+    :try_end_f
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_f} :catch_11
+
+    move-result v2
+
+    :cond_10
+    :goto_10
+    return v2
+
+    :catch_11
+    move-exception v0
+
+    sget-object v3, Landroid/privacy/surrogate/PrivacyTelephonyManager;->NETWORK_TYPES:[I
+
+    aget v2, v3, v5
+
+    goto :goto_10
+.end method
+
+.method public getPhoneType()I
+    .registers 5
+
+    invoke-direct {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getNetworkInfo()Ljava/lang/String;
+
+    move-result-object v0
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyTelephonyManager;->PHONE_TYPES:[I
+
+    const/4 v3, 0x0
+
+    aget v1, v2, v3
+
+    if-nez v0, :cond_f
+
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getPhoneType()I
+
+    move-result v1
+
+    :cond_f
+    return v1
+.end method
+
+.method public getSimCountryIso()Ljava/lang/String;
+    .registers 2
+
+    invoke-direct {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getSimInfo()Ljava/lang/String;
+
+    move-result-object v0
+
+    if-nez v0, :cond_a
+
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getSimCountryIso()Ljava/lang/String;
+
+    move-result-object v0
+
+    :cond_a
+    return-object v0
+.end method
+
+.method public getSimOperator()Ljava/lang/String;
+    .registers 2
+
+    invoke-direct {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getSimInfo()Ljava/lang/String;
+
+    move-result-object v0
+
+    if-nez v0, :cond_a
+
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getSimOperator()Ljava/lang/String;
+
+    move-result-object v0
+
+    :cond_a
+    return-object v0
+.end method
+
+.method public getSimOperatorName()Ljava/lang/String;
+    .registers 2
+
+    invoke-direct {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getSimInfo()Ljava/lang/String;
+
+    move-result-object v0
+
+    if-nez v0, :cond_a
+
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getSimOperatorName()Ljava/lang/String;
+
+    move-result-object v0
+
+    :cond_a
+    return-object v0
+.end method
+
+.method public getSimSerialNumber()Ljava/lang/String;
+    .registers 8
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_29
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSimSerialNumberSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_29
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSimSerialNumber()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSimSerialNumberSetting()B
+
+    move-result v3
+
+    const-string/jumbo v4, "simSerial"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_28
+    return-object v5
+
+    :cond_29
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getSimSerialNumber()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "simSerial"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_28
+.end method
+
+.method public getSubscriberId()Ljava/lang/String;
+    .registers 8
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    const-string v0, "PrivacyTelephonyManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "getSubscriberId() - "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v4}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v0, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    if-eqz v6, :cond_47
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSubscriberIdSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_47
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSubscriberId()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getSubscriberIdSetting()B
+
+    move-result v3
+
+    const-string/jumbo v4, "subscriberID"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_46
+    return-object v5
+
+    :cond_47
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "subscriberID"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_46
+.end method
+
+.method public getVoiceMailAlphaTag()Ljava/lang/String;
+    .registers 2
+
+    invoke-virtual {p0}, Landroid/privacy/surrogate/PrivacyTelephonyManager;->getVoiceMailNumber()Ljava/lang/String;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public getVoiceMailNumber()Ljava/lang/String;
+    .registers 8
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_28
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLine1NumberSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_28
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLine1Number()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLine1NumberSetting()B
+
+    move-result v3
+
+    const-string v4, "line1Number"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_27
+    return-object v5
+
+    :cond_28
+    invoke-super {p0}, Landroid/telephony/TelephonyManager;->getVoiceMailNumber()Ljava/lang/String;
+
+    move-result-object v5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "line1Number"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_27
+.end method
+
+.method public listen(Landroid/telephony/PhoneStateListener;I)V
+    .registers 5
+
+    and-int/lit8 v1, p2, 0x10
+
+    if-nez v1, :cond_8
+
+    and-int/lit8 v1, p2, 0x20
+
+    if-eqz v1, :cond_29
+
+    :cond_8
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    if-eqz v1, :cond_27
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v0
+
+    :goto_12
+    if-eqz v0, :cond_1c
+
+    invoke-virtual {p1, v0}, Landroid/telephony/PhoneStateListener;->setPackageName(Ljava/lang/String;)V
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyTelephonyManager;->context:Landroid/content/Context;
+
+    invoke-virtual {p1, v1}, Landroid/telephony/PhoneStateListener;->setContext(Landroid/content/Context;)V
+
+    :cond_1c
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v1
+
+    invoke-virtual {p1, v1}, Landroid/telephony/PhoneStateListener;->setUid(I)V
+
+    invoke-super {p0, p1, p2}, Landroid/telephony/TelephonyManager;->listen(Landroid/telephony/PhoneStateListener;I)V
+
+    :goto_26
+    return-void
+
+    :cond_27
+    const/4 v0, 0x0
+
+    goto :goto_12
+
+    :cond_29
+    invoke-super {p0, p1, p2}, Landroid/telephony/TelephonyManager;->listen(Landroid/telephony/PhoneStateListener;I)V
+
+    goto :goto_26
+.end method
diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyWifiManager.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyWifiManager.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyWifiManager.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyWifiManager.smali	2014-01-02 21:10:35.200310862 -0600
@@ -0,0 +1,1015 @@
+.class public Landroid/privacy/surrogate/PrivacyWifiManager;
+.super Landroid/net/wifi/WifiManager;
+.source "PrivacyWifiManager.java"
+
+
+# static fields
+.field private static final P_TAG:Ljava/lang/String; = "PrivacyWifiManager"
+
+
+# instance fields
+.field private context:Landroid/content/Context;
+
+.field private pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+
+# direct methods
+.method public constructor <init>(Landroid/content/Context;Landroid/net/wifi/IWifiManager;)V
+    .registers 5
+
+    invoke-direct {p0, p1, p2}, Landroid/net/wifi/WifiManager;-><init>(Landroid/content/Context;Landroid/net/wifi/IWifiManager;)V
+
+    iput-object p1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    new-instance v0, Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "privacy"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v1
+
+    invoke-direct {v0, p1, v1}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public getConfigFile()Ljava/lang/String;
+    .registers 9
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_31
+
+    if-eqz v7, :cond_31
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_31
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    const-string v0, ""
+
+    :goto_30
+    return-object v0
+
+    :cond_31
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->getConfigFile()Ljava/lang/String;
+
+    move-result-object v0
+
+    goto :goto_30
+.end method
+
+.method public getConfiguredNetworks()Ljava/util/List;
+    .registers 10
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()",
+            "Ljava/util/List",
+            "<",
+            "Landroid/net/wifi/WifiConfiguration;",
+            ">;"
+        }
+    .end annotation
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    new-instance v7, Ljava/util/ArrayList;
+
+    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_34
+
+    if-eqz v8, :cond_34
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_34
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_33
+    return-object v7
+
+    :cond_34
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->getConfiguredNetworks()Ljava/util/List;
+
+    move-result-object v7
+
+    goto :goto_33
+.end method
+
+.method public getConnectionInfo()Landroid/net/wifi/WifiInfo;
+    .registers 10
+
+    const/4 v3, 0x1
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    new-instance v7, Landroid/net/wifi/WifiInfo;
+
+    invoke-direct {v7, v3}, Landroid/net/wifi/WifiInfo;-><init>(Z)V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_34
+
+    if-eqz v8, :cond_34
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_34
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_33
+    return-object v7
+
+    :cond_34
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->getConnectionInfo()Landroid/net/wifi/WifiInfo;
+
+    move-result-object v7
+
+    goto :goto_33
+.end method
+
+.method public getDhcpInfo()Landroid/net/DhcpInfo;
+    .registers 9
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_34
+
+    if-eqz v7, :cond_34
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_34
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    new-instance v0, Landroid/net/DhcpInfo;
+
+    invoke-direct {v0}, Landroid/net/DhcpInfo;-><init>()V
+
+    :goto_33
+    return-object v0
+
+    :cond_34
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->getDhcpInfo()Landroid/net/DhcpInfo;
+
+    move-result-object v0
+
+    goto :goto_33
+.end method
+
+.method public getFrequencyBand()I
+    .registers 9
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_2f
+
+    if-eqz v7, :cond_2f
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_2f
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2e
+    return v2
+
+    :cond_2f
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->getFrequencyBand()I
+
+    move-result v2
+
+    goto :goto_2e
+.end method
+
+.method public getScanResults()Ljava/util/List;
+    .registers 10
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()",
+            "Ljava/util/List",
+            "<",
+            "Landroid/net/wifi/ScanResult;",
+            ">;"
+        }
+    .end annotation
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    new-instance v7, Ljava/util/ArrayList;
+
+    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_34
+
+    if-eqz v8, :cond_34
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_34
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_33
+    return-object v7
+
+    :cond_34
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->getScanResults()Ljava/util/List;
+
+    move-result-object v7
+
+    goto :goto_33
+.end method
+
+.method public getWifiApConfiguration()Landroid/net/wifi/WifiConfiguration;
+    .registers 9
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_34
+
+    if-eqz v7, :cond_34
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_34
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    new-instance v0, Landroid/net/wifi/WifiConfiguration;
+
+    invoke-direct {v0}, Landroid/net/wifi/WifiConfiguration;-><init>()V
+
+    :goto_33
+    return-object v0
+
+    :cond_34
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->getWifiApConfiguration()Landroid/net/wifi/WifiConfiguration;
+
+    move-result-object v0
+
+    goto :goto_33
+.end method
+
+.method public getWifiState()I
+    .registers 9
+
+    const/4 v3, 0x1
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_30
+
+    if-eqz v7, :cond_30
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v0
+
+    if-nez v0, :cond_30
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    const/4 v0, 0x3
+
+    :goto_2f
+    return v0
+
+    :cond_30
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_4d
+
+    if-eqz v7, :cond_4d
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_4d
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    const/4 v0, 0x4
+
+    goto :goto_2f
+
+    :cond_4d
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->getWifiState()I
+
+    move-result v0
+
+    goto :goto_2f
+.end method
+
+.method public isWifiEnabled()Z
+    .registers 10
+
+    const/4 v8, 0x0
+
+    const/4 v3, 0x1
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    invoke-virtual {v0, v1, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_30
+
+    if-eqz v7, :cond_30
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v0
+
+    if-nez v0, :cond_30
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_2f
+    return v3
+
+    :cond_30
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_4d
+
+    if-eqz v7, :cond_4d
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_4d
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    move v3, v8
+
+    goto :goto_2f
+
+    :cond_4d
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move v3, v8
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->isWifiEnabled()Z
+
+    move-result v3
+
+    goto :goto_2f
+.end method
+
+.method public setWifiEnabled(Z)Z
+    .registers 11
+
+    const/4 v8, 0x0
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_31
+
+    if-eqz v7, :cond_31
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getSwitchWifiStateSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_31
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "switchWifiState"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    move v0, v8
+
+    :goto_30
+    return v0
+
+    :cond_31
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "switchWifiState"
+
+    move v3, v8
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0, p1}, Landroid/net/wifi/WifiManager;->setWifiEnabled(Z)Z
+
+    move-result v0
+
+    goto :goto_30
+.end method
+
+.method public startScan()Z
+    .registers 10
+
+    const/4 v8, 0x0
+
+    const/4 v2, -0x1
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v1, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v0, :cond_31
+
+    if-eqz v7, :cond_31
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v0
+
+    if-eqz v0, :cond_31
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const/4 v3, 0x1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    move v0, v8
+
+    :goto_30
+    return v0
+
+    :cond_31
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyWifiManager;->context:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string/jumbo v4, "wifiInfo"
+
+    move v3, v8
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    invoke-super {p0}, Landroid/net/wifi/WifiManager;->startScan()Z
+
+    move-result v0
+
+    goto :goto_30
+.end method
diff -Npruw stock-framework/smali/android/provider/Settings$Secure.smali pdroid-framework/smali/android/provider/Settings$Secure.smali
--- stock-framework/smali/android/provider/Settings$Secure.smali	2014-01-02 21:10:19.584311271 -0600
+++ pdroid-framework/smali/android/provider/Settings$Secure.smali	2014-01-02 21:10:35.240310861 -0600
@@ -221,6 +221,8 @@
 
 .field public static final PRIVACY_GUARD_NOTIFICATION:Ljava/lang/String; = "privacy_guard_notification"
 
+.field private static final PRIVACY_TAG:Ljava/lang/String; = "PM,SecureSettings"
+
 .field public static final RING_HOME_BUTTON_BEHAVIOR:Ljava/lang/String; = "ring_home_button_behavior"
 
 .field public static final RING_HOME_BUTTON_BEHAVIOR_ANSWER:I = 0x2
@@ -446,6 +448,14 @@
 
 .field public static final WIMAX_ON:Ljava/lang/String; = "wimax_on"
 
+.field private static context:Landroid/content/Context;
+
+.field private static mPm:Landroid/content/pm/IPackageManager;
+
+.field private static pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+.field private static privacyMode:Z
+
 .field private static sIsSystemProcess:Z
 
 .field private static sLockSettings:Lcom/android/internal/widget/ILockSettings;
@@ -455,9 +465,11 @@
 
 # direct methods
 .method static constructor <clinit>()V
-    .registers 6
+    .registers 7
+
+    const/4 v6, 0x3
 
-    const/4 v5, 0x3
+    const/4 v5, 0x0
 
     const-string v0, "content://settings/secure"
 
@@ -487,7 +499,7 @@
 
     new-instance v0, Ljava/util/HashSet;
 
-    invoke-direct {v0, v5}, Ljava/util/HashSet;-><init>(I)V
+    invoke-direct {v0, v6}, Ljava/util/HashSet;-><init>(I)V
 
     sput-object v0, Landroid/provider/Settings$Secure;->MOVED_TO_LOCK_SETTINGS:Ljava/util/HashSet;
 
@@ -1211,15 +1223,15 @@
 
     invoke-virtual {v0, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
 
+    sput-boolean v5, Landroid/provider/Settings$Secure;->privacyMode:Z
+
     const/16 v0, 0x28
 
     new-array v0, v0, [Ljava/lang/String;
 
-    const/4 v1, 0x0
-
-    const-string v2, "bugreport_in_power_menu"
+    const-string v1, "bugreport_in_power_menu"
 
-    aput-object v2, v0, v1
+    aput-object v1, v0, v5
 
     const/4 v1, 0x1
 
@@ -1235,7 +1247,7 @@
 
     const-string/jumbo v1, "parental_control_redirect_url"
 
-    aput-object v1, v0, v5
+    aput-object v1, v0, v6
 
     const/4 v1, 0x4
 
@@ -1770,6 +1782,70 @@
     return-void
 .end method
 
+.method private static getPackageName()[Ljava/lang/String;
+    .registers 5
+
+    :try_start_0
+    sget-object v3, Landroid/provider/Settings$Secure;->mPm:Landroid/content/pm/IPackageManager;
+
+    if-eqz v3, :cond_f
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    sget-object v3, Landroid/provider/Settings$Secure;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+
+    move-result-object v1
+
+    :goto_e
+    return-object v1
+
+    :cond_f
+    const-string/jumbo v3, "package"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    sput-object v3, Landroid/provider/Settings$Secure;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    sget-object v3, Landroid/provider/Settings$Secure;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+    :try_end_25
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_25} :catch_27
+
+    move-result-object v1
+
+    goto :goto_e
+
+    :catch_27
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v3, "PM,SecureSettings"
+
+    const-string/jumbo v4, "something went wrong with getting package name"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    goto :goto_e
+.end method
+
 .method public static getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
     .registers 3
 
@@ -1785,152 +1861,392 @@
 .end method
 
 .method public static getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;
-    .registers 6
+    .registers 23
 
-    sget-object v0, Landroid/provider/Settings$Secure;->MOVED_TO_GLOBAL:Ljava/util/HashSet;
+    sget-object v3, Landroid/provider/Settings$Secure;->MOVED_TO_GLOBAL:Ljava/util/HashSet;
 
-    invoke-virtual {v0, p1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z
+    move-object/from16 v0, p1
 
-    move-result v0
+    invoke-virtual {v3, v0}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z
 
-    if-eqz v0, :cond_31
+    move-result v3
 
-    const-string v0, "Settings"
+    if-eqz v3, :cond_35
 
-    new-instance v1, Ljava/lang/StringBuilder;
+    const-string v3, "Settings"
 
-    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+    new-instance v4, Ljava/lang/StringBuilder;
 
-    const-string v2, "Setting "
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
 
-    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    const-string v5, "Setting "
 
-    move-result-object v1
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    move-result-object v4
 
-    move-result-object v1
+    move-object/from16 v0, p1
 
-    const-string v2, " has moved from android.provider.Settings.Secure"
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    move-result-object v4
 
-    move-result-object v1
+    const-string v5, " has moved from android.provider.Settings.Secure"
 
-    const-string v2, " to android.provider.Settings.Global."
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    move-result-object v4
 
-    move-result-object v1
+    const-string v5, " to android.provider.Settings.Global."
 
-    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    move-result-object v1
+    move-result-object v4
 
-    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    invoke-static {p0, p1, p2}, Landroid/provider/Settings$Global;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;
+    move-result-object v4
 
-    move-result-object v0
+    invoke-static {v3, v4}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
 
-    :goto_30
-    return-object v0
+    invoke-static/range {p0 .. p2}, Landroid/provider/Settings$Global;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;
 
-    :cond_31
-    sget-object v0, Landroid/provider/Settings$Secure;->MOVED_TO_LOCK_SETTINGS:Ljava/util/HashSet;
+    move-result-object v8
 
-    invoke-virtual {v0, p1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z
+    :goto_34
+    return-object v8
 
-    move-result v0
+    :cond_35
+    sget-object v3, Landroid/provider/Settings$Secure;->MOVED_TO_LOCK_SETTINGS:Ljava/util/HashSet;
 
-    if-eqz v0, :cond_6f
+    move-object/from16 v0, p1
 
-    const-class v1, Landroid/provider/Settings$Secure;
+    invoke-virtual {v3, v0}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z
 
-    monitor-enter v1
+    move-result v3
 
-    :try_start_3c
-    sget-object v0, Landroid/provider/Settings$Secure;->sLockSettings:Lcom/android/internal/widget/ILockSettings;
+    if-eqz v3, :cond_79
 
-    if-nez v0, :cond_57
+    const-class v4, Landroid/provider/Settings$Secure;
 
-    const-string v0, "lock_settings"
+    monitor-enter v4
 
-    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+    :try_start_42
+    sget-object v3, Landroid/provider/Settings$Secure;->sLockSettings:Lcom/android/internal/widget/ILockSettings;
 
-    move-result-object v0
+    if-nez v3, :cond_5d
 
-    invoke-static {v0}, Lcom/android/internal/widget/ILockSettings$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/internal/widget/ILockSettings;
+    const-string v3, "lock_settings"
 
-    move-result-object v0
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
 
-    sput-object v0, Landroid/provider/Settings$Secure;->sLockSettings:Lcom/android/internal/widget/ILockSettings;
+    move-result-object v3
+
+    invoke-static {v3}, Lcom/android/internal/widget/ILockSettings$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/internal/widget/ILockSettings;
+
+    move-result-object v3
+
+    sput-object v3, Landroid/provider/Settings$Secure;->sLockSettings:Lcom/android/internal/widget/ILockSettings;
 
     invoke-static {}, Landroid/os/Process;->myUid()I
 
-    move-result v0
+    move-result v3
 
-    const/16 v2, 0x3e8
+    const/16 v5, 0x3e8
 
-    if-ne v0, v2, :cond_69
+    if-ne v3, v5, :cond_73
 
-    const/4 v0, 0x1
+    const/4 v3, 0x1
 
-    :goto_55
-    sput-boolean v0, Landroid/provider/Settings$Secure;->sIsSystemProcess:Z
+    :goto_5b
+    sput-boolean v3, Landroid/provider/Settings$Secure;->sIsSystemProcess:Z
 
-    :cond_57
-    monitor-exit v1
-    :try_end_58
-    .catchall {:try_start_3c .. :try_end_58} :catchall_6b
+    :cond_5d
+    monitor-exit v4
+    :try_end_5e
+    .catchall {:try_start_42 .. :try_end_5e} :catchall_75
 
-    sget-object v0, Landroid/provider/Settings$Secure;->sLockSettings:Lcom/android/internal/widget/ILockSettings;
+    sget-object v3, Landroid/provider/Settings$Secure;->sLockSettings:Lcom/android/internal/widget/ILockSettings;
 
-    if-eqz v0, :cond_6f
+    if-eqz v3, :cond_79
 
-    sget-boolean v0, Landroid/provider/Settings$Secure;->sIsSystemProcess:Z
+    sget-boolean v3, Landroid/provider/Settings$Secure;->sIsSystemProcess:Z
 
-    if-nez v0, :cond_6f
+    if-nez v3, :cond_79
 
-    :try_start_60
-    sget-object v0, Landroid/provider/Settings$Secure;->sLockSettings:Lcom/android/internal/widget/ILockSettings;
+    :try_start_66
+    sget-object v3, Landroid/provider/Settings$Secure;->sLockSettings:Lcom/android/internal/widget/ILockSettings;
 
-    const-string v1, "0"
+    const-string v4, "0"
 
-    invoke-interface {v0, p1, v1, p2}, Lcom/android/internal/widget/ILockSettings;->getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
-    :try_end_67
-    .catch Landroid/os/RemoteException; {:try_start_60 .. :try_end_67} :catch_6e
+    move-object/from16 v0, p1
 
-    move-result-object v0
+    move/from16 v1, p2
 
-    goto :goto_30
+    invoke-interface {v3, v0, v4, v1}, Lcom/android/internal/widget/ILockSettings;->getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
+    :try_end_71
+    .catch Landroid/os/RemoteException; {:try_start_66 .. :try_end_71} :catch_78
 
-    :cond_69
-    const/4 v0, 0x0
+    move-result-object v8
 
-    goto :goto_55
+    goto :goto_34
 
-    :catchall_6b
-    move-exception v0
+    :cond_73
+    const/4 v3, 0x0
 
-    :try_start_6c
-    monitor-exit v1
-    :try_end_6d
-    .catchall {:try_start_6c .. :try_end_6d} :catchall_6b
+    goto :goto_5b
 
-    throw v0
+    :catchall_75
+    move-exception v3
 
-    :catch_6e
-    move-exception v0
+    :try_start_76
+    monitor-exit v4
+    :try_end_77
+    .catchall {:try_start_76 .. :try_end_77} :catchall_75
 
-    :cond_6f
-    sget-object v0, Landroid/provider/Settings$Secure;->sNameValueCache:Landroid/provider/Settings$NameValueCache;
+    throw v3
 
-    invoke-virtual {v0, p0, p1, p2}, Landroid/provider/Settings$NameValueCache;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;
+    :catch_78
+    move-exception v3
 
-    move-result-object v0
+    :cond_79
+    const-string v3, "android_id"
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_f7
+
+    invoke-static {}, Landroid/provider/Settings$Secure;->initiate()V
+
+    :try_start_86
+    sget-object v3, Landroid/provider/Settings$Secure;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v3, :cond_9e
+
+    new-instance v3, Landroid/privacy/PrivacySettingsManager;
+
+    sget-object v4, Landroid/provider/Settings$Secure;->context:Landroid/content/Context;
+
+    const-string/jumbo v5, "privacy"
+
+    invoke-static {v5}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v5
+
+    invoke-static {v5}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v5
+
+    invoke-direct {v3, v4, v5}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    sput-object v3, Landroid/provider/Settings$Secure;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_9e
+    sget-object v3, Landroid/provider/Settings$Secure;->mPm:Landroid/content/pm/IPackageManager;
+
+    if-nez v3, :cond_af
+
+    const-string/jumbo v3, "package"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    sput-object v3, Landroid/provider/Settings$Secure;->mPm:Landroid/content/pm/IPackageManager;
+
+    :cond_af
+    const/16 v19, 0x0
+
+    invoke-static {}, Landroid/provider/Settings$Secure;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v18
+
+    if-eqz v18, :cond_13c
+
+    move-object/from16 v0, v18
+
+    array-length v3, v0
+
+    if-lez v3, :cond_13c
 
-    goto :goto_30
+    const/16 v17, 0x0
+
+    :goto_be
+    move-object/from16 v0, v18
+
+    array-length v3, v0
+
+    move/from16 v0, v17
+
+    if-ge v0, v3, :cond_f7
+
+    sget-object v3, Landroid/provider/Settings$Secure;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v4, v18, v17
+
+    invoke-virtual {v3, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v19
+
+    if-eqz v19, :cond_11c
+
+    invoke-virtual/range {v19 .. v19}, Landroid/privacy/PrivacySettings;->getAndroidIdSetting()B
+
+    move-result v3
+
+    if-eqz v3, :cond_11c
+
+    invoke-virtual/range {v19 .. v19}, Landroid/privacy/PrivacySettings;->getAndroidID()Ljava/lang/String;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_105
+
+    sget-object v3, Landroid/provider/Settings$Secure;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v4, v18, v17
+
+    const/4 v5, 0x0
+
+    invoke-virtual/range {v19 .. v19}, Landroid/privacy/PrivacySettings;->getAndroidIdSetting()B
+
+    move-result v6
+
+    const-string v7, "android_id"
+
+    const/4 v9, 0x0
+
+    invoke-virtual/range {v3 .. v9}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_ea
+    .catch Ljava/lang/Exception; {:try_start_86 .. :try_end_ea} :catch_ec
+
+    goto/16 :goto_34
+
+    :catch_ec
+    move-exception v16
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v3, "PM,SecureSettings"
+
+    const-string v4, "Got exception in  getString()"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_f7
+    :goto_f7
+    sget-object v3, Landroid/provider/Settings$Secure;->sNameValueCache:Landroid/provider/Settings$NameValueCache;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p1
+
+    move/from16 v2, p2
+
+    invoke-virtual {v3, v0, v1, v2}, Landroid/provider/Settings$NameValueCache;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;
+
+    move-result-object v8
+
+    goto/16 :goto_34
+
+    :cond_105
+    :try_start_105
+    sget-object v9, Landroid/provider/Settings$Secure;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v10, v18, v17
+
+    const/4 v11, 0x0
+
+    invoke-virtual/range {v19 .. v19}, Landroid/privacy/PrivacySettings;->getAndroidIdSetting()B
+
+    move-result v12
+
+    const-string v13, "android_id"
+
+    const-string/jumbo v14, "q4a5w896ay21dr46"
+
+    const/4 v15, 0x0
+
+    invoke-virtual/range {v9 .. v15}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    const-string/jumbo v8, "q4a5w896ay21dr46"
+
+    goto/16 :goto_34
+
+    :cond_11c
+    move-object/from16 v0, v18
+
+    array-length v3, v0
+
+    add-int/lit8 v3, v3, -0x1
+
+    move/from16 v0, v17
+
+    if-ne v0, v3, :cond_137
+
+    sget-object v9, Landroid/provider/Settings$Secure;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, v18
+
+    array-length v3, v0
+
+    add-int/lit8 v3, v3, -0x1
+
+    aget-object v10, v18, v3
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const-string v13, "android_id"
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    invoke-virtual/range {v9 .. v15}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_137
+    const/16 v19, 0x0
+
+    add-int/lit8 v17, v17, 0x1
+
+    goto :goto_be
+
+    :cond_13c
+    sget-object v9, Landroid/provider/Settings$Secure;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, v18
+
+    array-length v3, v0
+
+    add-int/lit8 v3, v3, -0x1
+
+    aget-object v10, v18, v3
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const-string v13, "android_id"
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    invoke-virtual/range {v9 .. v15}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_14e
+    .catch Ljava/lang/Exception; {:try_start_105 .. :try_end_14e} :catch_ec
+
+    goto :goto_f7
 .end method
 
 .method public static getUriFor(Ljava/lang/String;)Landroid/net/Uri;
@@ -1997,6 +2313,71 @@
     goto :goto_32
 .end method
 
+.method private static initiate()V
+    .registers 4
+
+    const/4 v1, 0x0
+
+    :try_start_1
+    sput-object v1, Landroid/provider/Settings$Secure;->context:Landroid/content/Context;
+
+    new-instance v1, Landroid/privacy/PrivacySettingsManager;
+
+    sget-object v2, Landroid/provider/Settings$Secure;->context:Landroid/content/Context;
+
+    const-string/jumbo v3, "privacy"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v3
+
+    invoke-direct {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    sput-object v1, Landroid/provider/Settings$Secure;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "package"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v1
+
+    sput-object v1, Landroid/provider/Settings$Secure;->mPm:Landroid/content/pm/IPackageManager;
+
+    const/4 v1, 0x1
+
+    sput-boolean v1, Landroid/provider/Settings$Secure;->privacyMode:Z
+    :try_end_27
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_27} :catch_28
+
+    :goto_27
+    return-void
+
+    :catch_28
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v1, "PM,SecureSettings"
+
+    const-string v2, "Something went wrong with initalize variables"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    sput-boolean v1, Landroid/provider/Settings$Secure;->privacyMode:Z
+
+    goto :goto_27
+.end method
+
 .method public static final isLocationProviderEnabled(Landroid/content/ContentResolver;Ljava/lang/String;)Z
     .registers 3
 
diff -Npruw stock-framework/smali/android/service/wallpaper/WallpaperService$Engine.smali pdroid-framework/smali/android/service/wallpaper/WallpaperService$Engine.smali
--- stock-framework/smali/android/service/wallpaper/WallpaperService$Engine.smali	2014-01-02 21:10:19.640311270 -0600
+++ pdroid-framework/smali/android/service/wallpaper/WallpaperService$Engine.smali	2014-01-02 21:10:35.400310857 -0600
@@ -934,7 +934,7 @@
 
     invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
-    const-string v0, "mLayout="
+    const-string/jumbo v0, "mLayout="
 
     invoke-virtual {p3, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
@@ -946,7 +946,7 @@
 
     monitor-enter v1
 
-    :try_start_111
+    :try_start_112
     invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
     const-string/jumbo v0, "mPendingXOffset="
@@ -1003,7 +1003,7 @@
 
     iget-object v0, p0, Landroid/service/wallpaper/WallpaperService$Engine;->mPendingMove:Landroid/view/MotionEvent;
 
-    if-eqz v0, :cond_16b
+    if-eqz v0, :cond_16c
 
     invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
 
@@ -1015,17 +1015,17 @@
 
     invoke-virtual {p3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
 
-    :cond_16b
+    :cond_16c
     monitor-exit v1
 
     return-void
 
-    :catchall_16d
+    :catchall_16e
     move-exception v0
 
     monitor-exit v1
-    :try_end_16f
-    .catchall {:try_start_111 .. :try_end_16f} :catchall_16d
+    :try_end_170
+    .catchall {:try_start_112 .. :try_end_170} :catchall_16e
 
     throw v0
 .end method
diff -Npruw stock-framework/smali/android/speech/srec/MicrophoneInputStream.smali pdroid-framework/smali/android/speech/srec/MicrophoneInputStream.smali
--- stock-framework/smali/android/speech/srec/MicrophoneInputStream.smali	2014-01-02 21:10:19.648311269 -0600
+++ pdroid-framework/smali/android/speech/srec/MicrophoneInputStream.smali	2014-01-02 21:10:35.408310856 -0600
@@ -4,14 +4,30 @@
 
 
 # static fields
+.field private static final GOT_ERROR:I = -0x3
+
+.field private static final IS_ALLOWED:I = -0x1
+
+.field private static final IS_NOT_ALLOWED:I = -0x2
+
+.field private static final PRIVACY_TAG:Ljava/lang/String; = "PM,MicrophoneInputStream"
+
 .field private static final TAG:Ljava/lang/String; = "MicrophoneInputStream"
 
 
 # instance fields
+.field private context:Landroid/content/Context;
+
 .field private mAudioRecord:I
 
 .field private mOneByte:[B
 
+.field private mPm:Landroid/content/pm/IPackageManager;
+
+.field private pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+.field private privacyMode:Z
+
 
 # direct methods
 .method static constructor <clinit>()V
@@ -25,79 +41,167 @@
 .end method
 
 .method public constructor <init>(II)V
-    .registers 7
+    .registers 14
     .annotation system Ldalvik/annotation/Throws;
         value = {
             Ljava/io/IOException;
         }
     .end annotation
 
+    const/4 v5, 0x0
+
+    const/4 v3, 0x1
+
+    const/4 v2, 0x0
+
     invoke-direct {p0}, Ljava/io/InputStream;-><init>()V
 
-    const/4 v1, 0x0
+    iput-boolean v2, p0, Landroid/speech/srec/MicrophoneInputStream;->privacyMode:Z
 
-    iput v1, p0, Landroid/speech/srec/MicrophoneInputStream;->mAudioRecord:I
+    iput v2, p0, Landroid/speech/srec/MicrophoneInputStream;->mAudioRecord:I
 
-    const/4 v1, 0x1
+    new-array v0, v3, [B
 
-    new-array v1, v1, [B
+    iput-object v0, p0, Landroid/speech/srec/MicrophoneInputStream;->mOneByte:[B
 
-    iput-object v1, p0, Landroid/speech/srec/MicrophoneInputStream;->mOneByte:[B
+    iget-boolean v0, p0, Landroid/speech/srec/MicrophoneInputStream;->privacyMode:Z
 
-    invoke-static {p1, p2}, Landroid/speech/srec/MicrophoneInputStream;->AudioRecordNew(II)I
+    if-nez v0, :cond_15
+
+    invoke-direct {p0}, Landroid/speech/srec/MicrophoneInputStream;->initiate()V
+
+    :cond_15
+    invoke-direct {p0}, Landroid/speech/srec/MicrophoneInputStream;->checkIfPackagesAllowed()I
+
+    move-result v0
+
+    const/4 v1, -0x2
+
+    if-ne v0, v1, :cond_43
+
+    invoke-direct {p0, v2}, Landroid/speech/srec/MicrophoneInputStream;->dataAccess(Z)V
+
+    invoke-direct {p0}, Landroid/speech/srec/MicrophoneInputStream;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v7
+
+    if-eqz v7, :cond_3b
+
+    iget-object v0, p0, Landroid/speech/srec/MicrophoneInputStream;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v1, v7, v2
+
+    const-string/jumbo v4, "recordAudio"
 
-    move-result v1
+    iget-object v6, p0, Landroid/speech/srec/MicrophoneInputStream;->pSetMan:Landroid/privacy/PrivacySettingsManager;
 
-    iput v1, p0, Landroid/speech/srec/MicrophoneInputStream;->mAudioRecord:I
+    aget-object v9, v7, v2
 
-    iget v1, p0, Landroid/speech/srec/MicrophoneInputStream;->mAudioRecord:I
+    invoke-static {}, Landroid/os/Process;->myUid()I
 
-    if-nez v1, :cond_1d
+    move-result v10
 
-    new-instance v1, Ljava/io/IOException;
+    invoke-virtual {v6, v9, v10}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
 
-    const-string v2, "AudioRecord constructor failed - busy?"
+    move-result-object v6
 
-    invoke-direct {v1, v2}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
 
-    throw v1
+    :cond_3b
+    new-instance v0, Ljava/io/IOException;
 
-    :cond_1d
-    iget v1, p0, Landroid/speech/srec/MicrophoneInputStream;->mAudioRecord:I
+    const-string v1, "AudioRecord constructor failed - busy?"
 
-    invoke-static {v1}, Landroid/speech/srec/MicrophoneInputStream;->AudioRecordStart(I)I
+    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_43
+    invoke-direct {p0, v3}, Landroid/speech/srec/MicrophoneInputStream;->dataAccess(Z)V
+
+    invoke-direct {p0}, Landroid/speech/srec/MicrophoneInputStream;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v7
+
+    if-eqz v7, :cond_63
+
+    iget-object v0, p0, Landroid/speech/srec/MicrophoneInputStream;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v1, v7, v2
+
+    const-string/jumbo v4, "recordAudio"
+
+    iget-object v3, p0, Landroid/speech/srec/MicrophoneInputStream;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v6, v7, v2
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v9
+
+    invoke-virtual {v3, v6, v9}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    move v3, v2
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_63
+    invoke-static {p1, p2}, Landroid/speech/srec/MicrophoneInputStream;->AudioRecordNew(II)I
 
     move-result v0
 
-    if-eqz v0, :cond_41
+    iput v0, p0, Landroid/speech/srec/MicrophoneInputStream;->mAudioRecord:I
+
+    iget v0, p0, Landroid/speech/srec/MicrophoneInputStream;->mAudioRecord:I
+
+    if-nez v0, :cond_75
+
+    new-instance v0, Ljava/io/IOException;
+
+    const-string v1, "AudioRecord constructor failed - busy?"
+
+    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_75
+    iget v0, p0, Landroid/speech/srec/MicrophoneInputStream;->mAudioRecord:I
+
+    invoke-static {v0}, Landroid/speech/srec/MicrophoneInputStream;->AudioRecordStart(I)I
+
+    move-result v8
+
+    if-eqz v8, :cond_99
 
     invoke-virtual {p0}, Landroid/speech/srec/MicrophoneInputStream;->close()V
 
-    new-instance v1, Ljava/io/IOException;
+    new-instance v0, Ljava/io/IOException;
 
-    new-instance v2, Ljava/lang/StringBuilder;
+    new-instance v1, Ljava/lang/StringBuilder;
 
-    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
 
-    const-string v3, "AudioRecord start failed: "
+    const-string v2, "AudioRecord start failed: "
 
-    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    move-result-object v2
+    move-result-object v1
 
-    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    move-result-object v2
+    move-result-object v1
 
-    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    move-result-object v2
+    move-result-object v1
 
-    invoke-direct {v1, v2}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V
+    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V
 
-    throw v1
+    throw v0
 
-    :cond_41
+    :cond_99
     return-void
 .end method
 
@@ -131,6 +235,334 @@
     .end annotation
 .end method
 
+.method private checkIfPackagesAllowed()I
+    .registers 9
+
+    const/4 v5, -0x3
+
+    :try_start_1
+    iget-object v6, p0, Landroid/speech/srec/MicrophoneInputStream;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v6, :cond_41
+
+    const/4 v2, 0x0
+
+    invoke-direct {p0}, Landroid/speech/srec/MicrophoneInputStream;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v4
+
+    if-eqz v3, :cond_2c
+
+    const/4 v1, 0x0
+
+    :goto_11
+    array-length v6, v3
+
+    if-ge v1, v6, :cond_2a
+
+    iget-object v6, p0, Landroid/speech/srec/MicrophoneInputStream;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v7, v3, v1
+
+    invoke-virtual {v6, v7, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_26
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettings;->getRecordAudioSetting()B
+
+    move-result v6
+
+    if-eqz v6, :cond_26
+
+    const/4 v5, -0x2
+
+    :goto_25
+    return v5
+
+    :cond_26
+    const/4 v2, 0x0
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_11
+
+    :cond_2a
+    const/4 v5, -0x1
+
+    goto :goto_25
+
+    :cond_2c
+    const-string v6, "PM,MicrophoneInputStream"
+
+    const-string/jumbo v7, "return GOT_ERROR, because package_names are NULL"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_34
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_34} :catch_35
+
+    goto :goto_25
+
+    :catch_35
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v6, "PM,MicrophoneInputStream"
+
+    const-string v7, "Got exception in checkIfPackagesAllowed"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_25
+
+    :cond_41
+    :try_start_41
+    const-string v6, "PM,MicrophoneInputStream"
+
+    const-string/jumbo v7, "return GOT_ERROR, because pSetMan is NULL"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_49
+    .catch Ljava/lang/Exception; {:try_start_41 .. :try_end_49} :catch_35
+
+    goto :goto_25
+.end method
+
+.method private dataAccess(Z)V
+    .registers 7
+
+    invoke-direct {p0}, Landroid/speech/srec/MicrophoneInputStream;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v1
+
+    if-eqz p1, :cond_2f
+
+    if-eqz v1, :cond_2f
+
+    const/4 v0, 0x0
+
+    :goto_9
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_58
+
+    const-string v2, "PM,MicrophoneInputStream"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Allowed Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing microphone."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_9
+
+    :cond_2f
+    if-eqz v1, :cond_58
+
+    const/4 v0, 0x0
+
+    :goto_32
+    array-length v2, v1
+
+    if-ge v0, v2, :cond_58
+
+    const-string v2, "PM,MicrophoneInputStream"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Blocked Package: -"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    aget-object v4, v1, v0
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "- accessing microphone."
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_32
+
+    :cond_58
+    return-void
+.end method
+
+.method private getPackageName()[Ljava/lang/String;
+    .registers 6
+
+    :try_start_0
+    iget-object v3, p0, Landroid/speech/srec/MicrophoneInputStream;->mPm:Landroid/content/pm/IPackageManager;
+
+    if-eqz v3, :cond_f
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    iget-object v3, p0, Landroid/speech/srec/MicrophoneInputStream;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+
+    move-result-object v1
+
+    :goto_e
+    return-object v1
+
+    :cond_f
+    const-string/jumbo v3, "package"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    iput-object v3, p0, Landroid/speech/srec/MicrophoneInputStream;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v2
+
+    iget-object v3, p0, Landroid/speech/srec/MicrophoneInputStream;->mPm:Landroid/content/pm/IPackageManager;
+
+    invoke-interface {v3, v2}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+    :try_end_25
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_25} :catch_27
+
+    move-result-object v1
+
+    goto :goto_e
+
+    :catch_27
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v3, "PM,MicrophoneInputStream"
+
+    const-string/jumbo v4, "something went wrong with getting package name"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    goto :goto_e
+.end method
+
+.method private initiate()V
+    .registers 5
+
+    const/4 v1, 0x0
+
+    :try_start_1
+    iput-object v1, p0, Landroid/speech/srec/MicrophoneInputStream;->context:Landroid/content/Context;
+
+    new-instance v1, Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v2, p0, Landroid/speech/srec/MicrophoneInputStream;->context:Landroid/content/Context;
+
+    const-string/jumbo v3, "privacy"
+
+    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-static {v3}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v3
+
+    invoke-direct {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v1, p0, Landroid/speech/srec/MicrophoneInputStream;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string/jumbo v1, "package"
+
+    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-static {v1}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;
+
+    move-result-object v1
+
+    iput-object v1, p0, Landroid/speech/srec/MicrophoneInputStream;->mPm:Landroid/content/pm/IPackageManager;
+
+    const/4 v1, 0x1
+
+    iput-boolean v1, p0, Landroid/speech/srec/MicrophoneInputStream;->privacyMode:Z
+    :try_end_27
+    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_27} :catch_28
+
+    :goto_27
+    return-void
+
+    :catch_28
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    const-string v1, "PM,MicrophoneInputStream"
+
+    const-string v2, "Something went wrong with initalize variables"
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    iput-boolean v1, p0, Landroid/speech/srec/MicrophoneInputStream;->privacyMode:Z
+
+    goto :goto_27
+.end method
+
 
 # virtual methods
 .method public close()V
diff -Npruw stock-framework/smali/android/telephony/PhoneStateListener$1.smali pdroid-framework/smali/android/telephony/PhoneStateListener$1.smali
--- stock-framework/smali/android/telephony/PhoneStateListener$1.smali	2014-01-02 21:10:19.676311269 -0600
+++ pdroid-framework/smali/android/telephony/PhoneStateListener$1.smali	2014-01-02 21:10:35.440310855 -0600
@@ -64,23 +64,196 @@
 .end method
 
 .method public onCallStateChanged(ILjava/lang/String;)V
-    .registers 6
+    .registers 19
 
-    iget-object v0, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+    move-object/from16 v0, p0
 
-    iget-object v0, v0, Landroid/telephony/PhoneStateListener;->mHandler:Landroid/os/Handler;
+    iget-object v3, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
 
-    const/16 v1, 0x20
+    #getter for: Landroid/telephony/PhoneStateListener;->context:Landroid/content/Context;
+    invoke-static {v3}, Landroid/telephony/PhoneStateListener;->access$000(Landroid/telephony/PhoneStateListener;)Landroid/content/Context;
 
-    const/4 v2, 0x0
+    move-result-object v3
 
-    invoke-static {v0, v1, p1, v2, p2}, Landroid/os/Message;->obtain(Landroid/os/Handler;IIILjava/lang/Object;)Landroid/os/Message;
+    if-eqz v3, :cond_99
 
-    move-result-object v0
+    if-eqz p2, :cond_99
 
-    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V
+    invoke-virtual/range {p2 .. p2}, Ljava/lang/String;->isEmpty()Z
+
+    move-result v3
+
+    if-nez v3, :cond_99
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->context:Landroid/content/Context;
+    invoke-static {v3}, Landroid/telephony/PhoneStateListener;->access$000(Landroid/telephony/PhoneStateListener;)Landroid/content/Context;
+
+    move-result-object v3
+
+    const-string/jumbo v4, "privacy"
+
+    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->packageName:Ljava/lang/String;
+    invoke-static {v3}, Landroid/telephony/PhoneStateListener;->access$100(Landroid/telephony/PhoneStateListener;)Ljava/lang/String;
+
+    move-result-object v3
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->uid:I
+    invoke-static {v4}, Landroid/telephony/PhoneStateListener;->access$200(Landroid/telephony/PhoneStateListener;)I
+
+    move-result v4
+
+    invoke-virtual {v2, v3, v4}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_6a
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getIncomingCallsSetting()B
+
+    move-result v3
+
+    if-eqz v3, :cond_6a
+
+    const-string v7, ""
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    iget-object v3, v3, Landroid/telephony/PhoneStateListener;->mHandler:Landroid/os/Handler;
+
+    const/16 v4, 0x20
+
+    const/4 v5, 0x0
+
+    move/from16 v0, p1
 
+    invoke-static {v3, v4, v0, v5, v7}, Landroid/os/Message;->obtain(Landroid/os/Handler;IIILjava/lang/Object;)Landroid/os/Message;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Landroid/os/Message;->sendToTarget()V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->packageName:Ljava/lang/String;
+    invoke-static {v3}, Landroid/telephony/PhoneStateListener;->access$100(Landroid/telephony/PhoneStateListener;)Ljava/lang/String;
+
+    move-result-object v3
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->uid:I
+    invoke-static {v4}, Landroid/telephony/PhoneStateListener;->access$200(Landroid/telephony/PhoneStateListener;)I
+
+    move-result v4
+
+    const/4 v5, 0x1
+
+    const-string v6, "incomingCall"
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :goto_69
     return-void
+
+    :cond_6a
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    iget-object v3, v3, Landroid/telephony/PhoneStateListener;->mHandler:Landroid/os/Handler;
+
+    const/16 v4, 0x20
+
+    const/4 v5, 0x0
+
+    move/from16 v0, p1
+
+    move-object/from16 v1, p2
+
+    invoke-static {v3, v4, v0, v5, v1}, Landroid/os/Message;->obtain(Landroid/os/Handler;IIILjava/lang/Object;)Landroid/os/Message;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Landroid/os/Message;->sendToTarget()V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->packageName:Ljava/lang/String;
+    invoke-static {v3}, Landroid/telephony/PhoneStateListener;->access$100(Landroid/telephony/PhoneStateListener;)Ljava/lang/String;
+
+    move-result-object v10
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->uid:I
+    invoke-static {v3}, Landroid/telephony/PhoneStateListener;->access$200(Landroid/telephony/PhoneStateListener;)I
+
+    move-result v11
+
+    const/4 v12, 0x0
+
+    const-string v13, "incomingCall"
+
+    move-object v9, v2
+
+    move-object/from16 v14, p2
+
+    move-object v15, v8
+
+    invoke-virtual/range {v9 .. v15}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_69
+
+    :cond_99
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    iget-object v3, v3, Landroid/telephony/PhoneStateListener;->mHandler:Landroid/os/Handler;
+
+    const/16 v4, 0x20
+
+    const/4 v5, 0x0
+
+    move/from16 v0, p1
+
+    move-object/from16 v1, p2
+
+    invoke-static {v3, v4, v0, v5, v1}, Landroid/os/Message;->obtain(Landroid/os/Handler;IIILjava/lang/Object;)Landroid/os/Message;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Landroid/os/Message;->sendToTarget()V
+
+    goto :goto_69
 .end method
 
 .method public onCellInfoChanged(Ljava/util/List;)V
@@ -113,27 +286,124 @@
 .end method
 
 .method public onCellLocationChanged(Landroid/os/Bundle;)V
-    .registers 6
+    .registers 10
+
+    const/4 v5, 0x0
 
     const/4 v3, 0x0
 
     invoke-static {p1}, Landroid/telephony/CellLocation;->newFromBundle(Landroid/os/Bundle;)Landroid/telephony/CellLocation;
 
+    move-result-object v7
+
+    iget-object v1, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->context:Landroid/content/Context;
+    invoke-static {v1}, Landroid/telephony/PhoneStateListener;->access$000(Landroid/telephony/PhoneStateListener;)Landroid/content/Context;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_4a
+
+    iget-object v1, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->context:Landroid/content/Context;
+    invoke-static {v1}, Landroid/telephony/PhoneStateListener;->access$000(Landroid/telephony/PhoneStateListener;)Landroid/content/Context;
+
+    move-result-object v1
+
+    const-string/jumbo v2, "privacy"
+
+    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
     move-result-object v0
 
+    check-cast v0, Landroid/privacy/PrivacySettingsManager;
+
+    iget-object v1, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->packageName:Ljava/lang/String;
+    invoke-static {v1}, Landroid/telephony/PhoneStateListener;->access$100(Landroid/telephony/PhoneStateListener;)Ljava/lang/String;
+
+    move-result-object v1
+
+    iget-object v2, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->uid:I
+    invoke-static {v2}, Landroid/telephony/PhoneStateListener;->access$200(Landroid/telephony/PhoneStateListener;)I
+
+    move-result v2
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_4b
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v1
+
+    if-eqz v1, :cond_4b
+
+    iget-object v1, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->packageName:Ljava/lang/String;
+    invoke-static {v1}, Landroid/telephony/PhoneStateListener;->access$100(Landroid/telephony/PhoneStateListener;)Ljava/lang/String;
+
+    move-result-object v1
+
+    iget-object v2, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->uid:I
+    invoke-static {v2}, Landroid/telephony/PhoneStateListener;->access$200(Landroid/telephony/PhoneStateListener;)I
+
+    move-result v2
+
+    invoke-virtual {v6}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v3
+
+    const-string v4, "locationNetwork"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_4a
+    :goto_4a
+    return-void
+
+    :cond_4b
     iget-object v1, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
 
     iget-object v1, v1, Landroid/telephony/PhoneStateListener;->mHandler:Landroid/os/Handler;
 
     const/16 v2, 0x10
 
-    invoke-static {v1, v2, v3, v3, v0}, Landroid/os/Message;->obtain(Landroid/os/Handler;IIILjava/lang/Object;)Landroid/os/Message;
+    invoke-static {v1, v2, v3, v3, v7}, Landroid/os/Message;->obtain(Landroid/os/Handler;IIILjava/lang/Object;)Landroid/os/Message;
 
     move-result-object v1
 
     invoke-virtual {v1}, Landroid/os/Message;->sendToTarget()V
 
-    return-void
+    iget-object v1, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->packageName:Ljava/lang/String;
+    invoke-static {v1}, Landroid/telephony/PhoneStateListener;->access$100(Landroid/telephony/PhoneStateListener;)Ljava/lang/String;
+
+    move-result-object v1
+
+    iget-object v2, p0, Landroid/telephony/PhoneStateListener$1;->this$0:Landroid/telephony/PhoneStateListener;
+
+    #getter for: Landroid/telephony/PhoneStateListener;->uid:I
+    invoke-static {v2}, Landroid/telephony/PhoneStateListener;->access$200(Landroid/telephony/PhoneStateListener;)I
+
+    move-result v2
+
+    const-string v4, "locationNetwork"
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_4a
 .end method
 
 .method public onDataActivity(I)V
diff -Npruw stock-framework/smali/android/telephony/PhoneStateListener.smali pdroid-framework/smali/android/telephony/PhoneStateListener.smali
--- stock-framework/smali/android/telephony/PhoneStateListener.smali	2014-01-02 21:10:18.908311289 -0600
+++ pdroid-framework/smali/android/telephony/PhoneStateListener.smali	2014-01-02 21:10:34.436310882 -0600
@@ -31,12 +31,20 @@
 
 .field public static final LISTEN_SIGNAL_STRENGTHS:I = 0x100
 
+.field private static final TAG:Ljava/lang/String; = "PhoneStateListener"
+
 
 # instance fields
 .field callback:Lcom/android/internal/telephony/IPhoneStateListener;
 
+.field private context:Landroid/content/Context;
+
 .field mHandler:Landroid/os/Handler;
 
+.field private packageName:Ljava/lang/String;
+
+.field private uid:I
+
 
 # direct methods
 .method public constructor <init>()V
@@ -59,6 +67,30 @@
     return-void
 .end method
 
+.method static synthetic access$000(Landroid/telephony/PhoneStateListener;)Landroid/content/Context;
+    .registers 2
+
+    iget-object v0, p0, Landroid/telephony/PhoneStateListener;->context:Landroid/content/Context;
+
+    return-object v0
+.end method
+
+.method static synthetic access$100(Landroid/telephony/PhoneStateListener;)Ljava/lang/String;
+    .registers 2
+
+    iget-object v0, p0, Landroid/telephony/PhoneStateListener;->packageName:Ljava/lang/String;
+
+    return-object v0
+.end method
+
+.method static synthetic access$200(Landroid/telephony/PhoneStateListener;)I
+    .registers 2
+
+    iget v0, p0, Landroid/telephony/PhoneStateListener;->uid:I
+
+    return v0
+.end method
+
 
 # virtual methods
 .method public onCallForwardingIndicatorChanged(Z)V
@@ -143,3 +175,27 @@
 
     return-void
 .end method
+
+.method public setContext(Landroid/content/Context;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/telephony/PhoneStateListener;->context:Landroid/content/Context;
+
+    return-void
+.end method
+
+.method public setPackageName(Ljava/lang/String;)V
+    .registers 2
+
+    iput-object p1, p0, Landroid/telephony/PhoneStateListener;->packageName:Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public setUid(I)V
+    .registers 2
+
+    iput p1, p0, Landroid/telephony/PhoneStateListener;->uid:I
+
+    return-void
+.end method
diff -Npruw stock-framework/smali/android/telephony/ServiceState.smali pdroid-framework/smali/android/telephony/ServiceState.smali
--- stock-framework/smali/android/telephony/ServiceState.smali	2014-01-02 21:10:19.680311269 -0600
+++ pdroid-framework/smali/android/telephony/ServiceState.smali	2014-01-02 21:10:35.440310855 -0600
@@ -875,74 +875,6 @@
     return-void
 .end method
 
-.method private setNullState(I)V
-    .registers 8
-
-    const/4 v5, 0x0
-
-    const/4 v4, 0x0
-
-    const/4 v3, -0x1
-
-    const-string v0, "PHONE"
-
-    new-instance v1, Ljava/lang/StringBuilder;
-
-    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
-
-    const-string v2, "[ServiceState] setNullState="
-
-    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
-    move-result-object v1
-
-    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
-
-    move-result-object v1
-
-    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
-
-    move-result-object v1
-
-    invoke-static {v0, v1}, Landroid/telephony/Rlog;->d(Ljava/lang/String;Ljava/lang/String;)I
-
-    iput p1, p0, Landroid/telephony/ServiceState;->mVoiceRegState:I
-
-    iput p1, p0, Landroid/telephony/ServiceState;->mDataRegState:I
-
-    iput-boolean v4, p0, Landroid/telephony/ServiceState;->mRoaming:Z
-
-    iput-object v5, p0, Landroid/telephony/ServiceState;->mOperatorAlphaLong:Ljava/lang/String;
-
-    iput-object v5, p0, Landroid/telephony/ServiceState;->mOperatorAlphaShort:Ljava/lang/String;
-
-    iput-object v5, p0, Landroid/telephony/ServiceState;->mOperatorNumeric:Ljava/lang/String;
-
-    iput-boolean v4, p0, Landroid/telephony/ServiceState;->mIsManualNetworkSelection:Z
-
-    iput v4, p0, Landroid/telephony/ServiceState;->mRilVoiceRadioTechnology:I
-
-    iput v4, p0, Landroid/telephony/ServiceState;->mRilDataRadioTechnology:I
-
-    iput-boolean v4, p0, Landroid/telephony/ServiceState;->mCssIndicator:Z
-
-    iput v3, p0, Landroid/telephony/ServiceState;->mNetworkId:I
-
-    iput v3, p0, Landroid/telephony/ServiceState;->mSystemId:I
-
-    iput v3, p0, Landroid/telephony/ServiceState;->mCdmaRoamingIndicator:I
-
-    iput v3, p0, Landroid/telephony/ServiceState;->mCdmaDefaultRoamingIndicator:I
-
-    iput v3, p0, Landroid/telephony/ServiceState;->mCdmaEriIconIndex:I
-
-    iput v3, p0, Landroid/telephony/ServiceState;->mCdmaEriIconMode:I
-
-    iput-boolean v4, p0, Landroid/telephony/ServiceState;->mIsEmergencyOnly:Z
-
-    return-void
-.end method
-
 
 # virtual methods
 .method protected copyFrom(Landroid/telephony/ServiceState;)V
@@ -1798,6 +1730,74 @@
     return-void
 .end method
 
+.method setNullState(I)V
+    .registers 8
+
+    const/4 v5, 0x0
+
+    const/4 v4, 0x0
+
+    const/4 v3, -0x1
+
+    const-string v0, "PHONE"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "[ServiceState] setNullState="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/telephony/Rlog;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    iput p1, p0, Landroid/telephony/ServiceState;->mVoiceRegState:I
+
+    iput p1, p0, Landroid/telephony/ServiceState;->mDataRegState:I
+
+    iput-boolean v4, p0, Landroid/telephony/ServiceState;->mRoaming:Z
+
+    iput-object v5, p0, Landroid/telephony/ServiceState;->mOperatorAlphaLong:Ljava/lang/String;
+
+    iput-object v5, p0, Landroid/telephony/ServiceState;->mOperatorAlphaShort:Ljava/lang/String;
+
+    iput-object v5, p0, Landroid/telephony/ServiceState;->mOperatorNumeric:Ljava/lang/String;
+
+    iput-boolean v4, p0, Landroid/telephony/ServiceState;->mIsManualNetworkSelection:Z
+
+    iput v4, p0, Landroid/telephony/ServiceState;->mRilVoiceRadioTechnology:I
+
+    iput v4, p0, Landroid/telephony/ServiceState;->mRilDataRadioTechnology:I
+
+    iput-boolean v4, p0, Landroid/telephony/ServiceState;->mCssIndicator:Z
+
+    iput v3, p0, Landroid/telephony/ServiceState;->mNetworkId:I
+
+    iput v3, p0, Landroid/telephony/ServiceState;->mSystemId:I
+
+    iput v3, p0, Landroid/telephony/ServiceState;->mCdmaRoamingIndicator:I
+
+    iput v3, p0, Landroid/telephony/ServiceState;->mCdmaDefaultRoamingIndicator:I
+
+    iput v3, p0, Landroid/telephony/ServiceState;->mCdmaEriIconIndex:I
+
+    iput v3, p0, Landroid/telephony/ServiceState;->mCdmaEriIconMode:I
+
+    iput-boolean v4, p0, Landroid/telephony/ServiceState;->mIsEmergencyOnly:Z
+
+    return-void
+.end method
+
 .method public setOperatorAlphaLong(Ljava/lang/String;)V
     .registers 2
 
@@ -1885,7 +1885,7 @@
 
     const/4 v0, 0x3
 
-    invoke-direct {p0, v0}, Landroid/telephony/ServiceState;->setNullState(I)V
+    invoke-virtual {p0, v0}, Landroid/telephony/ServiceState;->setNullState(I)V
 
     return-void
 .end method
@@ -1895,7 +1895,7 @@
 
     const/4 v0, 0x1
 
-    invoke-direct {p0, v0}, Landroid/telephony/ServiceState;->setNullState(I)V
+    invoke-virtual {p0, v0}, Landroid/telephony/ServiceState;->setNullState(I)V
 
     return-void
 .end method
diff -Npruw stock-framework/smali/android/widget/TextView.smali pdroid-framework/smali/android/widget/TextView.smali
--- stock-framework/smali/android/widget/TextView.smali	2014-01-02 21:10:18.840311291 -0600
+++ pdroid-framework/smali/android/widget/TextView.smali	2014-01-02 21:10:34.352310884 -0600
@@ -9381,7 +9381,7 @@
 
     iget-object v1, p0, Landroid/widget/TextView;->mText:Ljava/lang/CharSequence;
 
-    if-eqz v1, :cond_bf
+    if-eqz v1, :cond_c0
 
     new-instance v1, Ljava/lang/StringBuilder;
 
@@ -9415,7 +9415,7 @@
 
     iget-object v1, p0, Landroid/widget/TextView;->mLayout:Landroid/text/Layout;
 
-    if-eqz v1, :cond_b9
+    if-eqz v1, :cond_ba
 
     new-instance v1, Ljava/lang/StringBuilder;
 
@@ -9425,7 +9425,7 @@
 
     move-result-object v1
 
-    const-string v2, "mLayout width="
+    const-string/jumbo v2, "mLayout width="
 
     invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
@@ -9461,15 +9461,15 @@
 
     move-result-object v0
 
-    :cond_b9
-    :goto_b9
+    :cond_ba
+    :goto_ba
     const-string v1, "View"
 
     invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     return-void
 
-    :cond_bf
+    :cond_c0
     new-instance v1, Ljava/lang/StringBuilder;
 
     invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
@@ -9488,7 +9488,7 @@
 
     move-result-object v0
 
-    goto :goto_b9
+    goto :goto_ba
 .end method
 
 .method protected deleteText_internal(II)V
diff -Npruw stock-framework/smali/com/android/internal/os/BatteryStatsImpl$BatchTimer.smali pdroid-framework/smali/com/android/internal/os/BatteryStatsImpl$BatchTimer.smali
--- stock-framework/smali/com/android/internal/os/BatteryStatsImpl$BatchTimer.smali	2014-01-02 21:10:20.236311254 -0600
+++ pdroid-framework/smali/com/android/internal/os/BatteryStatsImpl$BatchTimer.smali	2014-01-02 21:10:36.160310837 -0600
@@ -268,7 +268,7 @@
 
     move-result-object v0
 
-    const-string v1, "mLastAddedTime="
+    const-string/jumbo v1, "mLastAddedTime="
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
diff -Npruw stock-framework/smali/com/android/internal/os/BatteryStatsImpl$Timer.smali pdroid-framework/smali/com/android/internal/os/BatteryStatsImpl$Timer.smali
--- stock-framework/smali/com/android/internal/os/BatteryStatsImpl$Timer.smali	2014-01-02 21:10:20.236311254 -0600
+++ pdroid-framework/smali/com/android/internal/os/BatteryStatsImpl$Timer.smali	2014-01-02 21:10:36.156310837 -0600
@@ -368,7 +368,7 @@
 
     move-result-object v0
 
-    const-string v1, "mLastTime="
+    const-string/jumbo v1, "mLastTime="
 
     invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
